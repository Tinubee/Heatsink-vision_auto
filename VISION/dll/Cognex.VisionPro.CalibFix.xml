<?xml version="1.0"?><doc><assembly><name>Cognex.VisionPro.CalibFix</name></assembly><members><member name="T:Cognex.VisionPro.Exceptions.CogCalibFixNPointTooFewPointsException"><summary>The exception that is thrown when you attempt to compute an N-Point calibration or N-Point fixture using too few points.  The number of points required depends upon the value of <see cref="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.DOFsToCompute" />.</summary></member><member name="T:Cognex.VisionPro.Exceptions.CogCalibFixNPointUnstableException"><summary>The exception that is thrown when you attempt to compute an N-Point calibration or N-Point fixture using points whose configuration is numerically unstable or ambiguous.  For example, this exception will occur if all points lie along the x-axis and the requested value of <see cref="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.DOFsToCompute" /> asks to measure the amount of scaling along the y-axis.</summary></member><member name="T:Cognex.VisionPro.Exceptions.CogCalibFixNotCalibratedException"><summary>The exception that is thrown when you attempt to perform a calibration using an object whose Calibrated property is False.</summary></member><member name="T:Cognex.VisionPro.Exceptions.CogCalibFixCannotWarpException"><summary>The exception that is thrown during a nonlinear checkerboard calibration when either: (1) the input image does not contain all the pixels required by the nonlinear warper, or (2) the transform between the selected space of the input image and its pixels differs by more than a whole-pixel shift from the similar transformation object contained in the CalibrationImage.</summary></member><member name="T:Cognex.VisionPro.Exceptions.CogCalibFixBadDestRectException"><summary>The exception that is thrown when the <see cref="P:Cognex.VisionPro.CalibFix.ICogCalibCheckerboardWarpParams.WarpDestinationRectangle" /> does not intersect any filled pixels of the undistorted image.</summary></member><member name="T:Cognex.VisionPro.Exceptions.CogCalibFixNoCalibrationImageException"><summary>The exception that is thrown when you attempt to calibrate using a null CalibrationImage.</summary></member><member name="T:Cognex.VisionPro.Exceptions.CogCalibFixNoFiducialException"><summary>The exception that is thrown when a fiducial mark was expected, but not found, during a call to <see cref="M:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Calibrate" />.</summary></member><member name="T:Cognex.VisionPro.Exceptions.CogCalibFixTooFewVerticesException"><summary>The exception that is thrown when you call <see cref="M:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Calibrate" /> and fewer than nine tile vertices are found.</summary></member><member name="T:Cognex.VisionPro.Exceptions.CogCalibFixCheckerboardMathUnstableException"><summary>The exception that is thrown when a <see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboard" /> cannot be calibrated because the located tile vertices yield a numerically unstable result.  If this occurs please verify that you have supplied a well-focused high-contrast image of the calibration plate. Use the diagnostic graphics to make sure that the tile vertices have been locate correctly, and make sure that you have specified correct values for the tile size.</summary></member><member name="T:Cognex.VisionPro.Exceptions.CogCalibFixTooFewDotsException"><summary>The exception that is thrown when a <see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboard" /> cannot be calibrated because the CalibrationImage contains too few valid dots. At least 16 valid dots must be found. Please provide a well-focused, high-contrast CalibrationImage that contains a sufficient number of valid dots.</summary></member><member name="T:Cognex.VisionPro.Exceptions.CogCalibFixDotGridMathUnstableException"><summary>The exception that is thrown when a <see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboard" /> cannot be calibrated because the dots yield a numerically unstable result. Please verify that you are providing a well-focused, high-contrast image of a valid grid of dots calibration plate. Also verify that the dot centers were found correctly and that the physical tile size is accurate.</summary></member><member name="T:Cognex.VisionPro.Exceptions.CogCalibFixNoDotSpacingMarkException"><summary>The exception that is thrown when a <see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboard" /> cannot be calibrated because the axis-identifying spacing mark(s) appear to be missing from the fiducial.</summary></member><member name="T:Cognex.VisionPro.Exceptions.CogCalibFixDotCorrespondenceFailedException"><summary>The exception that is thrown when a <see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboard" /> cannot be calibrated because the dot correspondence has failed.</summary></member><member name="T:Cognex.VisionPro.Exceptions.CogCalibFixDotFeatureAnalysisFailedException"><summary>The exception that is thrown when a <see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboard" /> cannot be calibrated because dot feature analysis has failed.</summary></member><member name="T:Cognex.VisionPro.Exceptions.CogCalibFixLinescanNotLinearInYException"><summary>The exception that is thrown when a <see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboard" /> cannot be calibrated because the computed transform is not linear in Y.</summary></member><member name="T:Cognex.VisionPro.Exceptions.CogCalibFixLinescanCalibrationImageRotatedException"><summary>The exception that is thrown when a <see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboard" /> cannot be calibrated because the linescan calibration image is rotated.</summary></member><member name="T:Cognex.VisionPro.Exceptions.CogCalibFixWarperOutOfMemoryException"><summary>The exception that is thrown when a <see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboard" /> nonlinear calibration fails because the warper could not allocate a sufficiently large destination image. This may be because the computed distortion is very large.</summary></member><member name="T:Cognex.VisionPro.Exceptions.CogCalibFixDataMatrixNotFoundException"><summary>The exception that is thrown when a DataMatrix fiducial was expected but not found.</summary></member><member name="T:Cognex.VisionPro.Exceptions.CogCalibFixDataMatrixDecodeErrorException"><summary>The exception that is thrown when a DataMatrix fiducial was expected, but no DataMatrix code that was successfully found could be successfully decoded.</summary></member><member name="T:Cognex.VisionPro.Exceptions.CogCalibFixDataMatrixParseErrorException"><summary>The exception that is thrown when a DataMatrix fiducial was expected, but no DataMatrix code that was successfully decoded could be successfully parsed.</summary></member><member name="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboard"><remarks><PARA>
	The primary interface of the <see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboard" /> object. Lets you 
	define a 
	<see cref="u:Framework.CalibrationAndFixturing.Theory.CalibFixtures" cgnxAnchor="uncalibrated_raw_calibrated_and_calibrated_coord">calibrated coordinate space</see> using an image of a <see cref="u:Framework.CalibrationAndFixturing.Theory.CalibPlates">checkerboard calibration plate</see>.  
	It allows you to attach the calibrated space to an image, and may also perform a 
	<see cref="u:Framework.CalibrationAndFixturing.Theory.NonlinearCalib" cgnxAnchor="image_warping">nonlinear warping</see> of that image.
	</PARA></remarks><summary>The CogCalibCheckerboard object defines a calibrated coordinate space using an image of a checkerboard calibration plate.  It allows you to attach the calibrated space to an image, and may also perform a nonlinear warping of that image.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.#ctor(Cognex.VisionPro.CalibFix.CogCalibCheckerboard)"><param name="other">The instance to copy from.</param><summary>Constructs a new instance of this class as a deep copy of the given instance.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.#ctor"><summary>Constructs a new instance of this class.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.#ctor(System.IntPtr)"><param name="impl">n/a</param><summary>Constructs a new instance of this class using com pointer.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfWarpMaxErrorInPixels"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by WarpMaxErrorInPixels may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfWarpDestinationRectangle"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by WarpDestinationRectangle may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfWarpScaling"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by WarpScaling may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfWarpRotation"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by WarpRotation may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfUndistortedCalibrationImage"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by UndistortedCalibrationImage may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfUndistortedCalibrationImageMask"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by UndistortedCalibrationImageMask may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfOutputImageMask"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by OutputImageMask may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetOutputImageRootFromCalibratedTransform"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by GetOutputImageRootFromCalibratedTransform may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibrationImage"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by CalibrationImage may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfPhysicalTileSizeX"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by PhysicalTileSizeX may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfPhysicalTileSizeY"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by PhysicalTileSizeY may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfFiducialMark"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by FiducialMark may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfNumPoints"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by NumPoints may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetUncalibratedPointX"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by GetUncalibratedPointX may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetUncalibratedPointY"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by GetUncalibratedPointY may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetRawCalibratedPointX"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by GetRawCalibratedPointX may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetRawCalibratedPointY"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by GetRawCalibratedPointY may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfDOFsToCompute"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by DOFsToCompute may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfComputationMode"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by ComputationMode may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibratedOriginX"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by CalibratedOriginX may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibratedOriginY"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by CalibratedOriginY may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibratedOriginSpace"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by CalibratedOriginSpace may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibratedXAxisRotation"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by CalibratedXAxisRotation may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibratedXAxisRotationSpace"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by CalibratedXAxisRotationSpace may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfSwapCalibratedHandedness"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by SwapCalibratedHandedness may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibrated"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Calibrated may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetComputedUncalibratedFromCalibratedTransform"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by GetComputedUncalibratedFromCalibratedTransform may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetComputedUncalibratedFromRawCalibratedTransform"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by GetComputedUncalibratedFromRawCalibratedTransform may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfComputedRMSError"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by ComputedRMSError may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetInfoStrings"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by GetInfoStrings may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfFeatureFinder"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by FeatureFinder may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfLinescanDistanceToTarget"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by LinescanDistanceToTarget may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfLinescanDistanceToTargetEnabled"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by LinescanDistanceToTargetEnabled may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfExternalEnabled"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by ExternalEnabled may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfDataMatrixTimeout"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by DataMatrixTimeout may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfDataMatrixTimeoutEnabled"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by DataMatrixTimeoutEnabled may have changed.</summary></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.OwnedWarpParams"><remarks><PARA>
	This property returns 
	an <see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboard" /> interface reference that provides access 
	to all of the nonlinear warping parameters and results.  
	The returned 
	<see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboard" /> interface is a different interface 
	of this COM object, as shown in the following example:
</PARA><CODE LANGUAGE="VB">
Dim myCogCalibCheckerboard As New CogCalibCheckerboard
Dim myWarpParams As ICogCalibCheckerboardWarpParams

<COMMENTLINE>The following two lines set myWarpParams to the same value</COMMENTLINE>
Set myWarpParams = myCogCalibCheckerboard.WarpParams

Set myWarpParams = myCogCalibCheckerboard

</CODE><PARA>
This function lets you write more concise code. Using this function you could write
</PARA><CODE LANGUAGE="VB">
 myCogCalibCheckerboard.WarpParams.WarpScaling = 1.2
</CODE><PARA>
instead of 
</PARA><CODE LANGUAGE="VB">
Dim myWarpParams as ICogCalibCheckerboardWarpParams
Set myWarpParams = myCogCalibCheckerboard.WarpParams
myWarpParams.WarpScaling = 1.2
</CODE></remarks><value>An interface containing the nonlinear warping parameters and results for this calibration.</value><summary>Gets the nonlinear warping parameters and results.  These items are owned by this calibration object, but are conveniently grouped together inside the returned interface.</summary></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.ComputedRMSError"><remarks><PARA>Returns the 
	<see cref="u:Framework.CalibrationAndFixturing.Theory.CalibFixtures" cgnxAnchor="rms_error_and_degrees_of_freedom_dofs">root mean squared error</see> 
	between the uncalibrated points and the mapped raw calibrated points, expressed in uncalibrated space.  It is valid if the computed uncalibrated from raw calibrated transform exists.  Otherwise, zero is returned.</PARA><PARA>
	In most cases, a large value for this property indicates that you have specified 
	<see cref="T:Cognex.VisionPro.CalibFix.CogCalibFixComputationModeConstants">Linear</see> for the 
	<see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.ComputationMode" /> when the supplied <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.CalibrationImage" /> exhibits significant 
	perspective or radial distortion.
	</PARA><DEFAULT>0.0</DEFAULT></remarks><summary>Returns the root mean squared error between the uncalibrated points and the mapped raw calibrated points, expressed in uncalibrated space.  It is valid if the computed uncalibrated from raw calibrated transform exists.  Otherwise, zero is returned.</summary></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Calibrated"><remarks><PARA>
	True if all of the computed outputs of this object are meaningful, and were computed using the current object properties.  
<see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Calibrated" /> is only true if <see cref="M:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Calibrate" /> has been called at least once 
<ITALIC>and</ITALIC> none of the object properties have been changed since the last call to <see cref="M:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Calibrate" />.	
	</PARA><DEFAULT>False</DEFAULT></remarks><summary>True if all of the computed outputs of this object are meaningful, and were computed using the current object properties.  This can only happen if the Calibrate method is called and none of the object properties are changed afterwards.</summary></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SwapCalibratedHandedness"><summary>Specifies the handedness of the calibrated space.   When SwapCalibratedHandedness is false, the calibrated space will have the same handedness as the raw (unadjusted) calibrated space.  Otherwise, it will have the opposite handedness.</summary><event cref="E:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogCalibCheckerboard_SwapCalibratedHandedness--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfSwapCalibratedHandedness" /></li></ul></event><event cref="E:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Changed" cgnxEvent="multiState"><para>
		
Fires when the value of this property changes and full or partial calibration is completed.
The actual state flags affected depend on which <see cref="u:Framework.CalibrationAndFixturing.Theory.CheckCalibSteps">calibration steps</see> were completed.
	<TABLE><HEADING><ROW><CELL>Calibration Step</CELL><CELL>State Flags Affected</CELL></ROW></HEADING><BODY><ROW><CELL>Step 5 and higher</CELL><CELL><ul><!--FA:cogFA_CalibCheckerboard_ComputeResults--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibrated" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetComputedUncalibratedFromCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetComputedUncalibratedFromRawCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfComputedRMSError" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetInfoStrings" /></li></ul></CELL></ROW><ROW><CELL>Step 5 and higher with nonlinear warping</CELL><CELL><ul><!--FA:cogFA_CalibCheckerboard_WarpResults--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetOutputImageRootFromCalibratedTransform" /> (step 5 and higher with nonlinear warping)</li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfOutputImageMask" /> (step 5 and higher with nonlinear warping)</li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfUndistortedCalibrationImage" /> (step 5 and higher with nonlinear warping)</li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfUndistortedCalibrationImageMask" /> (step 5 and higher with nonlinear warping)</li></ul></CELL></ROW></BODY></TABLE></para></event><remarks><PARA>Specifies the handedness of the calibrated space.   When SwapCalibratedHandedness is false, the calibrated space will have the same handedness as the raw (unadjusted) calibrated space.  Otherwise, it will have the opposite handedness.</PARA><PARA>
In almost all cases, the raw (unadjusted) calibrated space will have a left-handed coordinate system.
</PARA><DEFAULT>
False.
</DEFAULT></remarks></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.CalibratedXAxisRotationSpace"><summary>Specifies whether the CalibratedXAxisRotation property is expressed in uncalibrated space, or in raw calibrated space.</summary><event cref="E:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes and the object has not been calibrated. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogCalibCheckerboard_CalibratedXAxisRotationSpace--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibratedXAxisRotationSpace" /></li></ul></event><event cref="E:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Changed" cgnxEvent="multiState"><para>
		
Fires when the value of this property changes and full or partial calibration is completed.
</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_Misc--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibrationImage" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfPhysicalTileSizeX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfPhysicalTileSizeY" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfFiducialMark" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfDOFsToCompute" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfComputationMode" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibratedOriginX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibratedOriginY" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibratedOriginSpace" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibratedXAxisRotation" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibratedXAxisRotationSpace" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfSwapCalibratedHandedness" /></li><!--FA:cogFA_CalibCheckerboard_ComputeResults--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibrated" /> (step 5 and higher)</li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetComputedUncalibratedFromCalibratedTransform" /> (step 5 and higher)</li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetComputedUncalibratedFromRawCalibratedTransform" /> (step 5 and higher)</li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfComputedRMSError" /> (step 5 and higher)</li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetInfoStrings" /> (step 5 and higher)</li><!--FA:cogFA_CalibCheckerboard_WarpResults--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetOutputImageRootFromCalibratedTransform" /> (step 5 and higher with nonlinear warping)</li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfOutputImageMask" /> (step 5 and higher with nonlinear warping)</li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfUndistortedCalibrationImage" /> (step 5 and higher with nonlinear warping)</li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfUndistortedCalibrationImageMask" /> (step 5 and higher with nonlinear warping)</li></ul></event><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The new value is not in <see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardAdjustmentSpaceConstants" />.</para></exception><remarks><PARA>Specifies whether the 
	<see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.CalibratedXAxisRotation" /> property is expressed in uncalibrated space, or in raw calibrated space.</PARA><DEFAULT><see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardAdjustmentSpaceConstants">RawCalibrated</see></DEFAULT></remarks></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.CalibratedXAxisRotation"><summary>The desired x-axis rotation of calibrated space, expressed in the coordinate space specified by CalibratedXAxisRotationSpace.  Calibrated space will be adjusted so that its x-axis appears at this angle (in radians) when calibrated.</summary><event cref="E:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes and the object has not been calibrated. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogCalibCheckerboard_CalibratedXAxisRotation--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibratedXAxisRotation" /></li></ul></event><event cref="E:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Changed" cgnxEvent="multiState"><para>
		
Fires when the value of this property changes and full or partial calibration is completed.
</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_Misc--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibrationImage" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfPhysicalTileSizeX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfPhysicalTileSizeY" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfFiducialMark" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfDOFsToCompute" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfComputationMode" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibratedOriginX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibratedOriginY" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibratedOriginSpace" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibratedXAxisRotation" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibratedXAxisRotationSpace" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfSwapCalibratedHandedness" /></li><!--FA:cogFA_CalibCheckerboard_ComputeResults--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibrated" /> (step 5 and higher)</li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetComputedUncalibratedFromCalibratedTransform" /> (step 5 and higher)</li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetComputedUncalibratedFromRawCalibratedTransform" /> (step 5 and higher)</li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfComputedRMSError" /> (step 5 and higher)</li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetInfoStrings" /> (step 5 and higher)</li><!--FA:cogFA_CalibCheckerboard_WarpResults--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetOutputImageRootFromCalibratedTransform" /> (step 5 and higher with nonlinear warping)</li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfOutputImageMask" /> (step 5 and higher with nonlinear warping)</li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfUndistortedCalibrationImage" /> (step 5 and higher with nonlinear warping)</li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfUndistortedCalibrationImageMask" /> (step 5 and higher with nonlinear warping)</li></ul></event><remarks><PARA>The desired x-axis rotation of calibrated space in radians, expressed in the coordinate space specified by <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.CalibratedXAxisRotationSpace" />.  Calibrated space will be adjusted so that its x-axis appears at this angle when calibrated.</PARA><DEFAULT>0</DEFAULT></remarks></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.CalibratedOriginSpace"><summary>Specifies whether the CalibratedOriginX and CalibratedOriginY properties are expressed in uncalibrated space, or in raw calibrated space.</summary><remarks><PARA>Specifies whether the 
	<see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.CalibratedOriginX" /> and <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.CalibratedOriginY" /> properties are expressed in uncalibrated space, or in raw calibrated space.</PARA><DEFAULT><see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardAdjustmentSpaceConstants">RawCalibrated</see></DEFAULT></remarks><event cref="E:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes and the object has not been calibrated. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogCalibCheckerboard_CalibratedOriginSpace--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibratedOriginSpace" /></li></ul></event><event cref="E:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Changed" cgnxEvent="multiState"><para>
		
Fires when the value of this property changes and full or partial calibration is completed.
The actual state flags affected depend on which <see cref="u:Framework.CalibrationAndFixturing.Theory.CheckCalibSteps">calibration steps</see> were completed.
	<TABLE><HEADING><ROW><CELL>Calibration Step</CELL><CELL>State Flags Affected</CELL></ROW></HEADING><BODY><ROW><CELL>Step 5 and higher</CELL><CELL><ul><!--FA:cogFA_CalibCheckerboard_ComputeResults--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibrated" /> (step 5 and higher)</li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetComputedUncalibratedFromCalibratedTransform" /> (step 5 and higher)</li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetComputedUncalibratedFromRawCalibratedTransform" /> (step 5 and higher)</li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfComputedRMSError" /> (step 5 and higher)</li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetInfoStrings" /> (step 5 and higher)</li></ul></CELL></ROW><ROW><CELL>Step 5 and higher with nonlinear warping</CELL><CELL><ul><!--FA:cogFA_CalibCheckerboard_WarpResults--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetOutputImageRootFromCalibratedTransform" /> (step 5 and higher with nonlinear warping)</li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfOutputImageMask" /> (step 5 and higher with nonlinear warping)</li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfUndistortedCalibrationImage" /> (step 5 and higher with nonlinear warping)</li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfUndistortedCalibrationImageMask" /> (step 5 and higher with nonlinear warping)</li></ul></CELL></ROW></BODY></TABLE></para></event><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The new value is not in <see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardAdjustmentSpaceConstants" />.</para></exception></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.CalibratedOriginY"><remarks><PARA>The desired Y-coordinate of the calibrated space origin, 
	expressed in the coordinate space specified by <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.CalibratedOriginSpace" />.  
	Calibrated space will be adjusted so that its origin appears at this Y-coordinate when calibrated.</PARA><DEFAULT>0</DEFAULT></remarks><event cref="E:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes and the object has not been calibrated. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogCalibCheckerboard_CalibratedOriginY--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibratedOriginY" /></li></ul></event><event cref="E:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Changed" cgnxEvent="multiState"><para>Fires when the value of this property changes and full or partial calibration is completed.
</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_Misc--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibrationImage" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfPhysicalTileSizeX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfPhysicalTileSizeY" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfFiducialMark" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfDOFsToCompute" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfComputationMode" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibratedOriginX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibratedOriginY" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibratedOriginSpace" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibratedXAxisRotation" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibratedXAxisRotationSpace" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfSwapCalibratedHandedness" /></li><!--FA:cogFA_CalibCheckerboard_ComputeResults--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibrated" /> (step 5 and higher)</li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetComputedUncalibratedFromCalibratedTransform" /> (step 5 and higher)</li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetComputedUncalibratedFromRawCalibratedTransform" /> (step 5 and higher)</li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfComputedRMSError" /> (step 5 and higher)</li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetInfoStrings" /> (step 5 and higher)</li><!--FA:cogFA_CalibCheckerboard_WarpResults--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetOutputImageRootFromCalibratedTransform" /> (step 5 and higher with nonlinear warping)</li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfOutputImageMask" /> (step 5 and higher with nonlinear warping)</li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfUndistortedCalibrationImage" /> (step 5 and higher with nonlinear warping)</li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfUndistortedCalibrationImageMask" /> (step 5 and higher with nonlinear warping)</li></ul></event><summary>The desired Y position of the calibrated space origin, expressed in the coordinate space specified by CalibratedOriginSpace.  Calibrated space will be adjusted so that its origin appears at this Y position when calibrated.</summary></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.CalibratedOriginX"><event cref="E:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes and the object has not been calibrated. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogCalibCheckerboard_CalibratedOriginX--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibratedOriginX" /></li></ul></event><event cref="E:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Changed" cgnxEvent="multiState"><para>Fires when the value of this property changes and full or partial calibration is completed.</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_Misc--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibrationImage" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfPhysicalTileSizeX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfPhysicalTileSizeY" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfFiducialMark" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfDOFsToCompute" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfComputationMode" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibratedOriginX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibratedOriginY" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibratedOriginSpace" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibratedXAxisRotation" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibratedXAxisRotationSpace" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfSwapCalibratedHandedness" /></li><!--FA:cogFA_CalibCheckerboard_ComputeResults--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibrated" /> (step 5 and higher)</li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetComputedUncalibratedFromCalibratedTransform" /> (step 5 and higher)</li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetComputedUncalibratedFromRawCalibratedTransform" /> (step 5 and higher)</li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfComputedRMSError" /> (step 5 and higher)</li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetInfoStrings" /> (step 5 and higher)</li><!--FA:cogFA_CalibCheckerboard_WarpResults--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetOutputImageRootFromCalibratedTransform" /> (step 5 and higher with nonlinear warping)</li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfOutputImageMask" /> (step 5 and higher with nonlinear warping)</li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfUndistortedCalibrationImage" /> (step 5 and higher with nonlinear warping)</li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfUndistortedCalibrationImageMask" /> (step 5 and higher with nonlinear warping)</li></ul></event><summary>The desired X position of the calibrated space origin, expressed in the coordinate space specified by CalibratedOriginSpace.  Calibrated space will be adjusted so that its origin appears at this X position when calibrated.</summary><remarks><PARA>The desired X-coordinate of the calibrated space origin, 
	expressed in the coordinate space specified by <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.CalibratedOriginSpace" />.  
	Calibrated space will be adjusted so that its origin appears at this X-coordinate when calibrated.</PARA><DEFAULT>0</DEFAULT></remarks></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.ComputationMode"><summary>This enumeration specifies how the best-fit transformation between the uncalibrated points and the raw calibrated points will be computed.  You can choose a linear computation or a nonlinear one (with runtime image warping).</summary><remarks><PARA>
	How the best-fit transformation between the uncalibrated points detected in the <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.CalibrationImage" /> 
	and the raw calibrated points is computed.  You can choose a linear computation or a nonlinear one 
	(with runtime <see cref="u:Framework.CalibrationAndFixturing.Theory.NonlinearCalib" cgnxAnchor="image_warping">image warping</see>).
</PARA><DEFAULT><see cref="T:Cognex.VisionPro.CalibFix.CogCalibFixComputationModeConstants">Linear</see></DEFAULT></remarks><event cref="E:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogCalibCheckerboard_ComputationMode--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfComputationMode" /></li></ul></event><event cref="E:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Changed" cgnxEvent="multiState"><para>
		
Fires when the value of this property changes and full or partial calibration is completed.
The actual state flags affected depend on which <see cref="u:Framework.CalibrationAndFixturing.Theory.CheckCalibSteps">calibration steps</see> were completed.
	<TABLE><HEADING><ROW><CELL>Calibration Step</CELL><CELL>State Flags Affected</CELL></ROW></HEADING><BODY><ROW><CELL>Step 2 and higher</CELL><CELL><ul><!--FA:cogFA_CalibCheckerboard_ComputeResults--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibrated" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetComputedUncalibratedFromCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetComputedUncalibratedFromRawCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfComputedRMSError" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetInfoStrings" /></li></ul></CELL></ROW><ROW><CELL>Step 3 and higher with nonlinear warping</CELL><CELL><ul><!--FA:cogFA_CalibCheckerboard_WarpResults--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetOutputImageRootFromCalibratedTransform" /> (step 5 and higher with nonlinear warping)</li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfOutputImageMask" /> (step 5 and higher with nonlinear warping)</li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfUndistortedCalibrationImage" /> (step 5 and higher with nonlinear warping)</li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfUndistortedCalibrationImageMask" /> (step 5 and higher with nonlinear warping)</li></ul></CELL></ROW></BODY></TABLE></para></event><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The mode is not in <see cref="T:Cognex.VisionPro.CalibFix.CogCalibFixComputationModeConstants" />.</para></exception></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.DOFsToCompute"><summary>This enumeration specifies which degrees of freedom will be allowed when computing the best-fit linear transformation between the uncalibrated points and the raw calibrated points.  It is used only when the ComputationMode is linear.</summary><remarks><PARA>
	This enumeration specifies which degrees of freedom will be allowed when computing the best-fit linear transformation between the uncalibrated points and the raw calibrated points.  It is used only when <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.ComputationMode" /> is 
<see cref="T:Cognex.VisionPro.CalibFix.CogCalibFixComputationModeConstants">Linear</see>.
</PARA><DEFAULT><see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardDOFConstants">ScalingAspectRotationSkewAndTranslation</see></DEFAULT></remarks><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The value is not in <see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardDOFConstants" />.</para></exception><event cref="E:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes and the object has not been calibrated (<see cref="u:Framework.CalibrationAndFixturing.Theory.CheckCalibSteps">step 2</see> or higher) or the <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.ComputationMode" /> is not <see cref="T:Cognex.VisionPro.CalibFix.CogCalibFixComputationModeConstants">Linear</see>. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogCalibCheckerboard_DOFsToCompute--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfDOFsToCompute" /></li></ul></event><event cref="E:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Changed" cgnxEvent="multiState"><para>
		
Fires when the value of this property changes and full or partial calibration to <see cref="u:Framework.CalibrationAndFixturing.Theory.CheckCalibSteps">step 2</see> or higher  is completed and the <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.ComputationMode" /> is not <see cref="T:Cognex.VisionPro.CalibFix.CogCalibFixComputationModeConstants">Linear</see>.
</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_Misc--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibrationImage" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfPhysicalTileSizeX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfPhysicalTileSizeY" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfFiducialMark" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfDOFsToCompute" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfComputationMode" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibratedOriginX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibratedOriginY" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibratedOriginSpace" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibratedXAxisRotation" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibratedXAxisRotationSpace" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfSwapCalibratedHandedness" /></li><!--FA:cogFA_CalibCheckerboard_ComputeResults--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibrated" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetComputedUncalibratedFromCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetComputedUncalibratedFromRawCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfComputedRMSError" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetInfoStrings" /></li></ul></event></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.NumPoints"><summary>The number of vertex points in each point set.  This is the number of raw calibrated points, and also the number of uncalibrated points.</summary><remarks><PARA>The number of vertex points in each point set.  This is the number of raw calibrated points, and also the number of uncalibrated points.</PARA><PARA>
The value of this property is computed when you call <see cref="M:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Calibrate" />. You cannot set the number of points yourself.
</PARA><DEFAULT>0</DEFAULT></remarks></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.ExternalEnabled"><summary>For Cognex Internal Use Only.</summary></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.DataMatrixTimeoutEnabled"><summary>If True, use the <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.DataMatrixTimeout" /> value when calibrating if <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.FiducialMark" /> is either <see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardFiducialConstants">DataMatrix</see> or <see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardFiducialConstants">DataMatrixWithGridPitch</see>.</summary><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><value>The default is False.</value></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.DataMatrixTimeout"><summary>The maximum time in milliseconds to search for a single DataMatrix fiducial.</summary><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><exception cref="T:System.ArgumentException">If the supplied value is less than or equl to zero.</exception><remarks><para>This property is only used when <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCkeckerboard.DataMatrixTimeoutEnabled" /> is true and <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.FiducialMark" /> is either <see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardFiducialConstants">DataMatrix</see> or <see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardFiducialConstants">DataMatrixWithGridPitch</see>:</para><para><list type="bullet"><item>If <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.FeatureFinder" /> is <see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardFeatureFinderConstants">CheckerboardExhaustive</see> or <see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardFeatureFinderConstants">CheckerboardEfficient</see> an exception will occur if it takes longer than <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCkeckerboard.DataMatrixTimeout" /> to find an acceptable DataMatrix fiducial.</item><item>If <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.FeatureFinder" />  is <see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardFeatureFinderConstants">CheckerboardExhaustiveMultiRegion</see> or <see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardFeatureFinderConstants">CheckerboardEfficientMultiRegion</see>, an exception will occur if it takes longer than <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCkeckerboard.DataMatrixTimeout" /> to find the first acceptable DataMatrix fiducial. Once the operator finds the first acceptable DataMatrix fiducial without timeout, the operator processes each isolated region of checkerboard features. For each isolated region of checkerboard features, if it takes longer than <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCkeckerboard.DataMatrixTimeout" /> to find a DataMatrix fiducial, the operator will not include any features from that region but no exception will be thrown.</item></list></para></remarks><value>The default is 30000 (i.e. 30 seconds).</value></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.LinescanDistanceToTargetEnabled"><summary>If True, use the LinescanDistanceToTarget value when calibrating if ComputationMode is LinescanWarp or Linescan2DWarp.</summary></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.LinescanDistanceToTarget"><summary>The distance in client coordinates from the linescan camera to the calibration target.</summary></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.FeatureFinder"><exception cref="T:System.ArgumentException">If the supplied value is not a member of <see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardFeatureFinderConstants" />.</exception><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><value>The default is <see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardFeatureFinderConstants">CheckerboardExhaustive</see>.</value><summary>An enumeration that specifies the algorithm used to find features on the calibration plate.</summary><remarks><para>Specifies the algorithm used to find features on the calibration plate.</para><para>Cognex recommends using exhaustive (<see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardFeatureFinderConstants">CheckerboardExhaustive</see>) checkerboard feature finding.</para><para>Support for grid-of-dots (<see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardFeatureFinderConstants">DotGrid</see>) calibration plates is provided to allow for the use of existing grid-of-dots calibration plates; checkerboard plates provide more accurate calibrations. The standard (<see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardFeatureFinderConstants">Checkerbord</see>) feature-finding algorithm is not recommended and is retained for backwards compatibility.</para><para>If you specifiy <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.FiducialMark" />, the mark type must match the feature finder. DotGridAxes is only supported for <see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardFeatureFinderConstants">DotGrid</see>. StandardRectangles is supported for <see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardFeatureFinderConstants">Checkerboard</see>, or <see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardFeatureFinderConstants">CheckerboardExhaustive</see>, or <see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardFeatureFinderConstants">CheckerboardEfficient</see>. DataMatrix and DataMatrixWithGridPitch are supported for <see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardFeatureFinderConstants">Checkerboard</see>, or <see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardFeatureFinderConstants">CheckerboardExhaustive</see>, or <see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardFeatureFinderConstants">CheckerboardEfficient</see>, or <see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardFeatureFinderConstants">CheckerboardExhaustiveMultiRegion</see>, or <see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardFeatureFinderConstants">CheckerboardEfficientMultiRegion</see>.</para></remarks></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.FiducialMark"><summary>An enumeration that specifies what style of fiducial mark is present on the calibration plate.</summary><remarks><para>This property specifies whether or not a fiducial mark is present on the calibration plate. The tool uses this information to establish the <see cref="u:Framework.CalibrationAndFixturing.Theory.CalibPlates" cgnxAnchor="plate_origin"> origin and handedness</see> of the raw calibrated space defined by the calibration plate.</para><para>If you specify <see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardFiducialConstants">None</see>, the tool will use the vertex closest to the center of the calibration image as the origin and will assign the positive x-axis and y-axis to the grid lines which are closest to the image's x-axis and y-axis. If you specfiy <see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardFiducialConstants">StandardRectangles</see>, the tool will attempt to locate a Cognex-standard <see cref="u:Framework.CalibrationAndFixturing.Theory.CalibPlates" cgnxAnchor="plate_origin">fiducial mark</see> for a checkerboard calibration plate. If you specify <see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardFiducialConstants">DotGridAxes</see>, the tool will attempt to locate a Cognex-standard <see cref="u:Framework.CalibrationAndFixturing.Theory.CalibPlates" cgnxAnchor="grid_of_dots_plate_requirements">fiducial mark</see> for a grid-of-dots calibration plate. If you specify <see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardFiducialConstants">DataMatrix</see>, the tool will attempt to locate a DataMatrix style fiducial mark for a checkerboard calibration plate. If you specify <see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardFiducialConstants">DataMatrixWithGridPitch</see>, the tool will attempt to locate a DataMatrix style fiducial mark for a checkerboard calibration plate and will attempt to parse the grid pitch from the data encoded therein.</para><para>The fiducial mark type you specify must correspond to the feature finder that you are using. DotGridAxes is only supported for <see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardFeatureFinderConstants">DotGrid</see>. StandardRectangles is supported for <see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardFeatureFinderConstants">Checkerboard</see>, <see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardFeatureFinderConstants">CheckerboardExhaustive</see>, and <see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardFeatureFinderConstants">CheckerboardEfficient</see>. DataMatrix and DataMatrixWithGridPitch style fiducial marks are supported for <see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardFeatureFinderConstants">Checkerboard</see>, <see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardFeatureFinderConstants">CheckerboardExhaustive</see>, <see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardFeatureFinderConstants">CheckerboardExhaustiveMultiRegion</see>, <see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardFeatureFinderConstants">CheckerboardEfficient</see>, and <see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardFeatureFinderConstants">CheckerboardEfficientMultiRegion</see> feature finding.</para></remarks><exception cref="T:System.ArgmentException">The fiducial mark type is not in <see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardFiducialConstants">CogCalibCheckerboardFiducialConstants</see>.</exception><event cref="E:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogCalibCheckerboard_FiducialMark--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfFiducialMark" /></li></ul></event><event cref="E:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Changed" cgnxEvent="multiState"><para>
		
Fires when the value of this property changes and full or partial calibration is completed.
The actual state flags affected depend on which <see cref="u:Framework.CalibrationAndFixturing.Theory.CheckCalibSteps">calibration steps</see> were completed.
	<TABLE><HEADING><ROW><CELL>Calibration Step</CELL><CELL>State Flags Affected</CELL></ROW></HEADING><BODY><ROW><CELL>Step 1</CELL><CELL><ul><!--FA:cogFA_CalibCheckerboard_PointSet--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfNumPoints" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetUncalibratedPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetUncalibratedPointY" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetRawCalibratedPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetRawCalibratedPointY" /></li></ul></CELL></ROW><ROW><CELL>Step 2 and higher</CELL><CELL><ul><!--FA:cogFA_CalibCheckerboard_ComputeResults--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibrated" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetComputedUncalibratedFromCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetComputedUncalibratedFromRawCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfComputedRMSError" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetInfoStrings" /></li></ul></CELL></ROW><ROW><CELL>Step 3 and higher</CELL><CELL><ul><!--FA:cogFA_CalibCheckerboard_WarpResults--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetOutputImageRootFromCalibratedTransform" /> (step 5 and higher with nonlinear warping)</li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfOutputImageMask" /> (step 5 and higher with nonlinear warping)</li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfUndistortedCalibrationImage" /> (step 5 and higher with nonlinear warping)</li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfUndistortedCalibrationImageMask" /> (step 5 and higher with nonlinear warping)</li></ul></CELL></ROW></BODY></TABLE></para></event></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.PhysicalTileSizeY"><summary>The physical grid spacing in the Y direction of raw calibrated space.</summary><event cref="E:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogCalibCheckerboard_PhysicalTileSizeX--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfPhysicalTileSizeX" /></li></ul></event><event cref="E:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Changed" cgnxEvent="multiState"><para>
		
Fires when the value of this property changes and full or partial calibration is completed.
The actual state flags affected depend on which <see cref="u:Framework.CalibrationAndFixturing.Theory.CheckCalibSteps">calibration steps</see> were completed.
	<TABLE><CAPTION>Functional area flags</CAPTION><HEADING><ROW><CELL>Calibration Step</CELL><CELL>State Flags Affected</CELL></ROW></HEADING><BODY><ROW><CELL>Step 1</CELL><CELL><ul><!--FA:cogFA_CalibCheckerboard_PointSet--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfNumPoints" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetUncalibratedPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetUncalibratedPointY" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetRawCalibratedPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetRawCalibratedPointY" /></li></ul></CELL></ROW><ROW><CELL>Step 2 and higher</CELL><CELL><ul><!--FA:cogFA_CalibCheckerboard_ComputeResults--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibrated" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetComputedUncalibratedFromCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetComputedUncalibratedFromRawCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfComputedRMSError" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetInfoStrings" /></li></ul></CELL></ROW><ROW><CELL>Step 3 and higher with nonlinear warping</CELL><CELL><ul><!--FA:cogFA_CalibCheckerboard_WarpResults--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetOutputImageRootFromCalibratedTransform" /> (step 5 and higher with nonlinear warping)</li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfOutputImageMask" /> (step 5 and higher with nonlinear warping)</li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfUndistortedCalibrationImage" /> (step 5 and higher with nonlinear warping)</li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfUndistortedCalibrationImageMask" /> (step 5 and higher with nonlinear warping)</li></ul></CELL></ROW></BODY></TABLE></para></event><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The size is &lt;= 0.</para></exception><remarks><PARA>
	This property specifies the physical grid spacing in the y-dirrection.
	</PARA><PARA>
	For a checkerboard plate, this is 
	the physical size of each tile, in the y-direction of raw calibrated space.  If the plate has a 
	<see cref="u:Framework.CalibrationAndFixturing.Theory.CalibPlates" cgnxAnchor="fiducial_mark">fiducial mark</see>, 
	the y direction is parallel to the short fiducial rectangle.  
	Otherwise, it is parallel to the rows of tiles closest to the y-axis of the pixel coordinate space.
	</PARA><PARA>
	The tiles in the physical calibration plate must all have exactly the same physical size in the y-direction. 
	The images of the tiles in the acquired image may have different sizes.
	</PARA><PARA>
	For a grid-of-dots plate, this is 
	the dot spacing, in the y-direction of raw calibrated space.  If the plate has a 
	<see cref="u:Framework.CalibrationAndFixturing.Theory.CalibPlates" cgnxAnchor="grid_of_dots_plate_requirements">fiducial mark</see>, 
	the y direction is the axis with a mark space at position 1.  
	Otherwise, it is parallel to the rows of dots closest to the y-axis of the pixel coordinate space.
	</PARA><NOTE>
	You should specify this value in meaningful real-world units such as millimeters.
	</NOTE><DEFAULT>1.0</DEFAULT></remarks></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.PhysicalTileSizeX"><remarks><PARA>
	This property specifies the physical grid spacing in the x-dirrection.
	</PARA><PARA>
	For a checkerboard plate, this is 
	the physical size of each tile, in the x-direction of raw calibrated space.  If the plate has a 
	<see cref="u:Framework.CalibrationAndFixturing.Theory.CalibPlates" cgnxAnchor="fiducial_mark">fiducial mark</see>, 
	the x direction is parallel to the long fiducial rectangle.  
	Otherwise, it is parallel to the rows of tiles closest to the x-axis of the pixel coordinate space.
	</PARA><PARA>
	The tiles in the physical calibration plate must all have exactly the same physical size in the x-direction. 
	The images of the tiles in the acquired image may have different sizes.
	</PARA><PARA>
	For a grid-of-dots plate, this is 
	the dot spacing, in the x-direction of raw calibrated space.  If the plate has a 
	<see cref="u:Framework.CalibrationAndFixturing.Theory.CalibPlates" cgnxAnchor="grid_of_dots_plate_requirements">fiducial mark</see>, 
	the x direction is the axis with a mark space at position 3.  
	Otherwise, it is parallel to the rows of dots closest to the x-axis of the pixel coordinate space.
	</PARA><NOTE>
	You should specify this value in meaningful real-world units such as millimeters.
	</NOTE><DEFAULT>1.0</DEFAULT></remarks><event cref="E:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogCalibCheckerboard_PhysicalTileSizeX--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfPhysicalTileSizeX" /></li></ul></event><event cref="E:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Changed" cgnxEvent="multiState"><para>
		
Fires when the value of this property changes and full or partial calibration is completed.
The actual state flags affected depend on which <see cref="u:Framework.CalibrationAndFixturing.Theory.CheckCalibSteps">calibration steps</see> were completed.
	<TABLE><CAPTION>Functional area flags</CAPTION><HEADING><ROW><CELL>Calibration Step</CELL><CELL>State Flags Affected</CELL></ROW></HEADING><BODY><ROW><CELL>Step 1</CELL><CELL><ul><!--FA:cogFA_CalibCheckerboard_PointSet--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfNumPoints" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetUncalibratedPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetUncalibratedPointY" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetRawCalibratedPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetRawCalibratedPointY" /></li></ul></CELL></ROW><ROW><CELL>Step 2 and higher</CELL><CELL><ul><!--FA:cogFA_CalibCheckerboard_ComputeResults--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibrated" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetComputedUncalibratedFromCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetComputedUncalibratedFromRawCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfComputedRMSError" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetInfoStrings" /></li></ul></CELL></ROW><ROW><CELL>Step 3 and higher with nonlinear warping</CELL><CELL><ul><!--FA:cogFA_CalibCheckerboard_WarpResults--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetOutputImageRootFromCalibratedTransform" /> (step 5 and higher with nonlinear warping)</li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfOutputImageMask" /> (step 5 and higher with nonlinear warping)</li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfUndistortedCalibrationImage" /> (step 5 and higher with nonlinear warping)</li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfUndistortedCalibrationImageMask" /> (step 5 and higher with nonlinear warping)</li></ul></CELL></ROW></BODY></TABLE></para></event><summary>The physical grid spacing in the X direction of raw calibrated space.</summary><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The size is &lt;= 0.</para></exception></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.CalibrationImage"><event cref="E:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibrationImage" /></li></ul></event><event cref="E:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Changed" cgnxEvent="multiState"><para>
		
Fires when the value of this property changes and full or partial calibration is completed.
The actual state flags affected depend on which <see cref="u:Framework.CalibrationAndFixturing.Theory.CheckCalibSteps">calibration steps</see> were completed.
	<TABLE><HEADING><ROW><CELL>Calibration Step</CELL><CELL>State Flags Affected</CELL></ROW></HEADING><BODY><ROW><CELL>Step 1</CELL><CELL><ul><!--FA:cogFA_CalibCheckerboard_PointSet--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfNumPoints" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetUncalibratedPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetUncalibratedPointY" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetRawCalibratedPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetRawCalibratedPointY" /></li></ul></CELL></ROW><ROW><CELL>Step 2 and higher</CELL><CELL><ul><!--FA:cogFA_CalibCheckerboard_ComputeResults--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibrated" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetComputedUncalibratedFromCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetComputedUncalibratedFromRawCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfComputedRMSError" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetInfoStrings" /></li></ul></CELL></ROW><ROW><CELL>Step 3 and higher with nonlinear warping</CELL><CELL><ul><!--FA:cogFA_CalibCheckerboard_WarpResults--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetOutputImageRootFromCalibratedTransform" /> (step 5 and higher with nonlinear warping)</li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfOutputImageMask" /> (step 5 and higher with nonlinear warping)</li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfUndistortedCalibrationImage" /> (step 5 and higher with nonlinear warping)</li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfUndistortedCalibrationImageMask" /> (step 5 and higher with nonlinear warping)</li></ul></CELL></ROW></BODY></TABLE></para></event><exception cref="T:Cognex.VisionPro.Exceptions.CogImageBadTypeException">The image is neither a <see cref="T:Cognex.VisionPro.CogImage8Grey" />, nor a <see cref="T:Cognex.VisionPro.CogImage16Grey" />.</exception><remarks><PARA>The image of the 
	<see cref="u:Framework.CalibrationAndFixturing.Theory.CalibPlates">checkerboard calibration plate</see>.  Each tile on the plate must be at least 15 pixels high and wide.  During calibration the vertex points (where four tiles meet) will be used to compute the calibration transform.</PARA><DEFAULT>Null</DEFAULT></remarks><summary>The image of the checkerboard calibration plate.  Each tile on the plate must be at least 15 pixels high and wide.  During calibration the vertex points (where four tiles meet) will be used to compute the calibration transform.</summary></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.ChangedEventSuspended"><summary>If nonzero, indicates that the raising of the Changed event has been suspended. This value is incremented when SuspendChangedEvent is called and decremented when ResumeAndRaiseChangedEvent is called.</summary></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.HasChanged"><summary>If true, the serializable state of this object has changed since the last time it was serialized.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.~CogCalibCheckerboard"><summary>Releases all resources used by this object.  Do not attempt to access an object after it has been disposed.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.!CogCalibCheckerboard"><summary>Releases all unmanaged resources used by this object.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Clone"><summary>Returns a deep copy of this class instance.  Derived classes that implement Clone should override this method; other clients who wish to clone this instance should call ICloneable.Clone. See also CogSerializer.DeepCopyObject</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SuspendChangedEvent"><summary>Temporarily suspends the raising of the Changed event. May be called more than once, and a corresponding call to ResumeAndRaiseChangedEvent must be made for each call to SuspendChangedEvent.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.ResumeAndRaiseChangedEvent"><summary>Re-enables raising of the Changed event after SuspendChangedEvent has been called.  Also raises the Changed event if the ChangedEventSuspended count is reduced to zero and any changes were made while events were suspended. Must be called once for each call to SuspendChangedEvent.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SetExternal(Cognex.VisionPro.ICogTransform2D)"><param name="Xform">n/a</param><summary>For Cognex Internal Use Only.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.GetUncalibratedPointX(System.Int32)"><param name="index"><PARA>The zero-based index of the point.</PARA></param><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="index" /> &lt; 0 or <paramref name="index" /> &gt;= <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.NumPoints" />.</para></exception><remarks><PARA>The x-coordinate of the uncalibrated vertex point with the given index.  Valid indices range from 0 to 
<see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.NumPoints" />–1 inclusive.</PARA></remarks><summary>The X coordinate of the uncalibrated vertex point with the given index.  Valid indices range from 0 to NumPoints-1 inclusive.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.GetUncalibratedPointY(System.Int32)"><param name="index"><PARA>The zero-based index of the point.</PARA></param><summary>The Y coordinate of the uncalibrated vertex point with the given index.  Valid indices range from 0 to NumPoints-1 inclusive.</summary><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="index" /> &lt; 0 or <paramref name="index" /> &gt;= <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.NumPoints" />.</para></exception><remarks><PARA>The y-coordinate of the uncalibrated vertex point with the given index.  Valid indices range from 0 to 
<see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.NumPoints" />–1 inclusive.</PARA></remarks></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.GetRawCalibratedPointX(System.Int32)"><param name="index"><PARA>The zero-based index of the point.</PARA></param><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="index" /> &lt; 0 or <paramref name="index" /> &gt;= <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.NumPoints" />.</para></exception><remarks><PARA>The x-coordinate of the raw calibrated vertex point with the given index.  Valid indices range from 0 to 
<see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.NumPoints" />–1 inclusive.</PARA></remarks><summary>The X coordinate of the raw calibrated vertex point with the given index.  Valid indices range from 0 to NumPoints-1 inclusive.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.GetRawCalibratedPointY(System.Int32)"><param name="index"><PARA>The zero-based index of the point.</PARA></param><summary>The Y coordinate of the raw calibrated vertex point with the given index.  Valid indices range from 0 to NumPoints-1 inclusive.</summary><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="index" /> &lt; 0 or <paramref name="index" /> &gt;= <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.NumPoints" />.</para></exception><remarks><PARA>The y-coordinate of the raw calibrated vertex point with the given index.  Valid indices range from 0 to <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.NumPoints" />–1 inclusive.</PARA></remarks></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.GetUncalibratedPoint(System.Int32,System.Double@,System.Double@)"><param name="index"><PARA>The zero-based index of the point to return.</PARA></param><param name="x"><PARA>The x-coordinate of the returned point.</PARA></param><param name="y"><PARA>The y-coordinate of the returned point.</PARA></param><summary>Gets the X and Y coordinates of the uncalibrated vertex point with the given index.  Valid indices range from 0 to NumPoints-1 inclusive.</summary><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="index" /> &lt; 0 or <paramref name="index" /> &gt;= <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.NumPoints" />.</para></exception><remarks><PARA>Gets the X and Y coordinates of the uncalibrated vertex point with the given index.  Valid indices range from 0 to <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.NumPoints" />–1 inclusive.</PARA><PARA>
The order of the points in the point set is undefined. A point with a given index in this 
point set corresponds to the point with the same index returned by <see cref="M:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.GetRawCalibratedPoint(System.Int32,System.Double@,System.Double@)" />.
</PARA></remarks></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.GetRawCalibratedPoint(System.Int32,System.Double@,System.Double@)"><param name="index"><PARA>The zero-based index of the point to return.</PARA></param><param name="x"><PARA>The x-coordinate of the returned point.</PARA></param><param name="y"><PARA>The y-coordinate of the returned point.</PARA></param><remarks><PARA>Gets the X and Y coordinates of the raw calibrated vertex point with the given index.  Valid indices range from 0 to <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.NumPoints" />–1 inclusive.</PARA><PARA>
The order of the points in the point set is undefined. A point with a given index in this 
point set corresponds to the point with the same index returned by <see cref="M:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.GetUncalibratedPoint(System.Int32,System.Double@,System.Double@)" />.
</PARA></remarks><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="index" /> &lt; 0 or <paramref name="index" /> &gt;= <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.NumPoints" />.</para></exception><summary>Gets the X and Y coordinates of the raw calibrated vertex point with the given index.  Valid indices range from 0 to NumPoints-1 inclusive.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.GetComputedUncalibratedFromCalibratedTransform"><remarks><PARA>
If 
<see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Calibrated" /> is True, this method returns the 2D, minimum squared error, transformation that maps points from the (adjusted) 
<see cref="u:Framework.CalibrationAndFixturing.Theory.CalibFixtures" cgnxAnchor="uncalibrated_raw_calibrated_and_calibrated_coord">calibrated coordinate space</see>
into 
<see cref="u:Framework.CalibrationAndFixturing.Theory.CalibFixtures" cgnxAnchor="uncalibrated_raw_calibrated_and_calibrated_coord">uncalibrated coordinate space</see>.  Otherwise, it returns Nothing.
This transform can be attached to an input image using the 
<see cref="M:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Execute(Cognex.VisionPro.ICogImage,Cognex.VisionPro.CalibFix.CogCalibCheckerboardRunParams)" /> method.
	</PARA></remarks><returns><PARA>The returned transformation.</PARA></returns><summary>If Calibrated is True, this method returns the 2-D, minimum squared error, transformation that maps points from the (adjusted) calibrated space into uncalibrated space.  Otherwise, it returns Nothing.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.GetComputedUncalibratedFromRawCalibratedTransform"><summary>Returns the 2-D, minimum squared error, transformation that maps points from the raw calibrated space into uncalibrated space, if it has been computed.  Otherwise, returns Nothing.  The transform is computed by calling Calibrate.</summary><remarks><PARA>
	Returns the 2D, minimum-squared-error transformation that maps points from the <see cref="u:Framework.CalibrationAndFixturing.Theory.CalibFixtures" cgnxAnchor="uncalibrated_raw_calibrated_and_calibrated_coord">raw calibrated space</see> into <see cref="u:Framework.CalibrationAndFixturing.Theory.CalibFixtures" cgnxAnchor="uncalibrated_raw_calibrated_and_calibrated_coord">uncalibrated coordinate space</see>, if it has been computed.
	</PARA><PARA>The transform is computed by calling <see cref="M:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Calibrate" />. If the <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Calibrated" /> property is True, the transform is always non-null. However, in certain instances, it may also be non-null even if <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Calibrated" /> is False. For example, if you calibrate and then change only the 
<see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.CalibratedOriginX" /> or <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.CalibratedOriginY" />, 
the UncalibratedFromRawCalibrated transform remains unaffected, even though <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Calibrated" /> is now set to False.</PARA></remarks><returns><PARA>The returned transformation.</PARA></returns></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.GetInfoStrings"><remarks><PARA>Returns diagnostic text string(s) from the last call to <see cref="M:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Calibrate" />.  
	The collection will be empty if there are no messages, or if the <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Calibrated" /> property is False.</PARA></remarks><summary>Returns diagnostic text string(s) from the last call to Calibrate.  The collection will be empty if there are no messages, or if the Calibrated property is False.</summary><returns><PARA>The returned <see cref="T:Cognex.VisionPro.CogStringCollection" />.</PARA></returns></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Calibrate"><exception cref="T:Cognex.VisionPro.Exceptions.CogCalibFixTooFewVerticesException">Fewer than nine tile vertices were found.</exception><exception cref="T:Cognex.VisionPro.Exceptions.CogCalibFixNoCalibrationImageException"><see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.CalibrationImage" /> is NULL.</exception><exception cref="T:Cognex.VisionPro.Exceptions.CogCalibFixCheckerboardMathUnstableException">The object cannot be calibrated because the located tile vertices yield a numerically unstable result. Verify that you have supplied a well-focused high-contrast image of the calibration plate. Use the diagnostic graphics to make sure that the tile vertices have been located correctly, and make sure that you have specified correct values for the tile size.</exception><exception cref="T:Cognex.VisionPro.Exceptions.CogCalibFixDataMatrixParseErrorException">A DataMatrix fiducial was expected, but no DataMatrix code thas was successfully decoded could be successfully parsed.</exception><exception cref="T:Cognex.VisionPro.Exceptions.CogCalibFixDataMatrixDecodeErrorException">A DataMatrix fiducial was expected, but no DataMatrix code that was successfully found could be successfully decoded.</exception><event cref="E:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Changed" cgnxEvent="multiState"><para>
		
Fires when calibration is completed successfully.
This event may also fire if calibration fails depending upon which
		<see cref="u:Framework.CalibrationAndFixturing.Theory.CheckCalibSteps">calibration steps</see>
	were completed prior to this call to this method.

	<TABLE><HEADING><ROW><CELL>Calibration Step</CELL><CELL>State Flags Affected</CELL></ROW></HEADING><BODY><ROW><CELL>Step 1</CELL><CELL><ul><!--FA:cogFA_CalibCheckerboard_PointSet--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfNumPoints" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetUncalibratedPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetUncalibratedPointY" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetRawCalibratedPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetRawCalibratedPointY" /></li></ul></CELL></ROW><ROW><CELL>Step 2 and higher</CELL><CELL><ul><!--FA:cogFA_CalibCheckerboard_ComputeResults--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibrated" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetComputedUncalibratedFromCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetComputedUncalibratedFromRawCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfComputedRMSError" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetInfoStrings" /></li></ul></CELL></ROW><ROW><CELL>Step 3 and higher with nonlinear warping</CELL><CELL><ul><!--FA:cogFA_CalibCheckerboard_WarpResults--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetOutputImageRootFromCalibratedTransform" /> (step 5 and higher with nonlinear warping)</li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfOutputImageMask" /> (step 5 and higher with nonlinear warping)</li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfUndistortedCalibrationImage" /> (step 5 and higher with nonlinear warping)</li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfUndistortedCalibrationImageMask" /> (step 5 and higher with nonlinear warping)</li></ul></CELL></ROW></BODY></TABLE></para></event><exception cref="T:Cognex.VisionPro.Exceptions.CogCalibFixDataMatrixNotFoundException">A DataMatrix fiducial was expected but not found.</exception><exception cref="T:Cognex.VisionPro.Exceptions.CogImageNoPixelsException"><see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.CalibrationImage" /> is not allocated.</exception><exception cref="T:Cognex.VisionPro.Exceptions.CogSecurityViolationException">Security is not enabled for this vision tool. See <see cref="u:Programming.Tools.Theory.Security" cgnxAnchor="resolving_securityrelated_error_messages">Resolving Security Related Error Messages</see> for more information.</exception><exception cref="T:Cognex.VisionPro.Exceptions.CogImageBadTypeException"><see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.CalibrationImage" /> is neither a <see cref="T:Cognex.VisionPro.CogImage8Grey" />, nor a <see cref="T:Cognex.VisionPro.CogImage16Grey" />.</exception><exception cref="T:Cognex.VisionPro.Exceptions.CogCalibFixNoFiducialException">A <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.FiducialMark">fiducial mark</see> was expected but not found.</exception><summary>Computes the mapping to calibrated space using the current CalibrationImage and related parameters.  If successful, sets the Calibrated property to True, updates the computed transforms, and makes this object ready to run via the Execute method.</summary><exception cref="T:Cognex.VisionPro.Exceptions.CogCalibFixBadDestRectException">The <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.OwnedWarpParams.WarpDestinationRectangle" /> does not intersect any filled pixels of the undistorted image.</exception><remarks><PARA>
	Computes the mapping to calibrated space using the current 
	<see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.CalibrationImage" /> and related parameters.  
	If successful, sets the 
	<see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Calibrated" /> 
	property to True, updates the computed transforms, and makes this object ready to run via the 
	<see cref="M:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Execute(Cognex.VisionPro.ICogImage,Cognex.VisionPro.CalibFix.CogCalibCheckerboardRunParams)" /> method.
	</PARA></remarks></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Uncalibrate"><summary>Eliminates the current mapping to calibrated space.  This method also sets the Calibrated property to False, sets the computed transforms to Nothing, and renders the object unable to run via the Execute method.</summary><event cref="E:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Changed" cgnxEvent="multiState"><para>
		
Fires when the value of this property changes and full or partial calibration is completed.
The actual state flags affected depend on which <see cref="u:Framework.CalibrationAndFixturing.Theory.CheckCalibSteps">calibration steps</see> were completed.
	<TABLE><HEADING><ROW><CELL>Calibration Step</CELL><CELL>State Flags Affected</CELL></ROW></HEADING><BODY><ROW><CELL>Step 1</CELL><CELL><ul><!--FA:cogFA_CalibCheckerboard_PointSet--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfNumPoints" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetUncalibratedPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetUncalibratedPointY" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetRawCalibratedPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetRawCalibratedPointY" /></li></ul></CELL></ROW><ROW><CELL>Step 2 and higher</CELL><CELL><ul><!--FA:cogFA_CalibCheckerboard_ComputeResults--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibrated" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetComputedUncalibratedFromCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetComputedUncalibratedFromRawCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfComputedRMSError" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetInfoStrings" /></li></ul></CELL></ROW><ROW><CELL>Step 3 and higher with nonlinear warping</CELL><CELL><ul><!--FA:cogFA_CalibCheckerboard_WarpResults--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetOutputImageRootFromCalibratedTransform" /> (step 5 and higher with nonlinear warping)</li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfOutputImageMask" /> (step 5 and higher with nonlinear warping)</li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfUndistortedCalibrationImage" /> (step 5 and higher with nonlinear warping)</li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfUndistortedCalibrationImageMask" /> (step 5 and higher with nonlinear warping)</li></ul></CELL></ROW></BODY></TABLE></para></event><remarks><PARA>
	Eliminates the current mapping to calibrated space.  This method also sets the 
	<see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Calibrated" /> property to False, sets the computed transforms to Nothing, 
	and renders the object unable 
	to run via the 
	<see cref="M:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Execute(Cognex.VisionPro.ICogImage,Cognex.VisionPro.CalibFix.CogCalibCheckerboardRunParams)" /> method.
	</PARA></remarks></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Execute(Cognex.VisionPro.ICogImage,Cognex.VisionPro.CalibFix.CogCalibCheckerboardRunParams)"><param name="inputImage"><PARA>
	The run-time image. The computed calibration space is attached to this image's coordinate 
	space tree. If <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.ComputationMode" /> is 
	<see cref="T:Cognex.VisionPro.CalibFix.CogCalibFixComputationModeConstants">PerspectiveAndRadialWarp</see>, then this 
	image is warped to remove the perspective and radial distortion.
	</PARA></param><param name="runParams"><PARA>An <see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardRunParams" /> containing the run-time parameters.</PARA></param><exception cref="T:Cognex.VisionPro.Exceptions.CogCalibFixCannotWarpException">The transform between the selected space of <paramref name="inputImage" /> and its pixels differs by more than a <see cref="z:d3cfc90a-4145-4047-bcd3-fc84cd9d08ed" cgnxAnchor="wholepixel_image_shift">whole-pixel shift</see> from the similar transformation object contained in the <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.CalibrationImage" />.</exception><exception cref="T:Cognex.VisionPro.Exceptions.CogSecurityViolationException">Security is not enabled for this vision tool. See <see cref="u:Programming.Tools.Theory.Security" cgnxAnchor="resolving_securityrelated_error_messages">Resolving Security Related Error Messages</see> for more information.</exception><returns><PARA>The output image.</PARA></returns><exception cref="T:Cognex.VisionPro.Exceptions.CogImageBadTypeException"><paramref name="inputImage" /> is incompatible with <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.CalibrationImage" />.  If <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.CalibrationImage" /> is <see cref="T:Cognex.VisionPro.CogImage8Grey" />, <paramref name="inputImage" /> can be either <see cref="T:Cognex.VisionPro.CogImage8Grey" /> or <see cref="T:Cognex.VisionPro.CogImage24PlanarColor" />.  If <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.CalibrationImage" /> is <see cref="T:Cognex.VisionPro.CogImage16Grey" />, <paramref name="inputImage" /> must also be <see cref="T:Cognex.VisionPro.CogImage16Grey" />.</exception><exception cref="T:Cognex.VisionPro.Exceptions.CogOperatorNoInputImageException"><paramref name="inputImage" /> is NULL.</exception><remarks><PARA>
	If 
	<see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.ComputationMode" /> is <see cref="T:Cognex.VisionPro.CalibFix.CogCalibFixComputationModeConstants">Linear</see>, this method attaches the calibrated space
to the coordinate tree of the <paramref name="inputImage" />.  
The new
space is defined using the <see cref="M:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.GetComputedUncalibratedFromCalibratedTransform" />
transform that was last computed by this object. Its
non-qualified name is determined by the 
    value of the <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboardRunParams.CalibratedSpaceName" /> 
    supplied within <paramref name="runParams" />. 
    The method returns a newly created output
  image which shares the pixels and tree of the input
  image.  The selected space name of the returned image
is determined by the <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboardRunParams.SpaceToOutput" /> 
    supplied within <paramref name="runParams" />.
</PARA><PARA>
	If 
	<see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.ComputationMode" /> is <see cref="T:Cognex.VisionPro.CalibFix.CogCalibFixComputationModeConstants">PerspectiveAndRadialWarp</see>, this method warps 
<paramref name="inputImage" />  to remove nonlinear (radial and perspective)
distortion.  The warped image is provided as the 
output image and the calibrated space is added to its
coordinate tree.  As in linear mode, 
the non-qualified name is determined by the 
    value of the <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboardRunParams.CalibratedSpaceName" /> 
    supplied within <paramref name="runParams" /> and the selected space name of the returned image
is determined by the <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboardRunParams.SpaceToOutput" /> 
    supplied within <paramref name="runParams" />.
 </PARA><PARA>
No error results if the calibrated space already exists in the coordinate space tree of the input image prior to running the method. Instead, the existing definition of the calibrated space is updated using the computed UncalibratedFromCalibrated transform.
</PARA></remarks><summary>Attaches the calibrated space to the coordinate tree of the output image, using the given RunParams.  Depending upon the ComputationMode the output image is either a shallow copy of the input image or a new image that is a nonlinear warping of the input.</summary><exception cref="T:Cognex.VisionPro.Exceptions.CogOperatorNoRunParamsException">runParams is NULL.</exception><exception cref="T:System.ArgumentException"><paramref name="runParams" />.<see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboardRunParams.UnfilledPelValue" /> is greater than 255 and <paramref name="inputImage" /> is <see cref="T:Cognex.VisionPro.CogImage8Grey" /> or <see cref="T:Cognex.VisionPro.CogImage24PlanarColor" />.</exception><exception cref="T:Cognex.VisionPro.Exceptions.CogCalibFixNotCalibratedException">This object has not been calibrated.</exception></member><member name="E:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Changed"><summary>Occurs when one or more parts of the object's state may have changed.</summary></member><member name="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardRunParams"><remarks><PARA>The runtime parameters needed for checkerboard calibration.  They include the name of the calibrated space, an enumeration that specifies the selected space of the calibrated image, and settings for the unfilled pixels that may occur in nonlinear warping.</PARA></remarks><summary>The runtime parameters needed for checkerboard calibration.  They include the name of the calibrated space, an enum that specifies the selected space of the calibrated image, and settings for the unfilled pixels that may occur in nonlinear warping.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibCheckerboardRunParams.#ctor(Cognex.VisionPro.CalibFix.CogCalibCheckerboardRunParams)"><param name="other">The instance to copy from.</param><summary>Constructs a new instance of this class as a deep copy of the given instance.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibCheckerboardRunParams.#ctor"><summary>Constructs a new instance of this class.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibCheckerboardRunParams.#ctor(System.IntPtr)"><param name="impl">n/a</param><summary>Constructs a new instance of this class using com pointer.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardRunParams.SfCalibratedSpaceName"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by CalibratedSpaceName may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardRunParams.SfSpaceToOutput"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by SpaceToOutput may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardRunParams.SfUnfilledPelValueEnabled"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by UnfilledPelValueEnabled may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardRunParams.SfUnfilledPelValue"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by UnfilledPelValue may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardRunParams.SfUnfilledPelPlane0Value"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by UnfilledPelPlane0Value may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardRunParams.SfUnfilledPelPlane1Value"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by UnfilledPelPlane1Value may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardRunParams.SfUnfilledPelPlane2Value"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by UnfilledPelPlane2Value may have changed.</summary></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboardRunParams.UnfilledPelPlane2Value"><summary>If UnfilledPelValueEnabled is True and the InputImage is a color image, the Plane 2 component of unfilled output pels will be set to this value.  Otherwise, this value is ignored.  Unfilled pels can only occur in an image produced by nonlinear warping.</summary><event cref="E:Cognex.VisionPro.CalibFix.CogCalibCheckerboardRunParams.Changed">Fires when the value of this property changes.</event><value>The Plane 2 value that will be written to unfilled color pixels.</value><exception cref="T:System.ArgumentException">The new value is less than 0 or greater than 255.</exception><remarks><PARA>
			If 
			<see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboardRunParams.UnfilledPelValueEnabled" /> is True,
			and the image is a <see cref="T:Cognex.VisionPro.CogImage24PlanarColor">planar image</see>,
	<see cref="u:Framework.CalibrationAndFixturing.Theory.NonlinearCalib" cgnxAnchor="destination_rectangle">unfilled pel values</see> 
	in 
		plane 2 of
	
	the output image will be initialized to this value.  
	Otherwise, this value is ignored.  
	Note that unfilled pels can only occur in an image produced by nonlinear warping.
	</PARA><PARA>
		The interpretation of this plane depends on the <see cref="P:Cognex.VisionPro.CogImage24PlanarColor.ColorSpace" /> of the image.
	</PARA><DEFAULT>128</DEFAULT></remarks></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboardRunParams.UnfilledPelPlane1Value"><summary>If UnfilledPelValueEnabled is True and the InputImage is a color image, the Plane 1 component of unfilled output pels will be set to this value.  Otherwise, this value is ignored.  Unfilled pels can only occur in an image produced by nonlinear warping.</summary><exception cref="T:System.ArgumentException">The new value is less than 0 or greater than 255.</exception><event cref="E:Cognex.VisionPro.CalibFix.CogCalibCheckerboardRunParams.Changed">Fires when the value of this property changes.</event><value>The Plane 1 value that will be written to unfilled color pixels.</value><remarks><PARA>
			If 
			<see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboardRunParams.UnfilledPelValueEnabled" /> is True,
			and the image is a <see cref="T:Cognex.VisionPro.CogImage24PlanarColor">planar image</see>,
	<see cref="u:Framework.CalibrationAndFixturing.Theory.NonlinearCalib" cgnxAnchor="destination_rectangle">unfilled pel values</see> 
	in 
		plane 1 of
	
	the output image will be initialized to this value.  
	Otherwise, this value is ignored.  
	Note that unfilled pels can only occur in an image produced by nonlinear warping.
	</PARA><PARA>
		The interpretation of this plane depends on the <see cref="P:Cognex.VisionPro.CogImage24PlanarColor.ColorSpace" /> of the image.
	</PARA><DEFAULT>128</DEFAULT></remarks></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboardRunParams.UnfilledPelPlane0Value"><exception cref="T:System.ArgumentException">The new value is less than 0 or greater than 255.</exception><summary>If UnfilledPelValueEnabled is True and the InputImage is a color image, the Plane 0 component of unfilled output pels will be set to this value.  Otherwise, this value is ignored.  Unfilled pels can only occur in an image produced by nonlinear warping.</summary><value>The Plane 0 value that will be written to unfilled color pixels.</value><event cref="E:Cognex.VisionPro.CalibFix.CogCalibCheckerboardRunParams.Changed">Fires when the value of this property changes.</event><remarks><PARA>
			If 
			<see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboardRunParams.UnfilledPelValueEnabled" /> is True,
			and the image is a <see cref="T:Cognex.VisionPro.CogImage24PlanarColor">planar image</see>,
	<see cref="u:Framework.CalibrationAndFixturing.Theory.NonlinearCalib" cgnxAnchor="destination_rectangle">unfilled pel values</see> 
	in 
		plane 0 of
	
	the output image will be initialized to this value.  
	Otherwise, this value is ignored.  
	Note that unfilled pels can only occur in an image produced by nonlinear warping.
	</PARA><PARA>
		The interpretation of this plane depends on the <see cref="P:Cognex.VisionPro.CogImage24PlanarColor.ColorSpace" /> of the image.
	</PARA><DEFAULT>128</DEFAULT></remarks></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboardRunParams.UnfilledPelValue"><summary>If UnfilledPelValueEnabled is True and the InputImage is a monochrome image, unfilled pels in the output image will be set to this value.  Otherwise, this value is ignored.  Unfilled pels can only occur in an image produced by nonlinear warping.</summary><remarks><PARA>
	If 
	<see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboardRunParams.UnfilledPelValueEnabled" /> is True,
	and the input image is a monochrome image,
	<see cref="u:Framework.CalibrationAndFixturing.Theory.NonlinearCalib" cgnxAnchor="destination_rectangle">unfilled pel values</see> 
	in the output image will be initialized to this grey level value.  
	Otherwise, this value is ignored.  
	Note that unfilled pels can only occur in an image produced by nonlinear warping.
	</PARA><DEFAULT>128</DEFAULT></remarks><event cref="E:Cognex.VisionPro.CalibFix.CogCalibCheckerboardRunParams.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogCalibCheckerboardRunParams_UnfilledPelValue--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardRunParams.SfUnfilledPelValue" /></li></ul></event><exception cref="T:System.ArgumentException">The new value is less than 0 or greater than 65535.</exception></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboardRunParams.UnfilledPelValueEnabled"><summary>If True, unfilled pels in the output image will be initialized using UnfilledPelValue, or UnfilledPelPlane{0, 1 and 2}Value.  Otherwise, unfilled pels will be uninitialized.  Unfilled pels can only occur in an image produced by nonlinear warping.</summary><remarks><PARA>
	If True,
	and the input image is a monochrom image,
	<see cref="u:Framework.CalibrationAndFixturing.Theory.NonlinearCalib" cgnxAnchor="destination_rectangle">unfilled pel values</see> 
	in the output image will be initialized to the grey level value 
	specified by <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboardRunParams.UnfilledPelValue" />.
	</PARA><PARA>
		If the image is a <see cref="T:Cognex.VisionPro.CogImage24PlanarColor">planar image</see>, 
		<see cref="u:Framework.CalibrationAndFixturing.Theory.NonlinearCalib" cgnxAnchor="destination_rectangle">unfilled pel values</see> 
		in each plane of the output image will be initialized to the values specified by
			<see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboardRunParams.UnfilledPelPlane0Value" />,
			<see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboardRunParams.UnfilledPelPlane1Value" />, and
			<see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboardRunParams.UnfilledPelPlane2Value" />.
		The interpretation of each value depends on the <see cref="P:Cognex.VisionPro.CogImage24PlanarColor.ColorSpace" /> of the image.
	</PARA><PARA>
	If False, unfilled pels will be uninitialized.  	Note that unfilled pels can only occur in an image produced by nonlinear warping.
	</PARA><PARA>
	Setting this property to False makes the tool run more 
	quickly, but the unfilled pels will contain unintialized values. These values may 
	cause problems for vision tools that process the output image, unless you configure 
	those tools to ignore the unfilled pels by using the computed 
	<see cref="P:Cognex.VisionPro.CalibFix.ICogCalibCheckerboardWarpParams.OutputImageMask" />.
	</PARA><DEFAULT>True</DEFAULT></remarks><event cref="E:Cognex.VisionPro.CalibFix.CogCalibCheckerboardRunParams.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogCalibCheckerboardRunParams_UnfilledPelValueEnabled--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardRunParams.SfUnfilledPelValueEnabled" /></li></ul></event></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboardRunParams.SpaceToOutput"><remarks><PARA>Specifies whether the selected space of the output image will be a fully-qualified copy of the calibrated space name, or a fully-qualified copy of the uncalibrated space name.</PARA><PARA>
If you have specified 
<see cref="T:Cognex.VisionPro.CalibFix.CogCalibFixComputationModeConstants">PerspectiveAndRadialWarp</see> for the 
<see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.ComputationMode" />, then 
the space tree associated with the output image does not contain an uncalibrated space. (Remember that 
the nonlinear transformation that maps between the input image pixels and the warped output 
image pixels is not included in the space tree; it is only available through 
<see cref="M:Cognex.VisionPro.CalibFix.ICogCalibCheckerboardWarpParams.GetInputPixelFromOutputPixelTransform(Cognex.VisionPro.ICogImage)" />.)
If you specify 
<see cref="T:Cognex.VisionPro.CalibFix.CogCalibSpaceToOutputConstants">UncalibratedSpace</see> the tool 
will specify "@" space as the output space.
</PARA></remarks><event cref="E:Cognex.VisionPro.CalibFix.CogCalibCheckerboardRunParams.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogCalibCheckerboardRunParams_SpaceToOutput--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardRunParams.SfSpaceToOutput" /></li></ul></event><summary>Specifies whether the selected space of the output image will be a fully-qualified copy of the calibrated space name, or a fully-qualified copy of the uncalibrated space name.</summary><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The new value is not in <see cref="T:Cognex.VisionPro.CalibFix.CogCalibSpaceToOutputConstants" />.</para></exception></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboardRunParams.CalibratedSpaceName"><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The new name is not a legal space name.</para></exception><event cref="E:Cognex.VisionPro.CalibFix.CogCalibCheckerboardRunParams.Changed" cgnxEvent="singleState"><para>
		
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogCalibCheckerboardRunParams_CalibratedSpaceName--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardRunParams.SfCalibratedSpaceName" /></li></ul></event><remarks><PARA>Name of the calibrated coordinate space that will be attached to the coordinate space tree of the output image.  This must be a valid non-qualified name.</PARA><DEFAULT>"Checkerboard Calibration"</DEFAULT></remarks><summary>Name of the calibrated coordinate space that will be attached to the coordinate space tree of the output image.  This must be a valid non-qualified name.</summary></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboardRunParams.ChangedEventSuspended"><summary>If nonzero, indicates that the raising of the Changed event has been suspended. This value is incremented when SuspendChangedEvent is called and decremented when ResumeAndRaiseChangedEvent is called.</summary></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboardRunParams.HasChanged"><summary>If true, the serializable state of this object has changed since the last time it was serialized.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibCheckerboardRunParams.~CogCalibCheckerboardRunParams"><summary>Releases all resources used by this object.  Do not attempt to access an object after it has been disposed.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibCheckerboardRunParams.!CogCalibCheckerboardRunParams"><summary>Releases all unmanaged resources used by this object.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibCheckerboardRunParams.Clone"><summary>Returns a deep copy of this class instance.  Derived classes that implement Clone should override this method; other clients who wish to clone this instance should call ICloneable.Clone. See also CogSerializer.DeepCopyObject</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibCheckerboardRunParams.SuspendChangedEvent"><summary>Temporarily suspends the raising of the Changed event. May be called more than once, and a corresponding call to ResumeAndRaiseChangedEvent must be made for each call to SuspendChangedEvent.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibCheckerboardRunParams.ResumeAndRaiseChangedEvent"><summary>Re-enables raising of the Changed event after SuspendChangedEvent has been called.  Also raises the Changed event if the ChangedEventSuspended count is reduced to zero and any changes were made while events were suspended. Must be called once for each call to SuspendChangedEvent.</summary></member><member name="E:Cognex.VisionPro.CalibFix.CogCalibCheckerboardRunParams.Changed"><summary>Occurs when one or more parts of the object's state may have changed.</summary></member><member name="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardTool"><summary>This tool defines a calibrated space using an image of a checkerboard plate.  When run, the tool converts its input image into an output image (possibly via nonlinear warping) and attaches the calibrated space to it, for use by downstream tools.</summary><remarks><PARA>
This tool defines a 
<see cref="u:Framework.CalibrationAndFixturing.Theory.CalibFixtures" cgnxAnchor="uncalibrated_raw_calibrated_and_calibrated_coord">calibrated coordinate space</see> 
using an image of a checkerboard plate.  When run, the tool converts its input image into an output image 
(<see cref="u:Framework.CalibrationAndFixturing.Theory.NonlinearCalib" cgnxAnchor="image_warping">warping</see> the image if you 
have specified a 
<see cref="u:Framework.CalibrationAndFixturing.Theory.NonlinearCalib" cgnxAnchor="nonlinear_distortion_and_image_warping">nonlinear calibration</see>) 
and attaches the calibrated space to it for use by downstream tools.
</PARA></remarks></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibCheckerboardTool.#ctor(Cognex.VisionPro.CalibFix.CogCalibCheckerboardTool)"><param name="other">The instance to copy from.</param><summary>Constructs a new instance of this class as a deep copy of the given instance.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibCheckerboardTool.#ctor"><summary>Constructs a new instance of this class.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibCheckerboardTool.#ctor(System.IntPtr)"><param name="impl">n/a</param><summary>Constructs a new instance of this class using com pointer.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardTool.SfLastRunRecordEnable"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by LastRunRecordEnable may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardTool.SfLastRunRecordDiagEnable"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by LastRunRecordDiagEnable may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardTool.SfCurrentRecordEnable"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by CurrentRecordEnable may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardTool.SfInputImage"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by InputImage may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardTool.SfCalibration"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Calibration may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardTool.SfRunParams"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by RunParams may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardTool.SfOutputImage"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by OutputImage may have changed.</summary></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboardTool.OutputImage"><remarks><PARA>
	The output image from the last run of the tool. If you have specified 
	<see cref="T:Cognex.VisionPro.CalibFix.CogCalibFixComputationModeConstants">PerspectiveAndRadialWarp</see> for the 
	<see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.ComputationMode" />, then the pixels in the input image 
	were warped to produce this output image.
	</PARA><PARA>
	In all cases, the tool adds the calibrated space to the <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboardTool.OutputImage" />'s space tree. The 
	<see cref="P:Cognex.VisionPro.ICogImage.SelectedSpaceName" /> is determined by the 
	<see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboardRunParams.SpaceToOutput" /> property.
	</PARA></remarks><summary>Output image from the last Run of the tool.  This image contains (possibly warped) pixels from the input image.  It also contains the calibrated coordinate space.  Its SelectedSpaceName is controlled by the SpaceToOutput property of the RunParams.</summary></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboardTool.RunParams"><summary>The runtime parameters for checkerboard calibration.  They include the name of the calibrated space, an enumeration that specifies the selected space of the calibrated image, and options for filling boundary pixels during nonlinear warping.</summary><remarks><PARA>The runtime parameters for checkerboard calibration.  They include the name of the calibrated space, an enumeration that specifies the selected space of the calibrated image, and options for filling boundary pixels during nonlinear warping.</PARA></remarks><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogCalibCheckerboardTool_RunParams--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardTool.SfRunParams" /></li></ul></event></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboardTool.Calibration"><remarks><PARA>
Operator object that defines the calibrated space for calibration.  It contains the parameters for computing the space (an image of the checkerboard plate, an optional adjustment transform) and a Calibrate method that does the computation.
</PARA><DEFAULT>A default-constructed <see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboard" /> object.</DEFAULT></remarks><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogCalibCheckerboardTool_Calibration--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardTool.SfCalibration" /></li></ul></event><exception cref="T:System.InvalidCastException" cgnxHRESULT="E_NOINTERFACE"><para>The supplied object is not really a <see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboard" /> object.</para></exception><summary>Object that defines the calibrated space for calibration.  It contains the parameters for computing the space (an image of the checkerboard plate, an optional adjustment transform) and a Calibrate method that does the computation.</summary></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboardTool.InputImage"><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogCalibCheckerboardTool_InputImage--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardTool.SfInputImage" /></li></ul></event><remarks><PARA>
	The input image for the tool. If you have specified 
	<see cref="T:Cognex.VisionPro.CalibFix.CogCalibFixComputationModeConstants">PerspectiveAndRadialWarp</see> for the 
	<see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.ComputationMode" />, then the pixels in the input image 
	are warped to produce the output image. 	</PARA><PARA>
	In all cases, the tool adds the calibrated space to the <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboardTool.OutputImage" />'s space tree.
	</PARA></remarks><summary>The pixels of this image become the pixels of the output image (possibly via warping).  This image is typically not an image of the calibration plate.  Its selected space is the uncalibrated space.</summary></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboardTool.CurrentRecordEnable"><summary>Enable creation of records by bitwise ORing the appropriate CurrentRecordConstants.</summary><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogCalibCheckerboardTool_CurrentRecordEnable--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardTool.SfCurrentRecordEnable" /></li></ul></event><remarks><PARA>Enable creation of records by bitwise ORing the appropriate 
<see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardCurrentRecordConstants" />.</PARA><DEFAULT><see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardCurrentRecordConstants">InputImage</see> +
<see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardCurrentRecordConstants">CalibratedAxes</see> +
<see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardCurrentRecordConstants">CalibrationImage</see> +
<see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardCurrentRecordConstants">CalUncalibratedPoints</see> +
<see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardCurrentRecordConstants">CalCalibratedAxes</see> +
<see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardCurrentRecordConstants">UndistortedCalibrationImage</see> +
<see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardCurrentRecordConstants">CalDestinationRectangle</see> +
<see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardCurrentRecordConstants">CalUndistortedImageMask</see></DEFAULT></remarks></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboardTool.LastRunRecordDiagEnable"><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogCalibCheckerboardTool_LastRunRecordDiagEnable--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardTool.SfLastRunRecordDiagEnable" /></li></ul></event><remarks><PARA>Enable creation of records by bitwise ORing the appropriate 
	<see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardLastRunRecordDiagConstants" />.  These are diagnostic records that may cause the Tool to have a longer execution time.</PARA><DEFAULT><see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardLastRunRecordDiagConstants">CalibratedAxes</see></DEFAULT></remarks><summary>Enable creation of records by bitwise ORing the appropriate LastRunRecordDiagConstants.  These are diagnostic records that may cause the Tool to have a longer execution time.</summary></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboardTool.LastRunRecordEnable"><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogCalibCheckerboardTool_LastRunRecordEnable--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardTool.SfLastRunRecordEnable" /></li></ul></event><summary>Enable creation of records by bitwise ORing the appropriate LastRunRecordConstants.</summary><remarks><PARA>Enable creation of records by bitwise ORing the appropriate 
	<see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardLastRunRecordConstants" />.</PARA><DEFAULT><see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardLastRunRecordConstants">OutputImage</see></DEFAULT></remarks></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboardTool.RunStatus"><summary>Gets general information about the last call to Run.</summary></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboardTool.Name"><summary>Gets or sets the name of the tool.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibCheckerboardTool.Clone"><summary>Returns a deep copy of this class instance.  Derived classes that implement Clone should override this method; other clients who wish to clone this instance should call ICloneable.Clone. See also CogSerializer.DeepCopyObject.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibCheckerboardTool.Run"><exception cref="T:Cognex.VisionPro.Exceptions.CogSecurityViolationException" cgnxHRESULT="E_Cog_SecurityViolation"><para>Security is not enabled for this vision tool. See 
<see cref="u:Programming.Tools.Theory.Security" cgnxAnchor="resolving_securityrelated_error_messages">Resolving Security-Related Error Messages</see>
for more information.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogToolNoOperatorException" cgnxHRESULT="E_CogTool_NoOperator"><para><see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboardTool.Calibration" /> is NULL.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogOperatorNoInputImageException" cgnxHRESULT="E_CogOperator_NoInputImage"><para><see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboardTool.InputImage" /> is NULL.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogImageBadTypeException" cgnxHRESULT="E_CogImage_BadType"><para><see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboardTool.InputImage" /> is not an <see cref="T:Cognex.VisionPro.CogImage8Grey" />.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogOperatorNoRunParamsException" cgnxHRESULT="E_CogOperator_NoRunParams"><para><see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboardTool.RunParams" /> is NULL.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogCalibFixCannotWarpException" cgnxHRESULT="E_CogCalibFix_CannotWarp"><para><see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboardTool.InputImage" /> does not contain all the pixels required by the nonlinear warper or he transform between the selected space of <paramref name="InputImage" />, or its pixels differ by more than a 
<see cref="u:Framework.CalibrationAndFixturing.Theory.NonlinearCalib" cgnxAnchor="wholepixel_image_shift">whole-pixel shift</see> 
from the similar transformation object contained in the <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.CalibrationImage" />.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogCalibFixNotCalibratedException" cgnxHRESULT="E_CogCalibFix_NotCalibrated"><para>
This object has not been calibrated.
</para></exception><remarks><PARA>
	Runs the tool. If <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.ComputationMode" /> is 
	<see cref="T:Cognex.VisionPro.CalibFix.CogCalibFixComputationModeConstants">PerspectiveAndRadialWarp</see>, 
	the tool creates a new output image by warping the pixels in the <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboardTool.InputImage" /> to account 
	for radial and perspective distortion, then attaches the computed calibration transformation 
	to the new image's coordinate space tree. 
	</PARA><PARA>
	If <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.ComputationMode" /> is 
	<see cref="T:Cognex.VisionPro.CalibFix.CogCalibFixComputationModeConstants">Linear</see>, 
	the tool copies the <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboardTool.InputImage" /> to the <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboardTool.OutputImage" />, 
	then attaches the computed calibration transformation 
	to the new image's coordinate space tree.
	</PARA><NOTE>
You must call <see cref="M:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Calibrate" /> before attempting to run this tool.
</NOTE><NOTE>
		This method does not actually raise the exceptions listed below. 
		Use the <see cref="P:Cognex.VisionPro.CogFitCircleTool.RunStatus" /> property
		to obtain a <see cref="T:Cognex.VisionPro.ICogRunStatus" /> reference. Then use
		its <see cref="P:Cognex.VisionPro.ICogRunStatus.Exception" /> property to see
		if the Run method raised any exceptions.
	</NOTE></remarks><event cref="E:Cognex.VisionPro.ICogTool.Running" cgnxEvent="PreRun"><para>
		Fires before the tool runs.
	</para></event><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed" cgnxEvent="multiState"><para>
	
		Fires when the tool runs. If the run was successful, results are generated;
		if the run was not successful, no results are generated and the previous results are cleared.
		Use <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboardTool.RunStatus" /> after <see cref="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardTool" /> returns or in a
	<event cref="E:Cognex.VisionPro.ICogTool.Ran" cgnxEvent="PostRun" /> event handler
		to determine whether a run was successful or unsuccessful.
	</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_Tool_Results--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardTool.SfOutputImage" /></li><!--FA:cogFA_Tool_LastRunRecord--></ul></event><event cref="E:Cognex.VisionPro.ICogTool.Ran" cgnxEvent="PostRun"><para>
		Fires after the tool runs.
	</para></event><summary>Runs the tool using the current parameter settings.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibCheckerboardTool.~CogCalibCheckerboardTool"><summary>Releases all resources used by this object.  Do not attempt to access an object after it has been disposed.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibCheckerboardTool.!CogCalibCheckerboardTool"><summary>Releases all unmanaged resources used by this object.</summary></member><member name="T:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint"><summary>The CogCalibNPointToNPoint object defines a calibrated coordinate space using N pairs of points and allows users to attach this space to an image.</summary><remarks><PARA>This interface defines a calibrated coordinate space using N pairs of points and allows you to attach this space to an image.</PARA></remarks></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.#ctor(Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint)"><param name="other">The instance to copy from.</param><summary>Constructs a new instance of this class as a deep copy of the given instance.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.#ctor"><summary>Constructs a new instance of this class.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.#ctor(System.IntPtr)"><param name="impl">n/a</param><summary>Constructs a new instance of this class using com pointer.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfNumPoints"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by NumPoints may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetUncalibratedPointX"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by GetUncalibratedPointX may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetUncalibratedPointY"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by GetUncalibratedPointY may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetRawCalibratedPointX"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by GetRawCalibratedPointX may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetRawCalibratedPointY"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by GetRawCalibratedPointY may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfDOFsToCompute"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by DOFsToCompute may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfComputationMode"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by ComputationMode may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibratedOriginX"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by CalibratedOriginX may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibratedOriginY"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by CalibratedOriginY may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibratedOriginSpace"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by CalibratedOriginSpace may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibratedXAxisRotation"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by CalibratedXAxisRotation may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibratedXAxisRotationSpace"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by CalibratedXAxisRotationSpace may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfSwapCalibratedHandedness"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by SwapCalibratedHandedness may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibrated"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Calibrated may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetComputedUncalibratedFromCalibratedTransform"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by GetComputedUncalibratedFromCalibratedTransform may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetComputedUncalibratedFromRawCalibratedTransform"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by GetComputedUncalibratedFromRawCalibratedTransform may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfComputedRMSError"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by ComputedRMSError may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetInfoStrings"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by GetInfoStrings may have changed.</summary></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.ComputedRMSError"><remarks><PARA>Returns the <see cref="u:Framework.CalibrationAndFixturing.Theory.CalibFixtures" cgnxAnchor="rms_error_and_degrees_of_freedom_dofs">root mean squared (RMS) error</see> between the uncalibrated points and the mapped raw calibrated points, expressed in uncalibrated space. The RMS error value is valid if the computed uncalibrated from raw calibrated transform exists. Otherwise, this method returns zero.</PARA><PARA>The mapped raw calibrated points are calculated by applying the UncalibratedFromRawCalibrated transform to the raw calibrated points. If the <see cref="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Calibrated" /> property is True, this transform, which is the result of calling <see cref="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Calibrate" />, is always non-null. However, it may also be non-null if <see cref="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Calibrated" /> is False. For example, if you calibrate and then change only the RawCalibratedFromCalibrated transform, the UncalibratedFromRawCalibrated transform remains unaffected, even though <see cref="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Calibrated" /> is now set to False.</PARA><DEFAULT>0</DEFAULT></remarks><summary>Returns the root mean squared error between the uncalibrated points and the mapped raw calibrated points, expressed in uncalibrated space.  It is valid if the computed uncalibrated from raw calibrated transform exists.  Otherwise, zero is returned.</summary></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Calibrated"><summary>True if all of the computed outputs of this object are meaningful, and were computed using the current object properties.  This can only happen if the Calibrate method is called and none of the object properties are changed afterwards.</summary><remarks><PARA>True if all of the computed outputs of this object are meaningful and were computed using the current object properties. This can only happen if the <see cref="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Calibrate" /> method is called and none of the object properties are changed afterwards.</PARA><DEFAULT>False</DEFAULT></remarks></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SwapCalibratedHandedness"><remarks><PARA>Specifies the handedness of the calibrated space.  When <see cref="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SwapCalibratedHandedness" /> is false, the calibrated space has the same handedness as the raw (unadjusted) calibrated space. Otherwise, it has the opposite handedness.</PARA><DEFAULT>False</DEFAULT></remarks><summary>Specifies the handedness of the calibrated space.   When SwapCalibratedHandedness is false, the calibrated space will have the same handedness as the raw (unadjusted) calibrated space.  Otherwise, it will have the opposite handedness.</summary><event cref="E:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Changed" cgnxEvent="singleState"><para>
		
		Fires if a transform is not computed. 
	</para><para>The following state flag may be affected:</para><!--STATEID:cogCalibNPointToNPoint_SwapCalibratedHandedness--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfSwapCalibratedHandedness" /></li></ul></event><event cref="E:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Changed" cgnxEvent="multiState"><para>
		
		Fires if results must be uncomputed. 
	</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_Misc--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfDOFsToCompute" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfComputationMode" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibratedOriginX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibratedOriginY" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibratedOriginSpace" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibratedXAxisRotation" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibratedXAxisRotationSpace" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfSwapCalibratedHandedness" /></li><!--FA:cogFA_NPointToNPoint_ComputeResults--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibrated" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetComputedUncalibratedFromCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetComputedUncalibratedFromRawCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfComputedRMSError" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetInfoStrings" /></li></ul></event></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.CalibratedXAxisRotationSpace"><remarks><PARA>Specifies whether the <see cref="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.CalibratedXAxisRotation" /> property is expressed in <see cref="u:Framework.CalibrationAndFixturing.Theory.CalibFixtures" cgnxAnchor="uncalibrated_raw_calibrated_and_calibrated_coord">uncalibrated space</see> or <see cref="u:Framework.CalibrationAndFixturing.Theory.CalibFixtures" cgnxAnchor="uncalibrated_raw_calibrated_and_calibrated_coord">raw calibrated space</see>.</PARA><DEFAULT><see cref="T:Cognex.VisionPro.CalibFix.CogCalibNPointAdjustmentSpaceConstants">RawCalibrated</see></DEFAULT></remarks><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The new value is not a valid member of the <see cref="T:Cognex.VisionPro.CalibFix.CogCalibNPointAdjustmentSpaceConstants" /> enumeration.</para></exception><event cref="E:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Changed" cgnxEvent="singleState"><para>
		
		Fires if a transform is not computed. 
	</para><para>The following state flag may be affected:</para><!--STATEID:cogCalibNPointToNPoint_CalibratedXAxisRotationSpace--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibratedXAxisRotationSpace" /></li></ul></event><event cref="E:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Changed" cgnxEvent="multiState"><para>
		
		Fires if results must be uncomputed. 
	</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_Misc--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfDOFsToCompute" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfComputationMode" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibratedOriginX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibratedOriginY" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibratedOriginSpace" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibratedXAxisRotation" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibratedXAxisRotationSpace" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfSwapCalibratedHandedness" /></li><!--FA:cogFA_NPointToNPoint_ComputeResults--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibrated" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetComputedUncalibratedFromCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetComputedUncalibratedFromRawCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfComputedRMSError" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetInfoStrings" /></li></ul></event><summary>Specifies whether the CalibratedXAxisRotation property is expressed in uncalibrated space, or in raw calibrated space.</summary></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.CalibratedXAxisRotation"><summary>The desired x-axis rotation of calibrated space, expressed in the coordinate space specified by CalibratedXAxisRotationSpace.  Calibrated space will be adjusted so that its x-axis appears at this angle (in radians) when calibrated.</summary><remarks><PARA>The x-axis rotation of calibrated space, expressed in the coordinate space specified by <see cref="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.CalibratedXAxisRotationSpace" />.  Calibrated space will be adjusted so that its x-axis appears at this angle when calibrated.</PARA><NOTE>You must specify the angle in radians.</NOTE><DEFAULT>0</DEFAULT></remarks><event cref="E:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Changed" cgnxEvent="singleState"><para>
		
		Fires if a transform is not computed. 
	</para><para>The following state flag may be affected:</para><!--STATEID:cogCalibNPointToNPoint_CalibratedXAxisRotation--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibratedXAxisRotation" /></li></ul></event><event cref="E:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Changed" cgnxEvent="multiState"><para>
		
		Fires if results must be uncomputed. 
	</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_Misc--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfDOFsToCompute" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfComputationMode" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibratedOriginX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibratedOriginY" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibratedOriginSpace" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibratedXAxisRotation" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibratedXAxisRotationSpace" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfSwapCalibratedHandedness" /></li><!--FA:cogFA_NPointToNPoint_ComputeResults--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibrated" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetComputedUncalibratedFromCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetComputedUncalibratedFromRawCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfComputedRMSError" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetInfoStrings" /></li></ul></event></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.CalibratedOriginSpace"><remarks><PARA>Specifies whether the <see cref="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.CalibratedOriginX" /> and <see cref="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.CalibratedOriginY" /> properties are expressed in <see cref="u:Framework.CalibrationAndFixturing.Theory.CalibFixtures" cgnxAnchor="uncalibrated_raw_calibrated_and_calibrated_coord">uncalibrated space</see> or in <see cref="u:Framework.CalibrationAndFixturing.Theory.CalibFixtures" cgnxAnchor="uncalibrated_raw_calibrated_and_calibrated_coord">raw calibrated space</see>.</PARA><DEFAULT><see cref="T:Cognex.VisionPro.CalibFix.CogCalibNPointAdjustmentSpaceConstants">RawCalibrated</see></DEFAULT></remarks><event cref="E:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Changed" cgnxEvent="singleState"><para>
		
		Fires if a transform is not computed. 
	</para><para>The following state flag may be affected:</para><!--STATEID:cogCalibNPointToNPoint_CalibratedOriginSpace--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibratedOriginSpace" /></li></ul></event><event cref="E:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Changed" cgnxEvent="multiState"><para>
		
		Fires if results must be uncomputed. 
	</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_Misc--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfDOFsToCompute" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfComputationMode" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibratedOriginX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibratedOriginY" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibratedOriginSpace" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibratedXAxisRotation" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibratedXAxisRotationSpace" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfSwapCalibratedHandedness" /></li><!--FA:cogFA_NPointToNPoint_ComputeResults--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibrated" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetComputedUncalibratedFromCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetComputedUncalibratedFromRawCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfComputedRMSError" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetInfoStrings" /></li></ul></event><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The new value is not a valid member of the <see cref="T:Cognex.VisionPro.CalibFix.CogCalibNPointAdjustmentSpaceConstants" /> enumeration.</para></exception><summary>Specifies whether the CalibratedOriginX and CalibratedOriginY properties are expressed in uncalibrated space, or in raw calibrated space.</summary></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.CalibratedOriginY"><remarks><PARA>Returns or sets the y-coordinate position of the calibrated space origin, expressed in the coordinate space specified by <see cref="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.CalibratedOriginSpace" />. Calibrated space will be adjusted so that its origin appears at this y-coordinate position when calibrated.</PARA><DEFAULT>0</DEFAULT></remarks><event cref="E:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Changed" cgnxEvent="singleState"><para>
		
		Fires if a transform is not computed. 
	</para><para>The following state flag may be affected:</para><!--STATEID:cogCalibNPointToNPoint_CalibratedOriginY--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibratedOriginY" /></li></ul></event><event cref="E:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Changed" cgnxEvent="multiState"><para>
		
		Fires if results must be uncomputed. 
	</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_Misc--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfDOFsToCompute" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfComputationMode" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibratedOriginX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibratedOriginY" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibratedOriginSpace" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibratedXAxisRotation" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibratedXAxisRotationSpace" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfSwapCalibratedHandedness" /></li><!--FA:cogFA_NPointToNPoint_ComputeResults--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibrated" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetComputedUncalibratedFromCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetComputedUncalibratedFromRawCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfComputedRMSError" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetInfoStrings" /></li></ul></event><summary>The desired Y position of the calibrated space origin, expressed in the coordinate space specified by CalibratedOriginSpace.  Calibrated space will be adjusted so that its origin appears at this Y position when calibrated.</summary></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.CalibratedOriginX"><remarks><PARA>Returns or sets the x-coordinate position of the calibrated space origin, expressed in the coordinate space specified by <see cref="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.CalibratedOriginSpace" />. Calibrated space will be adjusted so that its origin appears at this x-coordinate position when calibrated.</PARA><DEFAULT>0</DEFAULT></remarks><event cref="E:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Changed" cgnxEvent="singleState"><para>
		
		Fires if a transform is not computed. 
	</para><para>The following state flag may be affected:</para><!--STATEID:cogCalibNPointToNPoint_CalibratedOriginX--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibratedOriginX" /></li></ul></event><event cref="E:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Changed" cgnxEvent="multiState"><para>
		
		Fires if results must be uncomputed. 
	</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_Misc--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfDOFsToCompute" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfComputationMode" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibratedOriginX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibratedOriginY" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibratedOriginSpace" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibratedXAxisRotation" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibratedXAxisRotationSpace" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfSwapCalibratedHandedness" /></li><!--FA:cogFA_NPointToNPoint_ComputeResults--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibrated" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetComputedUncalibratedFromCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetComputedUncalibratedFromRawCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfComputedRMSError" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetInfoStrings" /></li></ul></event><summary>The desired X position of the calibrated space origin, expressed in the coordinate space specified by CalibratedOriginSpace.  Calibrated space will be adjusted so that its origin appears at this X position when calibrated.</summary></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.ComputationMode"><event cref="E:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Changed" cgnxEvent="singleState"><para>
		
		Fires if the transformation is not computed. 
	</para><para>The following state flag may be affected:</para><!--STATEID:cogFixtureNPointToNPoint_ComputationMode--><ul /></event><event cref="E:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Changed" cgnxEvent="multiState"><para>
		
		Fires if results must be recomputed using the transform. 
	</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_Misc--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfDOFsToCompute" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfComputationMode" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibratedOriginX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibratedOriginY" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibratedOriginSpace" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibratedXAxisRotation" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibratedXAxisRotationSpace" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfSwapCalibratedHandedness" /></li><!--FA:cogFA_NPointToNPoint_ComputeResults--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibrated" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetComputedUncalibratedFromCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetComputedUncalibratedFromRawCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfComputedRMSError" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetInfoStrings" /></li></ul></event><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The supplied value is not a valid member of the <see cref="T:Cognex.VisionPro.CalibFix.CogCalibFixComputationModeConstants" /> enumeration.</para></exception><summary>This enumeration specifies how the best-fit transformation between the uncalibrated points and the raw calibrated points will be computed.  Only linear computations are supported in this release.</summary><remarks><PARA>Returns or sets how the best-fit transformation between the uncalibrated points and the raw calibrated points will be computed. This release supports only linear computations.</PARA><DEFAULT><see cref="T:Cognex.VisionPro.CalibFix.CogCalibFixComputationModeConstants">Linear</see></DEFAULT></remarks></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.DOFsToCompute"><remarks><PARA>Returns or sets an enumeration that specifies which degrees of freedom (DOFs) are allowed when computing the best-fit transformation between the uncalibrated points and the raw calibrated points.</PARA></remarks><summary>This enumeration specifies which degrees of freedom will be allowed when computing the best-fit transformation between the uncalibrated points and the raw calibrated points.</summary><event cref="E:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Changed" cgnxEvent="singleState"><para>
		
		Fires if a transform is not computed. 
	</para><para>The following state flag may be affected:</para><!--STATEID:cogCalibNPointToNPoint_DOFsToCompute--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfDOFsToCompute" /></li></ul></event><event cref="E:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Changed" cgnxEvent="multiState"><para>
		
		Fires if results must be uncomputed. 
	</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_Misc--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfDOFsToCompute" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfComputationMode" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibratedOriginX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibratedOriginY" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibratedOriginSpace" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibratedXAxisRotation" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibratedXAxisRotationSpace" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfSwapCalibratedHandedness" /></li><!--FA:cogFA_NPointToNPoint_ComputeResults--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibrated" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetComputedUncalibratedFromCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetComputedUncalibratedFromRawCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfComputedRMSError" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetInfoStrings" /></li></ul></event><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The supplied value is not a valid member of the <see cref="T:Cognex.VisionPro.CalibFix.CogNPointToNPointDOFConstants" /> enumeration.</para></exception></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.NumPoints"><remarks><PARA>The number of points in each point set. This is the number of raw calibrated points and also the number of uncalibrated points.</PARA><PARA>If you increase the number of points, the extra points are added to the end of the existing point sets and initialized to (0, 0).  If you decrease the number of points, the points are removed from the end of each point set.</PARA><DEFAULT>0</DEFAULT></remarks><event cref="E:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Changed" cgnxEvent="multiState"><para>
		
		Fires if a transform is not computed. 
	</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_NPointToNPoint_PointSet--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfNumPoints" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetUncalibratedPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetUncalibratedPointY" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetRawCalibratedPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetRawCalibratedPointY" /></li></ul></event><event cref="E:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Changed" cgnxEvent="multiState"><para>
		
		Fires if results must be uncomputed. 
	</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_NPointToNPoint_PointSet--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfNumPoints" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetUncalibratedPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetUncalibratedPointY" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetRawCalibratedPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetRawCalibratedPointY" /></li><!--FA:cogFA_NPointToNPoint_ComputeResults--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibrated" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetComputedUncalibratedFromCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetComputedUncalibratedFromRawCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfComputedRMSError" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetInfoStrings" /></li></ul></event><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The new value is less than 0.</para></exception><summary>The number of points in each point set.  This is the number of raw calibrated points, and also the number of uncalibrated points.</summary></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.ChangedEventSuspended"><summary>If nonzero, indicates that the raising of the Changed event has been suspended. This value is incremented when SuspendChangedEvent is called and decremented when ResumeAndRaiseChangedEvent is called.</summary></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.HasChanged"><summary>If true, the serializable state of this object has changed since the last time it was serialized.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.~CogCalibNPointToNPoint"><summary>Releases all resources used by this object.  Do not attempt to access an object after it has been disposed.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.!CogCalibNPointToNPoint"><summary>Releases all unmanaged resources used by this object.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Clone"><summary>Returns a deep copy of this class instance.  Derived classes that implement Clone should override this method; other clients who wish to clone this instance should call ICloneable.Clone. See also CogSerializer.DeepCopyObject</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SuspendChangedEvent"><summary>Temporarily suspends the raising of the Changed event. May be called more than once, and a corresponding call to ResumeAndRaiseChangedEvent must be made for each call to SuspendChangedEvent.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.ResumeAndRaiseChangedEvent"><summary>Re-enables raising of the Changed event after SuspendChangedEvent has been called.  Also raises the Changed event if the ChangedEventSuspended count is reduced to zero and any changes were made while events were suspended. Must be called once for each call to SuspendChangedEvent.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.GetUncalibratedPointX(System.Int32)"><param name="index"><PARA>The index of the point.</PARA></param><event cref="E:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Changed" cgnxEvent="singleState"><para>
		
		Fires if a transform is not computed. 
	</para><para>The following state flag may be affected:</para><!--STATEID:cogCalibNPointToNPoint_UncalibratedPointX--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetUncalibratedPointX" /></li></ul></event><event cref="E:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Changed" cgnxEvent="multiState"><para>
		
		Fires if results must be uncomputed. 
	</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_NPointToNPoint_PointSet--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfNumPoints" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetUncalibratedPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetUncalibratedPointY" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetRawCalibratedPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetRawCalibratedPointY" /></li><!--FA:cogFA_NPointToNPoint_ComputeResults--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibrated" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetComputedUncalibratedFromCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetComputedUncalibratedFromRawCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfComputedRMSError" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetInfoStrings" /></li></ul></event><summary>The X coordinate of the uncalibrated point with the given index.  Valid indices range from 0 to NumPoints-1 inclusive.</summary><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="index" /> is less than 0 or greater than or equal to <see cref="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.NumPoints" />.</para></exception><remarks><PARA>Returns or sets the x-axis coordinate of the uncalibrated point with the given index. Valid indices range from 0 to NumPoints - 1, inclusive.</PARA><DEFAULT>0</DEFAULT></remarks></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SetUncalibratedPointX(System.Int32,System.Double)"><param name="index"><PARA>The index of the point.</PARA></param><param name="value"></param><event cref="E:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Changed" cgnxEvent="singleState"><para>
		
		Fires if a transform is not computed. 
	</para><para>The following state flag may be affected:</para><!--STATEID:cogCalibNPointToNPoint_UncalibratedPointX--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetUncalibratedPointX" /></li></ul></event><event cref="E:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Changed" cgnxEvent="multiState"><para>
		
		Fires if results must be uncomputed. 
	</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_NPointToNPoint_PointSet--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfNumPoints" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetUncalibratedPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetUncalibratedPointY" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetRawCalibratedPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetRawCalibratedPointY" /></li><!--FA:cogFA_NPointToNPoint_ComputeResults--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibrated" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetComputedUncalibratedFromCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetComputedUncalibratedFromRawCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfComputedRMSError" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetInfoStrings" /></li></ul></event><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="index" /> is less than 0 or greater than or equal to <see cref="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.NumPoints" />.</para></exception><remarks><PARA>Returns or sets the x-axis coordinate of the uncalibrated point with the given index. Valid indices range from 0 to NumPoints - 1, inclusive.</PARA><DEFAULT>0</DEFAULT></remarks><summary>The X coordinate of the uncalibrated point with the given index.  Valid indices range from 0 to NumPoints-1 inclusive.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.GetUncalibratedPointY(System.Int32)"><param name="index"><PARA>The index of the point.</PARA></param><remarks><PARA>Returns or sets the y-axis coordinate of the uncalibrated point with the given index. Valid indices range from 0 to NumPoints - 1, inclusive.</PARA><DEFAULT>0</DEFAULT></remarks><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="index" /> is less than 0 or greater than or equal to <see cref="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.NumPoints" />.</para></exception><summary>The Y coordinate of the uncalibrated point with the given index.  Valid indices range from 0 to NumPoints-1 inclusive.</summary><event cref="E:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Changed" cgnxEvent="singleState"><para>
		
		Fires if a transform is not computed. 
	</para><para>The following state flag may be affected:</para><!--STATEID:cogCalibNPointToNPoint_UncalibratedPointY--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetUncalibratedPointY" /></li></ul></event><event cref="E:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Changed" cgnxEvent="multiState"><para>
		
		Fires if results must be uncomputed. 
	</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_NPointToNPoint_PointSet--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfNumPoints" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetUncalibratedPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetUncalibratedPointY" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetRawCalibratedPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetRawCalibratedPointY" /></li><!--FA:cogFA_NPointToNPoint_ComputeResults--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibrated" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetComputedUncalibratedFromCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetComputedUncalibratedFromRawCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfComputedRMSError" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetInfoStrings" /></li></ul></event></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SetUncalibratedPointY(System.Int32,System.Double)"><param name="index"><PARA>The index of the point.</PARA></param><param name="value"></param><summary>The Y coordinate of the uncalibrated point with the given index.  Valid indices range from 0 to NumPoints-1 inclusive.</summary><remarks><PARA>Returns or sets the y-axis coordinate of the uncalibrated point with the given index. Valid indices range from 0 to NumPoints - 1, inclusive.</PARA><DEFAULT>0</DEFAULT></remarks><event cref="E:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Changed" cgnxEvent="singleState"><para>
		
		Fires if a transform is not computed. 
	</para><para>The following state flag may be affected:</para><!--STATEID:cogCalibNPointToNPoint_UncalibratedPointY--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetUncalibratedPointY" /></li></ul></event><event cref="E:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Changed" cgnxEvent="multiState"><para>
		
		Fires if results must be uncomputed. 
	</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_NPointToNPoint_PointSet--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfNumPoints" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetUncalibratedPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetUncalibratedPointY" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetRawCalibratedPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetRawCalibratedPointY" /></li><!--FA:cogFA_NPointToNPoint_ComputeResults--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibrated" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetComputedUncalibratedFromCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetComputedUncalibratedFromRawCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfComputedRMSError" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetInfoStrings" /></li></ul></event><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="index" /> is less than 0 or greater than or equal to <see cref="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.NumPoints" />.</para></exception></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.GetRawCalibratedPointX(System.Int32)"><param name="index"><PARA>The index of the point.</PARA></param><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="index" /> is less than 0 or greater than or equal to <see cref="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.NumPoints" />.</para></exception><summary>The X coordinate of the raw calibrated point with the given index.  Valid indices range from 0 to NumPoints-1 inclusive.</summary><event cref="E:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Changed" cgnxEvent="singleState"><para>
		
		Fires if a transform is not computed. 
	</para><para>The following state flag may be affected:</para><!--STATEID:cogCalibNPointToNPoint_RawCalibratedPointX--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetRawCalibratedPointX" /></li></ul></event><event cref="E:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Changed" cgnxEvent="multiState"><para>
		
		Fires if results must be uncomputed. 
	</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_NPointToNPoint_PointSet--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfNumPoints" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetUncalibratedPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetUncalibratedPointY" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetRawCalibratedPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetRawCalibratedPointY" /></li><!--FA:cogFA_NPointToNPoint_ComputeResults--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibrated" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetComputedUncalibratedFromCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetComputedUncalibratedFromRawCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfComputedRMSError" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetInfoStrings" /></li></ul></event><remarks><PARA>Returns or sets the x-axis coordinate of the raw calibrated point with the given index. Valid indices range from 0 to NumPoints - 1, inclusive.</PARA><DEFAULT>0</DEFAULT></remarks></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SetRawCalibratedPointX(System.Int32,System.Double)"><param name="index"><PARA>The index of the point.</PARA></param><param name="value"></param><event cref="E:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Changed" cgnxEvent="singleState"><para>
		
		Fires if a transform is not computed. 
	</para><para>The following state flag may be affected:</para><!--STATEID:cogCalibNPointToNPoint_RawCalibratedPointX--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetRawCalibratedPointX" /></li></ul></event><event cref="E:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Changed" cgnxEvent="multiState"><para>
		
		Fires if results must be uncomputed. 
	</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_NPointToNPoint_PointSet--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfNumPoints" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetUncalibratedPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetUncalibratedPointY" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetRawCalibratedPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetRawCalibratedPointY" /></li><!--FA:cogFA_NPointToNPoint_ComputeResults--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibrated" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetComputedUncalibratedFromCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetComputedUncalibratedFromRawCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfComputedRMSError" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetInfoStrings" /></li></ul></event><remarks><PARA>Returns or sets the x-axis coordinate of the raw calibrated point with the given index. Valid indices range from 0 to NumPoints - 1, inclusive.</PARA><DEFAULT>0</DEFAULT></remarks><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="index" /> is less than 0 or greater than or equal to <see cref="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.NumPoints" />.</para></exception><summary>The X coordinate of the raw calibrated point with the given index.  Valid indices range from 0 to NumPoints-1 inclusive.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.GetRawCalibratedPointY(System.Int32)"><param name="index"><PARA>The index of the point.</PARA></param><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="index" /> is less than 0 or greater than or equal to <see cref="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.NumPoints" />.</para></exception><event cref="E:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Changed" cgnxEvent="singleState"><para>
		
		Fires if a transform is not computed. 
	</para><para>The following state flag may be affected:</para><!--STATEID:cogCalibNPointToNPoint_RawCalibratedPointY--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetRawCalibratedPointY" /></li></ul></event><event cref="E:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Changed" cgnxEvent="multiState"><para>
		
		Fires if results must be uncomputed. 
	</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_NPointToNPoint_PointSet--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfNumPoints" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetUncalibratedPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetUncalibratedPointY" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetRawCalibratedPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetRawCalibratedPointY" /></li><!--FA:cogFA_NPointToNPoint_ComputeResults--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibrated" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetComputedUncalibratedFromCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetComputedUncalibratedFromRawCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfComputedRMSError" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetInfoStrings" /></li></ul></event><remarks><PARA>Returns or sets the y-axis coordinate of the raw calibrated point with the given index. Valid indices range from 0 to NumPoints - 1,  inclusive.</PARA><DEFAULT>0</DEFAULT></remarks><summary>The Y coordinate of the raw calibrated point with the given index.  Valid indices range from 0 to NumPoints-1 inclusive.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SetRawCalibratedPointY(System.Int32,System.Double)"><param name="index"><PARA>The index of the point.</PARA></param><param name="value"></param><event cref="E:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Changed" cgnxEvent="singleState"><para>
		
		Fires if a transform is not computed. 
	</para><para>The following state flag may be affected:</para><!--STATEID:cogCalibNPointToNPoint_RawCalibratedPointY--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetRawCalibratedPointY" /></li></ul></event><event cref="E:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Changed" cgnxEvent="multiState"><para>
		
		Fires if results must be uncomputed. 
	</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_NPointToNPoint_PointSet--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfNumPoints" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetUncalibratedPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetUncalibratedPointY" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetRawCalibratedPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetRawCalibratedPointY" /></li><!--FA:cogFA_NPointToNPoint_ComputeResults--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibrated" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetComputedUncalibratedFromCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetComputedUncalibratedFromRawCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfComputedRMSError" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetInfoStrings" /></li></ul></event><remarks><PARA>Returns or sets the y-axis coordinate of the raw calibrated point with the given index. Valid indices range from 0 to NumPoints - 1,  inclusive.</PARA><DEFAULT>0</DEFAULT></remarks><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="index" /> is less than 0 or greater than or equal to <see cref="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.NumPoints" />.</para></exception><summary>The Y coordinate of the raw calibrated point with the given index.  Valid indices range from 0 to NumPoints-1 inclusive.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SetUncalibratedPoint(System.Int32,System.Double,System.Double)"><param name="index"><PARA>The index of the point.</PARA></param><param name="x"><PARA>The new x-axis value.</PARA></param><param name="y"><PARA>The new y-axis value.</PARA></param><event cref="E:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Changed" cgnxEvent="multiState"><para>
		
		Fires if a transform is not computed. 
	</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_NPointToNPoint_PointSet--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfNumPoints" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetUncalibratedPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetUncalibratedPointY" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetRawCalibratedPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetRawCalibratedPointY" /></li></ul></event><event cref="E:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Changed" cgnxEvent="multiState"><para>
		
		Fires if results must be uncomputed. 
	</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_NPointToNPoint_PointSet--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfNumPoints" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetUncalibratedPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetUncalibratedPointY" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetRawCalibratedPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetRawCalibratedPointY" /></li><!--FA:cogFA_NPointToNPoint_ComputeResults--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibrated" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetComputedUncalibratedFromCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetComputedUncalibratedFromRawCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfComputedRMSError" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetInfoStrings" /></li></ul></event><summary>Sets the X and Y coordinates of the uncalibrated point with the given index.  Valid indices range from 0 to NumPoints-1 inclusive.</summary><remarks><PARA>Sets the x- and y-axis coordinates of the uncalibrated point with the given index. Valid indices range from 0 to NumPoints - 1, inclusive.</PARA></remarks><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="index" /> is less than 0 or greater than or equal to <see cref="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.NumPoints" />.</para></exception></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SetRawCalibratedPoint(System.Int32,System.Double,System.Double)"><param name="index"><PARA>The index of the point.</PARA></param><param name="x"><PARA>The new x-axis value.</PARA></param><param name="y"><PARA>The new y-axis value.</PARA></param><remarks><PARA>Sets the x- and y-axis coordinates of the raw calibrated point with the given index. Valid indices range from 0 to NumPoints - 1, inclusive.</PARA></remarks><summary>Sets the X and Y coordinates of the raw calibrated point with the given index.  Valid indices range from 0 to NumPoints-1 inclusive.</summary><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="index" /> is less than 0 or greater than or equal to <see cref="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.NumPoints" />.</para></exception><event cref="E:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Changed" cgnxEvent="multiState"><para>
		
		Fires if a transform is not computed. 
	</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_NPointToNPoint_PointSet--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfNumPoints" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetUncalibratedPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetUncalibratedPointY" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetRawCalibratedPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetRawCalibratedPointY" /></li></ul></event><event cref="E:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Changed" cgnxEvent="multiState"><para>
		
		Fires if results must be uncomputed. 
	</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_NPointToNPoint_PointSet--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfNumPoints" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetUncalibratedPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetUncalibratedPointY" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetRawCalibratedPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetRawCalibratedPointY" /></li><!--FA:cogFA_NPointToNPoint_ComputeResults--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibrated" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetComputedUncalibratedFromCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetComputedUncalibratedFromRawCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfComputedRMSError" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetInfoStrings" /></li></ul></event></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.GetUncalibratedPoint(System.Int32,System.Double@,System.Double@)"><param name="index"><PARA>The index of the point.</PARA></param><param name="x"><PARA>The x-axis coordinate of the point.</PARA></param><param name="y"><PARA>The y-axis coordinate of the point.</PARA></param><exception cref="T:System.NullReferenceException" cgnxHRESULT="E_POINTER"><para><paramref name="x" /> or <paramref name="y" /> is NULL.</para></exception><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="index" /> is less than 0 or greater than or equal to <see cref="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.NumPoints" />.</para></exception><remarks><PARA>Returns the x- and y-axis coordinates of the uncalibrated point with the given index. Valid indices range from 0 to NumPoints - 1, inclusive.</PARA></remarks><summary>Gets the X and Y coordinates of the uncalibrated point with the given index.  Valid indices range from 0 to NumPoints-1 inclusive.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.GetRawCalibratedPoint(System.Int32,System.Double@,System.Double@)"><param name="index"><PARA>The index of the point.</PARA></param><param name="x"><PARA>The x-axis coordinate of the point.</PARA></param><param name="y"><PARA>The y-axis coordinate of the point.</PARA></param><exception cref="T:System.NullReferenceException" cgnxHRESULT="E_POINTER"><para><paramref name="x" /> or <paramref name="y" /> is NULL.</para></exception><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="index" /> is less than 0 or greater than or equal to <see cref="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.NumPoints" />.</para></exception><remarks><PARA>Gets the x- and y-axis coordinates of the raw calibrated point with the given index. Valid indices range from 0 to NumPoints - 1, inclusive.</PARA></remarks><summary>Gets the X and Y coordinates of the raw calibrated point with the given index.  Valid indices range from 0 to NumPoints-1 inclusive.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.AddPointPair(System.Double,System.Double,System.Double,System.Double)"><param name="uncalibratedX"><PARA>The x-axis coordinate value for the uncalibrated point.</PARA></param><param name="uncalibratedY"><PARA>The y-axis coordinate value for the uncalibrated point.</PARA></param><param name="rawCalibratedX"><PARA>The x-axis coordinate value for the raw calibrated point.</PARA></param><param name="rawCalibratedY"><PARA>The y-axis coordinate value for the raw calibrated point.</PARA></param><summary>Adds a new point to the end of each point set.  NumPoints will be increased by one.</summary><remarks><PARA>Adds a new point with the specified coordinates to the end of each point set and increases <see cref="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.NumPoints" /> by one.</PARA><NOTE><see cref="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.AddPointPair(System.Double,System.Double,System.Double,System.Double)" /> does not affect any of the existing points in the point sets.</NOTE></remarks><event cref="E:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Changed" cgnxEvent="multiState"><para>
		
		Fires if a transform is not computed. 
	</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_NPointToNPoint_PointSet--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfNumPoints" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetUncalibratedPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetUncalibratedPointY" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetRawCalibratedPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetRawCalibratedPointY" /></li></ul></event><event cref="E:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Changed" cgnxEvent="multiState"><para>
		
		Fires if results must be uncomputed. 
	</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_NPointToNPoint_PointSet--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfNumPoints" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetUncalibratedPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetUncalibratedPointY" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetRawCalibratedPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetRawCalibratedPointY" /></li><!--FA:cogFA_NPointToNPoint_ComputeResults--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibrated" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetComputedUncalibratedFromCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetComputedUncalibratedFromRawCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfComputedRMSError" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetInfoStrings" /></li></ul></event></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.DeletePointPair(System.Int32)"><param name="index"><PARA>The index of the point.</PARA></param><remarks><PARA>Deletes the point at the given index from each point set, shifts any points with higher indices  to the next lower index, and decreases <see cref="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.NumPoints" /> by one.</PARA></remarks><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="index" /> is less than 0 or greater than or equal to <see cref="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.NumPoints" />.</para></exception><event cref="E:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Changed" cgnxEvent="multiState"><para>
		
		Fires if a transform is not computed. 
	</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_NPointToNPoint_PointSet--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfNumPoints" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetUncalibratedPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetUncalibratedPointY" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetRawCalibratedPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetRawCalibratedPointY" /></li></ul></event><event cref="E:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Changed" cgnxEvent="multiState"><para>
		
		Fires if results must be uncomputed. 
	</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_NPointToNPoint_PointSet--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfNumPoints" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetUncalibratedPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetUncalibratedPointY" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetRawCalibratedPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetRawCalibratedPointY" /></li><!--FA:cogFA_NPointToNPoint_ComputeResults--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibrated" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetComputedUncalibratedFromCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetComputedUncalibratedFromRawCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfComputedRMSError" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetInfoStrings" /></li></ul></event><summary>Deletes the point at the given index from each point set.  Points with higher indices are shifted to the next lower index, and NumPoints is decreased by one.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.GetComputedUncalibratedFromCalibratedTransform"><remarks><PARA>If the <see cref="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Calibrated" /> property is True, this method returns the 2D, minimum-squared-error transformation that maps points from the (adjusted) <see cref="u:Framework.CalibrationAndFixturing.Theory.CalibFixtures" cgnxAnchor="uncalibrated_raw_calibrated_and_calibrated_coord">calibrated coordinate space</see> into the <see cref="u:Framework.CalibrationAndFixturing.Theory.CalibFixtures" cgnxAnchor="uncalibrated_raw_calibrated_and_calibrated_coord">uncalibrated coordinate space</see>. Otherwise, it returns Nothing. This transform can be attached to an input image using the <see cref="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Execute(Cognex.VisionPro.ICogImage,Cognex.VisionPro.CalibFix.CogCalibNPointToNPointRunParams)" /> method.</PARA><DEFAULT>NULL</DEFAULT></remarks><returns><PARA>The transformation that maps points from calibrated space to uncalibrated space.</PARA></returns><summary>If Calibrated is True, this method returns the 2-D, minimum squared error, transformation that maps points from the (adjusted) calibrated space into uncalibrated space.  Otherwise, it returns Nothing.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.GetComputedUncalibratedFromRawCalibratedTransform"><summary>Returns the 2-D, minimum squared error, transformation that maps points from the raw calibrated space into uncalibrated space, if it has been computed.  Otherwise, returns Nothing.  The transform is computed by calling Calibrate.</summary><remarks><PARA>Returns the 2D, minimum-squared-error transformation that maps points from the <see cref="u:Framework.CalibrationAndFixturing.Theory.CalibFixtures" cgnxAnchor="uncalibrated_raw_calibrated_and_calibrated_coord">raw calibrated space</see> into <see cref="u:Framework.CalibrationAndFixturing.Theory.CalibFixtures" cgnxAnchor="uncalibrated_raw_calibrated_and_calibrated_coord">uncalibrated coordinate space</see>, if it has been computed.</PARA><PARA>The transform is computed by calling <see cref="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Calibrate" />. If the <see cref="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Calibrated" /> property is True, the transform is always non-null. However, in certain instances, it may also be non-null even if <see cref="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Calibrated" /> is False. For example, if you calibrate and then change only the 
<see cref="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.CalibratedOriginX" /> or <see cref="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.CalibratedOriginY" />, 
the UncalibratedFromRawCalibrated transform remains unaffected, even though <see cref="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Calibrated" /> is now set to False.</PARA><DEFAULT>NULL</DEFAULT></remarks><returns><PARA>The transformation that maps points from raw calibrated space to uncalibrated space.</PARA></returns></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.GetInfoStrings"><returns><PARA>A collection of diagnostic information strings.</PARA></returns><remarks><PARA>Returns diagnostic text strings from the last call to <see cref="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Calibrate" />. If this method call did not produce any message strings or if the <see cref="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Calibrated" /> property is False, the collection is empty.</PARA><NOTE>The diagnostic strings are generated when this method is called and localized to the language in effect at the time of the method call.</NOTE></remarks><summary>Returns diagnostic text string(s) from the last call to Calibrate.  The collection will be empty if there are no messages, or if the Calibrated property is False.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Calibrate"><event cref="E:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Changed" cgnxEvent="multiState"><para>
		
		Fires when this function is called. 
	</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_NPointToNPoint_ComputeResults--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibrated" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetComputedUncalibratedFromCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetComputedUncalibratedFromRawCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfComputedRMSError" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetInfoStrings" /></li></ul></event><exception cref="T:Cognex.VisionPro.Exceptions.CogCalibFixNPointTooFewPointsException" cgnxHRESULT="E_CogCalibFix_NPointTooFew"><para>There are too few points for the requested DOFs.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogCalibFixNPointUnstableException" cgnxHRESULT="E_CogCalibFix_NPointUnstable"><para>The points are in a configuration that is numerically unstable or ambiguous. For example, all the points lie along the x-axis and the DOFs need to measure y-axis scaling.</para></exception><remarks><PARA>Computes the calibrated space using the current point sets. If successful, this method sets the <see cref="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Calibrated" /> property to True and updates the computed transforms (<see cref="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.GetComputedUncalibratedFromCalibratedTransform" />, <see cref="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.GetComputedUncalibratedFromRawCalibratedTransform" />) and the <see cref="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.ComputedRMSError" /> value.</PARA><PARA>The <see cref="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Calibrate" /> method computes the calibration in two steps. First, using the allowed degrees of freedom, it computes the minimum-squared-error UncalibratedFromRawCalibrated transformation that best maps the current set of raw calibrated points onto the set of uncalibrated points. Second, it computes the final UncalibratedFromCalibrated transform by determining and then applying the origin adjustment transformation:</PARA><CONSOLE>UncalibratedFromCalibrated = UncalibratedFromRawCalibrated * RawCalibratedFromCalibrated</CONSOLE><PARA>The RawCalibratedFromCalibrated transform is calculated by converting the <see cref="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.CalibratedOriginX" />, <see cref="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.CalibratedOriginY" />, and <see cref="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.CalibratedXAxisRotation" /> properties into raw calibrated space, and then placing those values in the RawCalibratedFromCalibrated transform. If the <see cref="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SwapCalibratedHandedness" /> property is True, the adjustment transform has a skew of 180 degrees.</PARA><PARA>The <see cref="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Calibrate" /> method does not try to optimize. It always performs the two-step calculation described previously, even if the object is already calibrated or if the UncalibratedFromRawCalibrated transform is valid.</PARA></remarks><summary>Computes the calibrated space using the current point sets.  If successful, sets the Calibrated property to True, updates the computed transforms, and updates the ComputedRMSError property.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Uncalibrate"><event cref="E:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Changed" cgnxEvent="multiState"><para>
		
		This event fires only if the state of the object changes. For example, if you call <see cref="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Uncalibrate" /> twice, the second call does not generate an event, because the object is already uncalibrated.
	</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_NPointToNPoint_ComputeResults--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfCalibrated" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetComputedUncalibratedFromCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetComputedUncalibratedFromRawCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfComputedRMSError" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SfGetInfoStrings" /></li></ul></event><summary>Eliminates the calibrated space.  This method also sets the Calibrated property to False, sets the computed transforms to Nothing, and sets the ComputedRMSError property to zero.</summary><remarks><PARA>Eliminates the calibrated space. This method also sets the <see cref="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Calibrated" /> property to False, the computed transforms (<see cref="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.GetComputedUncalibratedFromCalibratedTransform" />, <see cref="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.GetComputedUncalibratedFromRawCalibratedTransform" />) to Nothing, and the <see cref="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.ComputedRMSError" /> property to zero.</PARA><PARA>The uncalibration operation occurs automatically if any of this object's points are modified or if the <see cref="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.DOFsToCompute" /> or <see cref="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.ComputationMode" /> changes. A partial uncalibration occurs whenever any of these adjustment properties change: <see cref="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.CalibratedOriginX" />, <see cref="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.CalibratedOriginY" />, <see cref="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.CalibratedOriginSpace" />, <see cref="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.CalibratedOriginSpace" />, <see cref="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.CalibratedXAxisRotation" />, <see cref="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.CalibratedXAxisRotationSpace" />, or <see cref="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.SwapCalibratedHandedness" />. A partial uncalibration sets <see cref="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Calibrated" /> to False and the computed UncalibratedFromCalibrated transform to Nothing.</PARA></remarks></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Execute(Cognex.VisionPro.ICogImage,Cognex.VisionPro.CalibFix.CogCalibNPointToNPointRunParams)"><param name="inputImage"><PARA>The input image on which to perform the N-point-to-N-point calibration.</PARA></param><param name="runParams"><PARA>The run-time parameters for the N-point-to-N-point calibration.</PARA></param><remarks><PARA>Attaches the adjusted calibrated space to the coordinate space tree of the input image, using the given RunParams, and returns a shallow copy of the image as an output.</PARA><PARA>The new coordinate space is defined by the UncalibratedFromCalibrated transform last computed by this object,
				and is attached to the coordinate space tree as a copy. Its nonqualified space name is given by the
					<see cref="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointRunParams.CalibratedSpaceName" /><paramref name="runParams" />.</PARA><PARA>The new output image shares the pixels and tree of the input image, and its selected space name is determined by the
					<see cref="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointRunParams.SpaceToOutput" />
				of
				<paramref name="runParams" />.
	This space name is either the fully-qualified name of the calibrated space or the fully-qualified name of the uncalibrated space.</PARA><PARA>No error results if the calibrated space already exists in the coordinate space tree of the input image prior to running the <see cref="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Execute(Cognex.VisionPro.ICogImage,Cognex.VisionPro.CalibFix.CogCalibNPointToNPointRunParams)" /> method. Instead, the existing definition of the calibrated space is updated using the computed UncalibratedFromCalibrated transform. If errors do occur during <see cref="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Execute(Cognex.VisionPro.ICogImage,Cognex.VisionPro.CalibFix.CogCalibNPointToNPointRunParams)" />, this method does not return an image: the <paramref name="OutputImage" /> is set to Nothing or Null.</PARA></remarks><summary>Attaches the calibrated space to the coordinate tree of the input image, using the given RunParams, and returns a shallow copy of the image as an output.</summary><CONTENT><PARA>In addition to the following errors, <see cref="T:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint" /> also can propagate errors from <see cref="T:Cognex.VisionPro.CogCoordinateSpaceTree" /> and <see cref="T:Cognex.VisionPro.CogImage" />.</PARA></CONTENT><exception cref="T:Cognex.VisionPro.Exceptions.CogOperatorNoInputImageException" cgnxHRESULT="E_CogOperator_NoInputImage"><para><paramref name="inputImage" /> is NULL.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogOperatorNoRunParamsException" cgnxHRESULT="E_CogOperator_NoRunParams"><para><paramref name="runParams" /> is NULL.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogCalibFixNotCalibratedException" cgnxHRESULT="E_CogCalibFix_NotCalibrated"><para>The <see cref="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Calibrated" /> property is False.</para></exception><returns><PARA>The output image.</PARA></returns><CONTENT><PARA>This object does not fire events during a call to <see cref="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Execute(Cognex.VisionPro.ICogImage,Cognex.VisionPro.CalibFix.CogCalibNPointToNPointRunParams)" />, however events are likely to fire from the <see cref="T:Cognex.VisionPro.CogCoordinateSpaceTree" /> of the <see cref="T:Cognex.VisionPro.CogImage" />.</PARA></CONTENT></member><member name="E:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Changed"><summary>Occurs when one or more parts of the object's state may have changed.</summary></member><member name="T:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointRunParams"><summary>The runtime parameters needed for N-point calibration.  They include the name of the calibrated space, and an enumeration that specifies the selected space of the calibrated image.</summary><remarks><PARA>The run-time parameters needed for N-point calibration. These parameters include the name of the calibrated space and an enumeration that specifies the selected space of the calibrated image.</PARA></remarks></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointRunParams.#ctor(Cognex.VisionPro.CalibFix.CogCalibNPointToNPointRunParams)"><param name="other">The instance to copy from.</param><summary>Constructs a new instance of this class as a deep copy of the given instance.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointRunParams.#ctor"><summary>Constructs a new instance of this class.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointRunParams.#ctor(System.IntPtr)"><param name="impl">n/a</param><summary>Constructs a new instance of this class using com pointer.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointRunParams.SfCalibratedSpaceName"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by CalibratedSpaceName may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointRunParams.SfSpaceToOutput"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by SpaceToOutput may have changed.</summary></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointRunParams.SpaceToOutput"><remarks><PARA>Specifies whether the selected space of the output image will be a copy of the <see cref="u:Framework.CalibrationAndFixturing.Theory.CalibFixtures" cgnxAnchor="uncalibrated_raw_calibrated_and_calibrated_coord">calibrated coordinate space</see> name or the <see cref="u:Framework.CalibrationAndFixturing.Theory.CalibFixtures" cgnxAnchor="uncalibrated_raw_calibrated_and_calibrated_coord">uncalibrated coordinate space</see> name. The output selected space name will always be a <!--TAGFIX: 0 nodes matched the following tag --><see cref="u:Framework.Coordinates.Theory.CoordSpaceNames" cgnxAnchor="fullyqualified_fq_space_names">fully-qualified space name</see>.</PARA><DEFAULT><see cref="T:Cognex.VisionPro.CalibFix.CogCalibSpaceToOutputConstants">CalibratedSpace</see></DEFAULT></remarks><event cref="E:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointRunParams.Changed" cgnxEvent="singleState"><para>
		
		Fires when the value of this property changes. 
	</para><para>The following state flag may be affected:</para><!--STATEID:cogCalibNPointToNPointRunParams_SpaceToOutput--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointRunParams.SfSpaceToOutput" /></li></ul></event><summary>Specifies whether the selected space of the output image will be a fully-qualified copy of the calibrated space name, or a fully-qualified copy of the uncalibrated space name.</summary><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The new value is not a member of the <see cref="T:Cognex.VisionPro.CalibFix.CogCalibSpaceToOutputConstants" /> enumeration.</para></exception></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointRunParams.CalibratedSpaceName"><event cref="E:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointRunParams.Changed" cgnxEvent="singleState"><para>
		
		Fires when the value of this property changes. 
	</para><para>The following state flag may be affected:</para><!--STATEID:cogCalibNPointToNPointRunParams_CalibratedSpaceName--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointRunParams.SfCalibratedSpaceName" /></li></ul></event><summary>Name of the calibrated coordinate space that will be attached to the coordinate space tree of the output image.  This must be a valid non-qualified name.</summary><remarks><PARA>Returns or sets the name of the calibrated coordinate space that will be attached to the coordinate space tree of the input image. This must be a valid <!--TAGFIX: 0 nodes matched the following tag --><see cref="u:Framework.Coordinates.Theory.CoordSpaceNames" cgnxAnchor="nonqualified_nq_space_names">non-qualified space name</see>.</PARA><DEFAULT>"N-Point Calibration"</DEFAULT></remarks><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The new value is not a legal <see cref="u:Framework.Coordinates.Theory.CoordSpaceNames" cgnxAnchor="nonqualified_nq_space_names">nonqualified space name</see>.</para></exception></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointRunParams.ChangedEventSuspended"><summary>If nonzero, indicates that the raising of the Changed event has been suspended. This value is incremented when SuspendChangedEvent is called and decremented when ResumeAndRaiseChangedEvent is called.</summary></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointRunParams.HasChanged"><summary>If true, the serializable state of this object has changed since the last time it was serialized.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointRunParams.~CogCalibNPointToNPointRunParams"><summary>Releases all resources used by this object.  Do not attempt to access an object after it has been disposed.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointRunParams.!CogCalibNPointToNPointRunParams"><summary>Releases all unmanaged resources used by this object.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointRunParams.Clone"><summary>Returns a deep copy of this class instance.  Derived classes that implement Clone should override this method; other clients who wish to clone this instance should call ICloneable.Clone. See also CogSerializer.DeepCopyObject</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointRunParams.SuspendChangedEvent"><summary>Temporarily suspends the raising of the Changed event. May be called more than once, and a corresponding call to ResumeAndRaiseChangedEvent must be made for each call to SuspendChangedEvent.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointRunParams.ResumeAndRaiseChangedEvent"><summary>Re-enables raising of the Changed event after SuspendChangedEvent has been called.  Also raises the Changed event if the ChangedEventSuspended count is reduced to zero and any changes were made while events were suspended. Must be called once for each call to SuspendChangedEvent.</summary></member><member name="E:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointRunParams.Changed"><summary>Occurs when one or more parts of the object's state may have changed.</summary></member><member name="T:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointTool"><summary>This tool defines a new calibrated coordinate space using N pairs of points.  When run, it attaches the (adjusted) calibrated space to the coordinate tree of the input image and supplies the updated image as an output for use by downstream tools.</summary><remarks><PARA>This tool defines a new calibrated coordinate space using N pairs of points. When run, it attaches the adjusted calibrated space to the coordinate space tree of the input image and supplies the updated image as an output for use by other tools.</PARA><TABLE><HEADING><ROW><CELL>Default</CELL><CELL>Value</CELL></ROW></HEADING><BODY><ROW><CELL>Exposed inputs</CELL><CELL>
						InputImage<BR />
						Calibration.UncalibratedPointX(0)<BR />
						Calibration.UncalibratedPointY(0)<BR />
						Calibration.UncalibratedPointX(1)<BR />
						Calibration.UncalibratedPointY(1)<BR />
						Calibration.UncalibratedPointX(2)<BR />
						Calibration.UncalibratedPointY(2)
					</CELL></ROW><ROW><CELL>Exposed outputs</CELL><CELL>OutputImage</CELL></ROW><ROW><CELL>CurrentRecordEnable</CELL><CELL>InputImage +<BR />
						CalibratedAxes +<BR />
						CalibrationImage +<BR />
						CalUncalibratedPoints +<BR />
						CalCalibratedAxes
				</CELL></ROW><ROW><CELL>LastRunRecordEnable</CELL><CELL>OutputImage</CELL></ROW><ROW><CELL>LastRunRecordDiagEnable</CELL><CELL>CalibratedAxes</CELL></ROW></BODY></TABLE></remarks></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointTool.#ctor(Cognex.VisionPro.CalibFix.CogCalibNPointToNPointTool)"><param name="other">The instance to copy from.</param><summary>Constructs a new instance of this class as a deep copy of the given instance.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointTool.#ctor"><summary>Constructs a new instance of this class.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointTool.#ctor(System.IntPtr)"><param name="impl">n/a</param><summary>Constructs a new instance of this class using com pointer.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointTool.SfLastRunRecordEnable"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by LastRunRecordEnable may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointTool.SfLastRunRecordDiagEnable"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by LastRunRecordDiagEnable may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointTool.SfCurrentRecordEnable"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by CurrentRecordEnable may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointTool.SfInputImage"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by InputImage may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointTool.SfCalibrationImage"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by CalibrationImage may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointTool.SfCalibration"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Calibration may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointTool.SfRunParams"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by RunParams may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointTool.SfOutputImage"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by OutputImage may have changed.</summary></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointTool.OutputImage"><remarks><PARA>The output image from the last invocation of the tool's <see cref="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointTool.Run" /> method. This image shares the pixels and the coordinate spaces of the input image. The <see cref="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointRunParams.SpaceToOutput" /> property of the <see cref="T:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointRunParams" /> object controls the selected space name of the output image.</PARA><NOTE>Unless the last run of the tool was successful, the output image will be NULL or Nothing.</NOTE></remarks><summary>Output image from the last invocation of the tool's Run method.  This image shares the pixels and the coordinate spaces of the input image.  Its SelectedSpaceName is controlled by the SpaceToOutput property of the RunParams.</summary></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointTool.RunParams"><remarks><PARA>The run-time parameters for N-point calibration. They include the name of the calibrated space and an enumeration that specifies the selected space of the calibrated image.</PARA><NOTE>Setting this property to NULL or Nothing will not cause an error. However, an error will occur if the tool's <see cref="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointTool.Run" /> method is called and this property is NULL or Nothing.</NOTE></remarks><summary>The runtime parameters for N-point calibration.  They include the name of the calibrated space, and an enumeration that specifies the selected space of the calibrated image.</summary><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogCalibNPointToNPointTool_RunParams--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointTool.SfRunParams" /></li></ul></event></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointTool.Calibration"><exception cref="T:System.InvalidCastException" cgnxHRESULT="E_NOINTERFACE"><para>The supplied non-NULL object is not a <see cref="T:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint" /> object.</para></exception><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogCalibNPointToNPointTool_Calibration--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointTool.SfCalibration" /></li></ul></event><summary>Object that defines the calibrated space for calibration.  It contains the parameters for computing the space (uncalibrated points, corresponding raw calibrated points, an optional adjustment transform) and a Calibrate method that does the computation.</summary><remarks><PARA>Object that defines the calibrated space for calibration. It contains the <see cref="T:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint" /> for computing the space (uncalibrated points, corresponding raw calibrated points, an optional adjustment transform) and a Calibrate method that does the computation.</PARA><NOTE>Changing this property causes the CurrentRecord to invalidate.</NOTE><!-- WNOTE>Nigel: In the notes for this function, you state: "Setting to NULL will not cause an error. However, an error will occur if the Run method is called while this property is NULL." But the function throws E_POINTER if Params is null. I don't think I understand the note.</WNOTE --></remarks></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointTool.CalibrationImage"><summary>If it exists, this image will be displayed in the CurrentRecord of the tool.  It is for GUI purposes only and will typically be used to hold an application-specific 'calibration' image.  It is not required for running the tool.</summary><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogCalibNPointToNPointTool_CalibrationImage--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointTool.SfCalibrationImage" /></li></ul></event><remarks><PARA>If it exists, this image is displayed in the CurrentRecord of the tool. The calibration image is for GUI purposes only and typically holds an application-specific calibration image. It is not required for running the tool.</PARA><NOTE>Changing this property causes the CurrentRecord to invalidate.</NOTE></remarks></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointTool.InputImage"><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogCalibNPointToNPointTool_InputImage--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointTool.SfInputImage" /></li></ul></event><summary>Image to which a new calibrated coordinate space will be attached.  The selected space of this image is the uncalibrated space.</summary><remarks><PARA>Returns or sets the Image to which a new calibrated coordinate space will be attached. The selected space of this image is the uncalibrated space.</PARA><NOTE>Changing this property causes the CurrentRecord to invalidate.</NOTE></remarks></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointTool.CurrentRecordEnable"><remarks><PARA>Enable creation of records by bitwise ORing the appropriate <see cref="T:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointCurrentRecordConstants" />.</PARA><DEFAULT><see cref="T:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointCurrentRecordConstants">InputImage</see> +
			<see cref="T:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointCurrentRecordConstants">CalibratedAxes</see> +
			<see cref="T:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointCurrentRecordConstants">CalibrationImage</see> +
			<see cref="T:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointCurrentRecordConstants">CalUncalibratedPoints</see> +
			<see cref="T:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointCurrentRecordConstants">CalCalibratedAxes</see></DEFAULT></remarks><summary>Enable creation of records by bitwise ORing the appropriate CurrentRecordConstants.</summary><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogCalibNPointToNPointTool_CurrentRecordEnable--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointTool.SfCurrentRecordEnable" /></li></ul></event></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointTool.LastRunRecordDiagEnable"><remarks><PARA>Enable creation of records by bitwise ORing the appropriate <see cref="T:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointLastRunRecordDiagConstants" />. These are diagnostic records that may cause the tool to have a longer execution time.</PARA><DEFAULT><see cref="T:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointLastRunRecordDiagConstants">CalibratedAxes</see></DEFAULT></remarks><summary>Enable creation of records by bitwise ORing the appropriate LastRunRecordDiagConstants.  These are diagnostic records that may cause the Tool to have a longer execution time.</summary><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogCalibNPointToNPointTool_LastRunRecordDiagEnable--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointTool.SfLastRunRecordDiagEnable" /></li></ul></event></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointTool.LastRunRecordEnable"><remarks><PARA>Enable creation of records by bitwise ORing the appropriate <see cref="T:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointLastRunRecordConstants" />.</PARA><DEFAULT><see cref="T:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointLastRunRecordConstants">OutputImage</see></DEFAULT></remarks><summary>Enable creation of records by bitwise ORing the appropriate LastRunRecordConstants.</summary><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogCalibNPointToNPointTool_LastRunRecordEnable--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointTool.SfLastRunRecordEnable" /></li></ul></event></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointTool.RunStatus"><summary>Gets general information about the last call to Run.</summary></member><member name="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointTool.Name"><summary>Gets or sets the name of the tool.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointTool.Clone"><summary>Returns a deep copy of this class instance.  Derived classes that implement Clone should override this method; other clients who wish to clone this instance should call ICloneable.Clone. See also CogSerializer.DeepCopyObject.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointTool.Run"><CONTENT><PARA>In addition to the following error, <see cref="T:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointTool" /> propagates errors from the <DISPLAY FUNC="Execute" cref="Cognex.VisionPro.CalibFix.CogCalibNPointToNPointTool.Execute" assemblyName="CalibFix" iface="CogCalibNPointToNPointTool" func="Execute" /> method of the operator.</PARA></CONTENT><exception cref="T:Cognex.VisionPro.Exceptions.CogToolNoOperatorException" cgnxHRESULT="E_CogTool_NoOperator"><para>The <see cref="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointTool.Calibration" /> object is NULL.</para></exception><remarks><PARA>Attaches the adjusted calibrated space to the coordinate space tree of the input image using the <see cref="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Execute(Cognex.VisionPro.ICogImage,Cognex.VisionPro.CalibFix.CogCalibNPointToNPointRunParams)" /> method of the tool's <see cref="T:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint" />, creates a new output image for use by other tools, and builds inspections records. It is the client's responsibility to <see cref="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Calibrate" /> the UncalibratedFromCalibrated transform before calling the <see cref="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointTool.Run" /> method.</PARA><PARA>For each invocation, this method creates a new <see cref="T:Cognex.VisionPro.CogRunStatus" />. For each successful invocation, it creates a new output image.</PARA><NOTE>For more information about the tool's execution, see the <see cref="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.Execute(Cognex.VisionPro.ICogImage,Cognex.VisionPro.CalibFix.CogCalibNPointToNPointRunParams)" /> method of the tool's <see cref="T:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint" />.</NOTE><NOTE>
		This method does not actually raise the exceptions listed below. 
		Use the <see cref="P:Cognex.VisionPro.CogFitCircleTool.RunStatus" /> property
		to obtain a <see cref="T:Cognex.VisionPro.ICogRunStatus" /> reference. Then use
		its <see cref="P:Cognex.VisionPro.ICogRunStatus.Exception" /> property to see
		if the Run method raised any exceptions.
	</NOTE></remarks><summary>Runs the tool using the current parameter settings.</summary><!-- what the heck does this mean? 
        Commented out by pb after adding Pre and Post events

	<CONTENT><PARA>In addition to the following events, <DISPLAY FUNC="." /> can fire the usual events associated with <LINK TYPELIB="CognexCore" IFACE="ICogToolEvents"/>.</PARA></CONTENT>
--><event cref="E:Cognex.VisionPro.ICogTool.Running" cgnxEvent="PreRun"><para>
		Fires before the tool runs.
	</para></event><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed" cgnxEvent="multiState"><para>
		
		Fires when the tool runs. If the run was successful, results are generated;
		if the run was not successful, no results are generated and the previous results are cleared.
		Use <see cref="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointTool.RunStatus" /> after <see cref="T:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointTool" /> returns or in a
		<event cref="E:Cognex.VisionPro.ICogTool.Ran" cgnxEvent="PostRun" /> event handler
		to determine whether a run was successful or unsuccessful.
	</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_Tool_Results--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointTool.SfOutputImage" /></li><!--FA:cogFA_Tool_LastRunRecord--></ul></event><event cref="E:Cognex.VisionPro.ICogTool.Ran" cgnxEvent="PostRun"><para>
		Fires after the tool runs.
	</para></event></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointTool.~CogCalibNPointToNPointTool"><summary>Releases all resources used by this object.  Do not attempt to access an object after it has been disposed.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointTool.!CogCalibNPointToNPointTool"><summary>Releases all unmanaged resources used by this object.</summary></member><member name="T:Cognex.VisionPro.CalibFix.CogFixture"><remarks><PARA>This object holds the parameters required for simple fixturing. Its <see cref="M:Cognex.VisionPro.CalibFix.CogFixture.Execute(Cognex.VisionPro.ICogImage)" /> function attaches the fixtured coordinate space to the given input image and supplies the updated image as an output for use by other tools.</PARA></remarks><summary>This object holds the parameters required for simple fixturing.  Its Execute function attaches the fixtured coordinate space to the given input image and supplies the updated image as an output for use by downstream tools.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogFixture.#ctor(Cognex.VisionPro.CalibFix.CogFixture)"><param name="other">The instance to copy from.</param><summary>Constructs a new instance of this class as a deep copy of the given instance.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogFixture.#ctor"><summary>Constructs a new instance of this class.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogFixture.#ctor(System.IntPtr)"><param name="impl">n/a</param><summary>Constructs a new instance of this class using com pointer.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogFixture.SfFixturedSpaceName"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by FixturedSpaceName may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogFixture.SfUnfixturedFromFixturedTransform"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by UnfixturedFromFixturedTransform may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogFixture.SfSpaceToOutput"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by SpaceToOutput may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogFixture.SfFixturedSpaceNameDuplicateHandling"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by FixturedSpaceNameDuplicateHandling may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogFixture.SfAction"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Action may have changed.</summary></member><member name="P:Cognex.VisionPro.CalibFix.CogFixture.Action"><summary>How the operator should process the input image.</summary><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event></member><member name="P:Cognex.VisionPro.CalibFix.CogFixture.FixturedSpaceNameDuplicateHandling"><summary>Specifies how the operator should respond when attempting to add a space whose name already exists in the output image coordinate space tree.</summary></member><member name="P:Cognex.VisionPro.CalibFix.CogFixture.SpaceToOutput"><summary>Specifies whether the selected space of the output image will be a fully-qualified copy of the fixtured space name, or a fully-qualified copy of the unfixtured space name.</summary><remarks><PARA>Specifies whether the selected space of the output image will be a copy of the fixtured space name or a copy of the unfixtured space name. The output selected space name will always be a <!--TAGFIX: 0 nodes matched the following tag --><see cref="u:Framework.Coordinates.Theory.CoordSpaceNames" cgnxAnchor="fullyqualified_fq_space_names">fully-qualified space name</see>.</PARA><DEFAULT><see cref="T:Cognex.VisionPro.CalibFix.CogFixtureSpaceToOutputConstants">CogFixtureSpaceToOutputFixturedSpace</see></DEFAULT></remarks></member><member name="P:Cognex.VisionPro.CalibFix.CogFixture.UnfixturedFromFixturedTransform"><remarks><PARA>A 2D transformation that defines the fixtured coordinate space relative to the unfixtured space. This transform must map points from the fixtured space into the unfixtured space, which is the selected space of the input image. At run-time, the tool attaches a copy of this transform to the coordinate space tree of the input image.</PARA><DEFAULT>A linear identity transformation.</DEFAULT></remarks><summary>Transformation that defines the fixtured coordinate space, relative to the unfixtured space.  This transform must map points from the fixtured space into the unfixtured one (i.e. the selected space of the input image).</summary></member><member name="P:Cognex.VisionPro.CalibFix.CogFixture.FixturedSpaceName"><summary>Name of the fixtured coordinate space that will be attached to the coordinate space tree of the input image.  This must be a valid non-qualified name.</summary><remarks><PARA>Name of the fixtured coordinate space that will be attached to the coordinate space tree of the input image. This must be a valid <!--TAGFIX: 0 nodes matched the following tag --><see cref="u:Framework.Coordinates.Theory.CoordSpaceNames" cgnxAnchor="nonqualified_nq_space_names">nonqualified space name</see>.</PARA></remarks></member><member name="P:Cognex.VisionPro.CalibFix.CogFixture.ChangedEventSuspended"><summary>If nonzero, indicates that the raising of the Changed event has been suspended. This value is incremented when SuspendChangedEvent is called and decremented when ResumeAndRaiseChangedEvent is called.</summary></member><member name="P:Cognex.VisionPro.CalibFix.CogFixture.HasChanged"><summary>If true, the serializable state of this object has changed since the last time it was serialized.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogFixture.~CogFixture"><summary>Releases all resources used by this object.  Do not attempt to access an object after it has been disposed.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogFixture.!CogFixture"><summary>Releases all unmanaged resources used by this object.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogFixture.Clone"><summary>Returns a deep copy of this class instance.  Derived classes that implement Clone should override this method; other clients who wish to clone this instance should call ICloneable.Clone. See also CogSerializer.DeepCopyObject</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogFixture.SuspendChangedEvent"><summary>Temporarily suspends the raising of the Changed event. May be called more than once, and a corresponding call to ResumeAndRaiseChangedEvent must be made for each call to SuspendChangedEvent.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogFixture.ResumeAndRaiseChangedEvent"><summary>Re-enables raising of the Changed event after SuspendChangedEvent has been called.  Also raises the Changed event if the ChangedEventSuspended count is reduced to zero and any changes were made while events were suspended. Must be called once for each call to SuspendChangedEvent.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogFixture.Execute(Cognex.VisionPro.ICogImage)"><param name="inputImage"><PARA>The input image.</PARA></param><returns><PARA>The output image.</PARA></returns><remarks><PARA>Attaches the fixtured space to the coordinate tree of the input image, using the space name value of the <see cref="P:Cognex.VisionPro.CalibFix.CogFixture.FixturedSpaceName" /> property, and returns a shallow copy of the image as an output image. The selected space of the output image is determined by the <see cref="P:Cognex.VisionPro.CalibFix.CogFixture.SpaceToOutput" /> property.</PARA><PARA>The new coordinate space is defined by the UnfixturedFromFixtured transform, and is attached to the coordinate space tree as a copy. Its <!--TAGFIX: 0 nodes matched the following tag --><see cref="u:Framework.Coordinates.Theory.CoordSpaceNames" cgnxAnchor="nonqualified_nq_space_names">nonqualified space name</see> is given by the <see cref="P:Cognex.VisionPro.CalibFix.CogFixture.FixturedSpaceName" /> property and the selected space of the input image is the unfixtured space.</PARA><PARA>The new output image shares the pixels and tree of the input image. Its selected space name is determined by the <see cref="P:Cognex.VisionPro.CalibFix.CogFixture.SpaceToOutput" /> property of the RunParams object. The name is either the <!--TAGFIX: 0 nodes matched the following tag --><see cref="u:Framework.Coordinates.Theory.CoordSpaceNames" cgnxAnchor="fullyqualified_fq_space_names">fully-qualified name</see> of the fixtured space or the fully-qualified name of the unfixtured space.</PARA><PARA>No error results if the fixtured space already exists in the coordinate space tree of the input image prior to running the <see cref="M:Cognex.VisionPro.CalibFix.CogFixture.Execute(Cognex.VisionPro.ICogImage)" /> method. Instead, the existing definition of the fixtured space is updated using the UnfixturedFromFixtured transform. If errors do occur during <see cref="M:Cognex.VisionPro.CalibFix.CogFixture.Execute(Cognex.VisionPro.ICogImage)" />, this method does not return an image: the <paramref name="OutputImage" /> is set to Nothing or Null.</PARA></remarks><CONTENT><PARA><see cref="M:Cognex.VisionPro.CalibFix.CogFixture.Execute(Cognex.VisionPro.ICogImage)" /> does not cause events to fire from this object, however events are likely to fire from the <see cref="T:Cognex.VisionPro.CogCoordinateSpaceTree" /> of the <see cref="T:Cognex.VisionPro.CogImage" />.</PARA></CONTENT><CONTENT><PARA>In addition to the following errors, <see cref="T:Cognex.VisionPro.CalibFix.CogFixture" /> also can propagate errors from <see cref="T:Cognex.VisionPro.CogCoordinateSpaceTree" /> and <see cref="T:Cognex.VisionPro.CogImage" />.</PARA></CONTENT><exception cref="T:Cognex.VisionPro.Exceptions.CogOperatorNoInputImageException" cgnxHRESULT="E_CogOperator_NoInputImage"><para><paramref name="inputImage" /> is NULL.</para></exception><summary>Attaches the fixtured space to the coordinate tree of the input image, using the FixturedSpaceName property.  Returns a shallow copy of the image as an output.  The selected space of the output image is chosen using the SpaceToOutput property.</summary></member><member name="E:Cognex.VisionPro.CalibFix.CogFixture.Changed"><summary>Occurs when one or more parts of the object's state may have changed.</summary></member><member name="T:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint"><summary>The CogFixtureNPointToNPoint object defines a fixtured coordinate space using N pairs of points and allows users to attach this space to an image.</summary><remarks><PARA>This interface defines a fixtured coordinate space using N pairs of points and attaches this space to an image.</PARA></remarks></member><member name="M:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.#ctor(Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint)"><param name="other">The instance to copy from.</param><summary>Constructs a new instance of this class as a deep copy of the given instance.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.#ctor"><summary>Constructs a new instance of this class.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.#ctor(System.IntPtr)"><param name="impl">n/a</param><summary>Constructs a new instance of this class using com pointer.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.SfNumPoints"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by NumPoints may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.SfGetUnfixturedPointX"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by GetUnfixturedPointX may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.SfGetUnfixturedPointY"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by GetUnfixturedPointY may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.SfGetRawFixturedPointX"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by GetRawFixturedPointX may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.SfGetRawFixturedPointY"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by GetRawFixturedPointY may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.SfDOFsToCompute"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by DOFsToCompute may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.SfComputationMode"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by ComputationMode may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.SfRawFixturedFromFixturedTransformEnabled"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by RawFixturedFromFixturedTransformEnabled may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.SfRawFixturedFromFixturedTransform"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by RawFixturedFromFixturedTransform may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.SfFixturedSpaceName"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by FixturedSpaceName may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.SfSpaceToOutput"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by SpaceToOutput may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.SfFixturedSpaceNameDuplicateHandling"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by FixturedSpaceNameDuplicateHandling may have changed.</summary></member><member name="P:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.FixturedSpaceNameDuplicateHandling"><summary>Specifies how the operator should respond when attempting to add a space whose name already exists in the output image coordinate space tree.</summary></member><member name="P:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.SpaceToOutput"><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The new value is not a member of the <see cref="T:Cognex.VisionPro.CalibFix.CogFixtureSpaceToOutputConstants" /> enumeration.</para></exception><event cref="E:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.Changed" cgnxEvent="singleState"><para>
		
		Fires when the value of this property changes. 
	</para><para>The following state flag may be affected:</para><!--STATEID:cogFixtureNPointToNPoint_SpaceToOutput--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.SfSpaceToOutput" /></li></ul></event><summary>Specifies whether the selected space of the output image will be a fully-qualified copy of the fixtured space name, or a fully-qualified copy of the unfixtured space name.</summary><remarks><PARA>Specifies whether the selected space of the output image will be a copy of the fixtured space name or a copy of the unfixtured space name. The output selected space name will always be a <!--TAGFIX: 0 nodes matched the following tag --><see cref="u:Framework.Coordinates.Theory.CoordSpaceNames" cgnxAnchor="fullyqualified_fq_space_names">fully-qualified space name</see>.</PARA><DEFAULT><see cref="T:Cognex.VisionPro.CalibFix.CogFixtureSpaceToOutputConstants">CogFixtureSpaceToOutputFixturedSpace</see></DEFAULT></remarks></member><member name="P:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.FixturedSpaceName"><remarks><PARA>Name of the fixtured coordinate space that will be attached to the coordinate space tree of the input image. This must be a valid <!--TAGFIX: 0 nodes matched the following tag --><see cref="u:Framework.Coordinates.Theory.CoordSpaceNames" cgnxAnchor="nonqualified_nq_space_names">nonqualified space name</see>.</PARA><DEFAULT>"N-Point Fixture"</DEFAULT></remarks><event cref="E:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.Changed" cgnxEvent="singleState"><para>
		
		Fires when the value of this property changes. 
	</para><para>The following state flag may be affected:</para><!--STATEID:cogFixtureNPointToNPoint_FixturedSpaceName--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.SfFixturedSpaceName" /></li></ul></event><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The new value is not a legal <see cref="u:Framework.Coordinates.Theory.CoordSpaceNames" cgnxAnchor="nonqualified_nq_space_names">nonqualified space name</see>.</para></exception><summary>Name of the fixtured coordinate space that will be attached to the coordinate space tree of the input image.  This must be a valid non-qualified name.</summary></member><member name="P:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.RawFixturedFromFixturedTransform"><remarks><PARA>A 2D transformation that defines the fixtured space relative to the (unadjusted) raw fixtured space. This transform must map points from fixtured space into raw fixtured space, and will only be used if <see cref="P:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.RawFixturedFromFixturedTransformEnabled" /> property is True.</PARA><DEFAULT>A linear identity <see cref="T:Cognex.VisionPro.CogTransform2D" />.</DEFAULT></remarks><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The new value is NULL.</para></exception><event cref="E:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.Changed" cgnxEvent="singleState"><para>
		
		Fires when the value of this property changes. 
	</para><para>The following state flag may be affected:</para><!--STATEID:cogFixtureNPointToNPoint_RawFixturedFromFixturedTransform--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.SfRawFixturedFromFixturedTransform" /></li></ul></event><summary>2-D transform that defines the fixtured space, relative to the (unadjusted) raw fixtured space.  This transform must map points from fixtured space into raw fixtured space, and will only be used if RawFixturedFromFixturedTransformEnabled is True.</summary></member><member name="P:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.RawFixturedFromFixturedTransformEnabled"><event cref="E:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.Changed" cgnxEvent="singleState"><para>
		
		Fires when the value of this property changes. 
	</para><para>The following state flag may be affected:</para><!--STATEID:cogFixtureNPointToNPoint_RawFixturedFromFixturedTransformEnabled--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.SfRawFixturedFromFixturedTransformEnabled" /></li></ul></event><remarks><PARA>If True, the RawFixturedFromFixturedTransform will be used to adjust the fixtured space defined by the next point-to-point computation. If False, the RawFixturedFromFixturedTransform will be ignored.</PARA><DEFAULT>True</DEFAULT></remarks><summary>If True, the RawFixturedFromFixturedTransform will be used to adjust the fixtured space defined by the next point-to-point computation.  If False, the RawFixturedFromFixturedTransform will be ignored.</summary></member><member name="P:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.ComputationMode"><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The supplied value is not a valid member of the <see cref="T:Cognex.VisionPro.CalibFix.CogCalibFixComputationModeConstants" /> enumeration.</para></exception><event cref="E:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.Changed" cgnxEvent="singleState"><para>
		
		Fires when the value of this property changes. 
	</para><para>The following state flag may be affected:</para><!--STATEID:cogFixtureNPointToNPoint_ComputationMode--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.SfComputationMode" /></li></ul></event><summary>This enumeration specifies how the best-fit transformation between the unfixtured points and the raw fixtured points will be computed.  Only linear computations are supported in this release.</summary><remarks><PARA>Returns or sets how the best-fit transformation between the unfixtured points and the raw fixtured points will be computed. This release supports only linear computations.</PARA><DEFAULT><see cref="T:Cognex.VisionPro.CalibFix.CogCalibFixComputationModeConstants">Linear</see></DEFAULT></remarks></member><member name="P:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.DOFsToCompute"><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The supplied value is not a valid member of the <see cref="T:Cognex.VisionPro.CalibFix.CogNPointToNPointDOFConstants" /> enumeration.</para></exception><remarks><PARA>Returns or sets an enumeration that specifies which degrees of freedom will be allowed when computing the best-fit transformation between the unfixtured points and the raw fixtured points.</PARA><DEFAULT><see cref="T:Cognex.VisionPro.CalibFix.CogNPointToNPointDOFConstants">RotationAndTranslation</see></DEFAULT></remarks><summary>This enumeration specifies which degrees of freedom will be allowed when computing the best-fit transformation between the unfixtured points and the raw fixtured points.</summary><event cref="E:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.Changed" cgnxEvent="singleState"><para>
		
		Fires when the value of this property changes. 
	</para><para>The following state flag may be affected:</para><!--STATEID:cogNPointToNPoint_DOFsToCompute--><ul /></event></member><member name="P:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.NumPoints"><event cref="E:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.Changed" cgnxEvent="multiState"><para>
		
		Fires when the value of this property changes. 
	</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_NPointToNPoint_PointSet--><li><see cref="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.SfNumPoints" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.SfGetUnfixturedPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.SfGetUnfixturedPointY" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.SfGetRawFixturedPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.SfGetRawFixturedPointY" /></li></ul></event><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The new value is less than 0.</para></exception><remarks><PARA>The number of points in each point set. This is the number of raw fixtured points and also the number of unfixtured points.</PARA><PARA>If you increase the number of points, the extra points are added to the end of the existing point sets and initialized to (0, 0).  If you decrease the number of points, the points are removed from the end of each point set.</PARA><DEFAULT>0</DEFAULT></remarks><summary>The number of points in each point set.  This is the number of raw fixtured points, and also the number of unfixtured points.</summary></member><member name="P:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.ChangedEventSuspended"><summary>If nonzero, indicates that the raising of the Changed event has been suspended. This value is incremented when SuspendChangedEvent is called and decremented when ResumeAndRaiseChangedEvent is called.</summary></member><member name="P:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.HasChanged"><summary>If true, the serializable state of this object has changed since the last time it was serialized.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.~CogFixtureNPointToNPoint"><summary>Releases all resources used by this object.  Do not attempt to access an object after it has been disposed.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.!CogFixtureNPointToNPoint"><summary>Releases all unmanaged resources used by this object.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.Clone"><summary>Returns a deep copy of this class instance.  Derived classes that implement Clone should override this method; other clients who wish to clone this instance should call ICloneable.Clone. See also CogSerializer.DeepCopyObject</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.SuspendChangedEvent"><summary>Temporarily suspends the raising of the Changed event. May be called more than once, and a corresponding call to ResumeAndRaiseChangedEvent must be made for each call to SuspendChangedEvent.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.ResumeAndRaiseChangedEvent"><summary>Re-enables raising of the Changed event after SuspendChangedEvent has been called.  Also raises the Changed event if the ChangedEventSuspended count is reduced to zero and any changes were made while events were suspended. Must be called once for each call to SuspendChangedEvent.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.GetUnfixturedPointX(System.Int32)"><param name="index"><PARA>The index of the point.</PARA></param><remarks><PARA>Returns or sets the x-axis coordinate of the unfixtured point with the given index. Valid indices range from 0 to NumPoints - 1, inclusive.</PARA><DEFAULT>0</DEFAULT></remarks><event cref="E:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.Changed" cgnxEvent="singleState"><para>
		
		Fires when the value of this property changes. 
	</para><para>The following state flag may be affected:</para><!--STATEID:cogFixtureNPointToNPoint_UnfixturedPointX--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.SfGetUnfixturedPointX" /></li></ul></event><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="index" /> is less than 0 or greater than or equal to <see cref="P:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.NumPoints" />.</para></exception><summary>The X coordinate of the unfixtured point with the given index.  Valid indices range from 0 to NumPoints-1 inclusive.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.SetUnfixturedPointX(System.Int32,System.Double)"><param name="index"><PARA>The index of the point.</PARA></param><param name="value"></param><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="index" /> is less than 0 or greater than or equal to <see cref="P:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.NumPoints" />.</para></exception><remarks><PARA>Returns or sets the x-axis coordinate of the unfixtured point with the given index. Valid indices range from 0 to NumPoints - 1, inclusive.</PARA><DEFAULT>0</DEFAULT></remarks><summary>The X coordinate of the unfixtured point with the given index.  Valid indices range from 0 to NumPoints-1 inclusive.</summary><event cref="E:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.Changed" cgnxEvent="singleState"><para>
		
		Fires when the value of this property changes. 
	</para><para>The following state flag may be affected:</para><!--STATEID:cogFixtureNPointToNPoint_UnfixturedPointX--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.SfGetUnfixturedPointX" /></li></ul></event></member><member name="M:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.GetUnfixturedPointY(System.Int32)"><param name="index"><PARA>The index of the point.</PARA></param><summary>The Y coordinate of the unfixtured point with the given index.  Valid indices range from 0 to NumPoints-1 inclusive.</summary><remarks><PARA>Returns or sets the y-axis coordinate of the unfixtured point with the given index. Valid indices range from 0 to NumPoints - 1, inclusive.</PARA><DEFAULT>0</DEFAULT></remarks><event cref="E:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.Changed" cgnxEvent="singleState"><para>
		
		Fires when the value of this property changes. 
	</para><para>The following state flag may be affected:</para><!--STATEID:cogFixtureNPointToNPoint_UnfixturedPointY--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.SfGetUnfixturedPointY" /></li></ul></event><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="index" /> is less than 0 or greater than or equal to <see cref="P:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.NumPoints" />.</para></exception></member><member name="M:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.SetUnfixturedPointY(System.Int32,System.Double)"><param name="index"><PARA>The index of the point.</PARA></param><param name="value"></param><summary>The Y coordinate of the unfixtured point with the given index.  Valid indices range from 0 to NumPoints-1 inclusive.</summary><remarks><PARA>Returns or sets the y-axis coordinate of the unfixtured point with the given index. Valid indices range from 0 to NumPoints - 1, inclusive.</PARA><DEFAULT>0</DEFAULT></remarks><event cref="E:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.Changed" cgnxEvent="singleState"><para>
		
		Fires when the value of this property changes. 
	</para><para>The following state flag may be affected:</para><!--STATEID:cogFixtureNPointToNPoint_UnfixturedPointY--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.SfGetUnfixturedPointY" /></li></ul></event><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="index" /> is less than 0 or greater than or equal to <see cref="P:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.NumPoints" />.</para></exception></member><member name="M:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.GetRawFixturedPointX(System.Int32)"><param name="index"><PARA>The index of the point.</PARA></param><remarks><PARA>Returns or sets the x-axis coordinate of the raw fixtured point with the given index. Valid indices range from 0 to NumPoints - 1, inclusive.</PARA><DEFAULT>0</DEFAULT></remarks><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="index" /> is less than 0 or greater than or equal to <see cref="P:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.NumPoints" />.</para></exception><event cref="E:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.Changed" cgnxEvent="singleState"><para>
		
		Fires when the value of this property changes. 
	</para><para>The following state flag may be affected:</para><!--STATEID:cogFixtureNPointToNPoint_RawFixturedPointX--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.SfGetRawFixturedPointX" /></li></ul></event><summary>The X coordinate of the raw fixtured point with the given index.  Valid indices range from 0 to NumPoints-1 inclusive.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.SetRawFixturedPointX(System.Int32,System.Double)"><param name="index"><PARA>The index of the point.</PARA></param><param name="value"></param><remarks><PARA>Returns or sets the x-axis coordinate of the raw fixtured point with the given index. Valid indices range from 0 to NumPoints - 1, inclusive.</PARA><DEFAULT>0</DEFAULT></remarks><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="index" /> is less than 0 or greater than or equal to <see cref="P:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.NumPoints" />.</para></exception><event cref="E:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.Changed" cgnxEvent="singleState"><para>
		
		Fires when the value of this property changes. 
	</para><para>The following state flag may be affected:</para><!--STATEID:cogFixtureNPointToNPoint_RawFixturedPointX--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.SfGetRawFixturedPointX" /></li></ul></event><summary>The X coordinate of the raw fixtured point with the given index.  Valid indices range from 0 to NumPoints-1 inclusive.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.GetRawFixturedPointY(System.Int32)"><param name="index"><PARA>The index of the point.</PARA></param><remarks><PARA>Returns or sets the y-axis coordinate of the raw fixtured point with the given index. Valid indices range from 0 to NumPoints - 1, inclusive.</PARA><DEFAULT>0</DEFAULT></remarks><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="index" /> is less than 0 or greater than or equal to <see cref="P:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.NumPoints" />.</para></exception><summary>The Y coordinate of the raw fixtured point with the given index.  Valid indices range from 0 to NumPoints-1 inclusive.</summary><event cref="E:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.Changed" cgnxEvent="singleState"><para>
		
		Fires when the value of this property changes. 
	</para><para>The following state flag may be affected:</para><!--STATEID:cogFixtureNPointToNPoint_RawFixturedPointY--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.SfGetRawFixturedPointY" /></li></ul></event></member><member name="M:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.SetRawFixturedPointY(System.Int32,System.Double)"><param name="index"><PARA>The index of the point.</PARA></param><param name="value"></param><event cref="E:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.Changed" cgnxEvent="singleState"><para>
		
		Fires when the value of this property changes. 
	</para><para>The following state flag may be affected:</para><!--STATEID:cogFixtureNPointToNPoint_RawFixturedPointY--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.SfGetRawFixturedPointY" /></li></ul></event><remarks><PARA>Returns or sets the y-axis coordinate of the raw fixtured point with the given index. Valid indices range from 0 to NumPoints - 1, inclusive.</PARA><DEFAULT>0</DEFAULT></remarks><summary>The Y coordinate of the raw fixtured point with the given index.  Valid indices range from 0 to NumPoints-1 inclusive.</summary><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="index" /> is less than 0 or greater than or equal to <see cref="P:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.NumPoints" />.</para></exception></member><member name="M:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.SetUnfixturedPoint(System.Int32,System.Double,System.Double)"><param name="index"><PARA>The index of the point.</PARA></param><param name="x"><PARA>The x-axis coordinate of the point.</PARA></param><param name="y"><PARA>The y-axis coordinate of the point.</PARA></param><remarks><PARA>Sets the x- and y-coordinates of the unfixtured point with the given index. Valid indices range from 0 to NumPoints - 1, inclusive.</PARA></remarks><event cref="E:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.Changed" cgnxEvent="multiState"><para>
		
		Fires when the value of this property changes. 
	</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_NPointToNPoint_PointSet--><li><see cref="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.SfNumPoints" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.SfGetUnfixturedPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.SfGetUnfixturedPointY" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.SfGetRawFixturedPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.SfGetRawFixturedPointY" /></li></ul></event><summary>Sets the X and Y coordinates of the unfixtured point with the given index.  Valid indices range from 0 to NumPoints-1 inclusive.</summary><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="index" /> is less than 0 or greater than or equal to <see cref="P:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.NumPoints" />.</para></exception></member><member name="M:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.SetRawFixturedPoint(System.Int32,System.Double,System.Double)"><param name="index"><PARA>The index of the point.</PARA></param><param name="x"><PARA>The x-axis coordinate of the point.</PARA></param><param name="y"><PARA>The y-axis coordinate of the point.</PARA></param><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="index" /> is less than 0 or greater than or equal to <see cref="P:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.NumPoints" />.</para></exception><summary>Sets the X and Y coordinates of the raw fixtured point with the given index.  Valid indices range from 0 to NumPoints-1 inclusive.</summary><remarks><PARA>Sets the x- and y-axis coordinates of the raw fixtured point with the given index. Valid indices range from 0 to NumPoints - 1, inclusive.</PARA></remarks><event cref="E:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.Changed" cgnxEvent="multiState"><para>
		
		Fires when the value of this property changes. 
	</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_NPointToNPoint_PointSet--><li><see cref="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.SfNumPoints" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.SfGetUnfixturedPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.SfGetUnfixturedPointY" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.SfGetRawFixturedPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.SfGetRawFixturedPointY" /></li></ul></event></member><member name="M:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.GetUnfixturedPoint(System.Int32,System.Double@,System.Double@)"><param name="index"><PARA>The index of the point.</PARA></param><param name="x"><PARA>The x-axis coordinate of the point.</PARA></param><param name="y"><PARA>The y-axis coordinate of the point.</PARA></param><exception cref="T:System.NullReferenceException" cgnxHRESULT="E_POINTER"><para><paramref name="x" /> or <paramref name="y" /> is NULL.</para></exception><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="index" /> is less than 0 or greater than or equal to <see cref="P:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.NumPoints" />.</para></exception><remarks><PARA>Returns the x- and y-axis coordinates of the unfixtured point with the given index. Valid indices range from 0 to NumPoints - 1, inclusive.</PARA></remarks><summary>Gets the X and Y coordinates of the unfixtured point with the given index.  Valid indices range from 0 to NumPoints-1 inclusive.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.GetRawFixturedPoint(System.Int32,System.Double@,System.Double@)"><param name="index"><PARA>The index of the point.</PARA></param><param name="x"><PARA>The x-axis coordinate of the point.</PARA></param><param name="y"><PARA>The y-axis coordinate of the point.</PARA></param><exception cref="T:System.NullReferenceException" cgnxHRESULT="E_POINTER"><para><paramref name="x" /> or <paramref name="y" /> is NULL.</para></exception><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="index" /> is less than 0 or greater than or equal to <see cref="P:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.NumPoints" />.</para></exception><remarks><PARA>Returns the x- and y-axis coordinates of the raw fixtured point with the given index. Valid indices range from 0 to NumPoints - 1, inclusive.</PARA></remarks><summary>Gets the X and Y coordinates of the raw fixtured point with the given index.  Valid indices range from 0 to NumPoints-1 inclusive.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.AddPointPair(System.Double,System.Double,System.Double,System.Double)"><param name="unfixturedX"><PARA>The x-axis coordinate value for the unfixtured point.</PARA></param><param name="unfixturedY"><PARA>The y-axis coordinate value for the unfixtured point.</PARA></param><param name="rawFixturedX"><PARA>The x-axis coordinate value for the raw fixtured point.</PARA></param><param name="rawFixturedY"><PARA>The y-axis coordinate value for the raw fixtured point.</PARA></param><summary>Adds a new point to the end of each point set.  NumPoints will be increased by one.</summary><event cref="E:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.Changed" cgnxEvent="multiState"><para>
		
		Fires when the value of this property changes. 
	</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_NPointToNPoint_PointSet--><li><see cref="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.SfNumPoints" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.SfGetUnfixturedPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.SfGetUnfixturedPointY" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.SfGetRawFixturedPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.SfGetRawFixturedPointY" /></li></ul></event><remarks><PARA>Adds a new point with the specified coordinates to the end of each point set and increases <see cref="P:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.NumPoints" /> by one.</PARA><NOTE><see cref="M:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.AddPointPair(System.Double,System.Double,System.Double,System.Double)" /> does not affect any of the existing points in the point sets.</NOTE></remarks></member><member name="M:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.DeletePointPair(System.Int32)"><param name="index"><PARA>The index of the point.</PARA></param><summary>Deletes the point at the given index from each point set.  Points with higher indices are shifted to the next lower index, and NumPoints is decreased by one.</summary><event cref="E:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.Changed" cgnxEvent="multiState"><para>
		
		Fires when the value of this property changes. 
	</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_NPointToNPoint_PointSet--><li><see cref="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.SfNumPoints" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.SfGetUnfixturedPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.SfGetUnfixturedPointY" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.SfGetRawFixturedPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.SfGetRawFixturedPointY" /></li></ul></event><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="index" /> is less than 0 or greater than or equal to <see cref="P:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.NumPoints" />.</para></exception><remarks><PARA>Deletes the point at the given index from each point set, shifts any points with higher indices  to the next lower index, and decreases <see cref="P:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.NumPoints" /> by one.</PARA></remarks></member><member name="M:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.Execute(Cognex.VisionPro.ICogImage)"><param name="inputImage"><PARA>The input image on which to perform the N-point-to-N-point fixturing.</PARA></param><summary>Computes a fixtured space using the points contained in this object and attaches it to the coordinate tree of the input image.  Returns a result object that holds the computed fixture transform and a shallow copy of the input image.</summary><returns><PARA>The output image.</PARA></returns><CONTENT><PARA>This object does not fire events during a call to <see cref="M:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.Execute(Cognex.VisionPro.ICogImage)" />, however events are likely to fire from the <see cref="T:Cognex.VisionPro.CogCoordinateSpaceTree" /> of the <see cref="T:Cognex.VisionPro.CogImage" />.</PARA></CONTENT><CONTENT><PARA>In addition to the following errors, <see cref="T:Cognex.VisionPro.CalibFix.CogCalibFixNPointTooFewPointsException" /> also can propagate errors from <see cref="T:Cognex.VisionPro.CogCoordinateSpaceTree" /> and <see cref="T:Cognex.VisionPro.CogImage" />.</PARA></CONTENT><exception cref="T:Cognex.VisionPro.Exceptions.CogOperatorNoInputImageException" cgnxHRESULT="E_CogOperator_NoInputImage"><para><paramref name="inputImage" /> is NULL.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogCalibFixNPointTooFewException" cgnxHRESULT="E_CogCalibFix_NPointTooFew"><para>There are too few points for the requested DOFs.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogCalibFixNPointUnstableException" cgnxHRESULT="E_CogCalibFix_NPointUnstable"><para>The points are in a configuration that is numerically unstable or ambiguous. For example, all points lie along the x-axis and the DOFs need to measure y-axis scaling.</para></exception><remarks><PARA>Computes a fixtured space using the points contained in this object, attaches it to the coordinate space tree of the input image, and returns a result object that holds the computed fixture transform and a shallow copy of the input image.</PARA><PARA>The fixturing computation involves several steps. The <see cref="M:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.Execute(Cognex.VisionPro.ICogImage)" /> method:</PARA><PROCEDURE><STEP>Computes the minimum squared error UnfixturedFromRawFixtured transform that best maps the current set of raw fixtured points onto the set of unfixtured points, using the allowed degrees of freedom.</STEP><STEP>Computes the UnfixturedFromFixtured transform by concatenating the origin adjustment transform (if any) as follows: <tt>UnfixturedFromFixtured = UnfixturedFromRawFixtured * RawFixturedFromFixtured</tt></STEP><STEP>Attaches the (adjusted) fixtured space to the coordinate space tree of the input image. The FixturedSpaceName property determines the nonqualified space name of the fixtured space. The selected space of the input image is the unfixtured space.</STEP><STEP>Creates an output image that shares the pixels and tree of the input image. The SpaceToOutput property determines the selected space name of this image. It is either the fully-qualified name of the fixtured space or the fully-qualified name of the unfixtured space.</STEP><STEP>Returns a result object that holds the output image, the UnfixturedFromRaw and UnfixturedFromFixtured transforms, and the RMS error value of the fixturing computation.</STEP></PROCEDURE><PARA>No error results if the fixtured space already exists in the coordinate space tree of the input image prior to running this method. <see cref="M:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.Execute(Cognex.VisionPro.ICogImage)" />, in this case, simply updates the existing definition of the fixtured space using the computed UnfixturedFromFixtured transform. If an error does occur during execution, no result object is returned. Instead, the result is Null or Nothing.</PARA></remarks></member><member name="E:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.Changed"><summary>Occurs when one or more parts of the object's state may have changed.</summary></member><member name="T:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointResult"><summary>This object holds the result from an N Point to N Point fixturing operation.  It contains the output image, the transforms which define fixtured space, and the computed RMS error.</summary><remarks><PARA>This interface holds the result from an N-point-to-N-point fixturing operation. It contains the output image, the transforms which define fixtured space, and the computed RMS error.</PARA></remarks></member><member name="M:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointResult.#ctor(Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointResult)"><param name="other">The instance to copy from.</param><summary>Constructs a new instance of this class as a deep copy of the given instance.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointResult.#ctor"><summary>Constructs a new instance of this class.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointResult.#ctor(System.IntPtr)"><param name="impl">n/a</param><summary>Constructs a new instance of this class using com pointer.</summary></member><member name="P:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointResult.RMSError"><summary>Returns the root mean squared error between the set of unfixtured points and the mapped raw fixtured points, expressed in unfixtured space.  It is computed by taking the square root of the mean of the squares of the individual errors.</summary><remarks><PARA>Returns the <see cref="u:Framework.CalibrationAndFixturing.Theory.CalibFixtures" cgnxAnchor="rms_error_and_degrees_of_freedom_dofs">root mean squared error</see> between the set of unfixtured points and the mapped raw fixtured points, expressed in unfixtured space. Points are mapped using the UnfixturedFromRawFixtured transform.</PARA><DEFAULT>0</DEFAULT></remarks></member><member name="P:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointResult.OutputImage"><remarks><PARA>Fixtured output image. This image shares the pixels and the coordinate spaces of the input image, including the new fixtured space. The <see cref="P:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.SpaceToOutput" /> property determines the output image's selected space name.</PARA><DEFAULT>NULL</DEFAULT></remarks><summary>Fixtured output image.  This image shares the pixels and the coordinate spaces of the input image, including the new fixtured space.  Its SelectedSpaceName is controlled by the SpaceToOutput property.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointResult.~CogFixtureNPointToNPointResult"><summary>Releases all resources used by this object.  Do not attempt to access an object after it has been disposed.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointResult.!CogFixtureNPointToNPointResult"><summary>Releases all unmanaged resources used by this object.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointResult.Clone"><summary>Returns a deep copy of this class instance.  Derived classes that implement Clone should override this method; other clients who wish to clone this instance should call ICloneable.Clone. See also CogSerializer.DeepCopyObject</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointResult.GetUnfixturedFromFixturedTransform"><returns><PARA>The UnfixturedFromFixtured transform.</PARA></returns><remarks><PARA>The 2D, minimum-squared-error transformation that maps points from the (adjusted) fixtured space into unfixtured space.</PARA><DEFAULT>NULL</DEFAULT></remarks><summary>The 2-D, minimum squared error, transformation that maps points from the (adjusted) fixtured space into unfixtured space.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointResult.GetUnfixturedFromRawFixturedTransform"><remarks><PARA>The 2D, minimum-squared-error transformation that maps points from the raw fixtured space into unfixtured space.</PARA><DEFAULT>NULL</DEFAULT></remarks><returns><PARA>The UnfixturedFromRawFixtured transform.</PARA></returns><summary>The 2-D, minimum squared error, transformation that maps points from the raw fixtured space into unfixtured space.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointResult.GetInfoStrings"><remarks><PARA>Returns diagnostic text strings from the fixturing operation. The diagnostic strings are generated when this method is called and localized to the language in effect at the time of the method call. The collection will be empty if there are no messages. </PARA></remarks><returns><PARA>A collection of diagnostic information strings.</PARA></returns><summary>Returns diagnostic text string(s) from the fixturing operation.  The collection will be empty if there are no messages.</summary></member><member name="T:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointTool"><remarks><PARA>When run, this tool defines a new fixtured coordinate space using N pairs of points. It attaches the (adjusted) fixtured space to the coordinate space tree of the input image and supplies the updated image as an output for use by other tools.</PARA><TABLE><HEADING><ROW><CELL>Default</CELL><CELL>Value</CELL></ROW></HEADING><BODY><ROW><CELL>Exposed inputs</CELL><CELL>InputImage<BR />
						RunParams.UnfixturedPointX(0)<BR />
						RunParams.UnfixturedPointY(0)<BR />
						RunParams.UnfixturedPointX(1)<BR />
						RunParams.UnfixturedPointY(1)
				</CELL></ROW><ROW><CELL>Exposed outputs</CELL><CELL>OutputImage</CELL></ROW><ROW><CELL>CurrentRecordEnable</CELL><CELL>InputImage +<BR />
						UnfixturedPoints +<BR />
						RefImage +<BR />
						RawFixturedPoints +<BR />
						FixturedAxes
				</CELL></ROW><ROW><CELL>LastRunRecordEnable</CELL><CELL>OutputImage</CELL></ROW><ROW><CELL>LastRunRecordDiagEnable</CELL><CELL>FixturedAxes</CELL></ROW></BODY></TABLE></remarks><summary>When run, this tool defines a new fixtured coordinate space using N pairs of points.  It attaches the (adjusted) fixtured space to the coordinate tree of the input image and supplies the updated image as an output for use by downstream tools.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointTool.#ctor(Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointTool)"><param name="other">The instance to copy from.</param><summary>Constructs a new instance of this class as a deep copy of the given instance.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointTool.#ctor"><summary>Constructs a new instance of this class.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointTool.#ctor(System.IntPtr)"><param name="impl">n/a</param><summary>Constructs a new instance of this class using com pointer.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointTool.SfLastRunRecordEnable"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by LastRunRecordEnable may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointTool.SfLastRunRecordDiagEnable"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by LastRunRecordDiagEnable may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointTool.SfCurrentRecordEnable"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by CurrentRecordEnable may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointTool.SfInputImage"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by InputImage may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointTool.SfReferenceImage"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by ReferenceImage may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointTool.SfReferenceImageEnabled"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by ReferenceImageEnabled may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointTool.SfRunParams"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by RunParams may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointTool.SfResult"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Result may have changed.</summary></member><member name="P:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointTool.Result"><summary>Result from the last invocation of the tool's Run method.  It contains the output image, the transforms which define fixtured space, and the computed RMS error.</summary><remarks><PARA>Result from the last invocation of the tool's <see cref="M:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointTool.Run" /> method. It contains the output image, the transforms which define fixtured space, and the computed RMS error.</PARA><NOTE>Unless the last invocation of <see cref="M:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointTool.Run" /> was successful, the value of <see cref="P:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointTool.Result" /> will be NULL.</NOTE><DEFAULT>NULL</DEFAULT></remarks></member><member name="P:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointTool.RunParams"><summary>The runtime parameters for computing the fixtured space.  These include a set of unfixtured points, a set of corresponding raw fixtured points, an optional adjustment transform, and parameters for computing the mapping between point sets.</summary><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogFixtureNPointToNPointTool_RunParams--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointTool.SfRunParams" /></li></ul></event><remarks><PARA>The run-time parameters for computing the fixtured space. These include a set of unfixtured points, a set of corresponding raw fixtured points, an optional adjustment transform, and parameters for computing the mapping between point sets.</PARA><NOTE>Changing this property causes the CurrentRecord to invalidate. Setting it to NULL does not cause an error, however an error will occur if the <see cref="M:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointTool.Run" /> method is called and this property is NULL.</NOTE><DEFAULT>A <see cref="T:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint" /> object.</DEFAULT></remarks><exception cref="T:System.InvalidCastException" cgnxHRESULT="E_NOINTERFACE"><para>The supplied non-NULL object is not a <see cref="T:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint" /> object.</para></exception></member><member name="P:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointTool.ReferenceImageEnabled"><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogFixtureNPointToNPointTool_ReferenceImageEnabled--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointTool.SfReferenceImageEnabled" /></li></ul></event><summary>If True, the ReferenceImage will appear in the CurrentRecord for this tool (as long as the corresponding bit of CurrentRecordEnable is also set).  Otherwise, the ReferenceImage will not appear.</summary><remarks><PARA>If True and if the <see cref="T:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointCurrentRecordConstants">RefImage</see> bit is also set, the <see cref="P:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointTool.ReferenceImage" /> value will appear in the CurrentRecord for this tool. Otherwise, the ReferenceImage will not appear.</PARA><DEFAULT>True</DEFAULT></remarks></member><member name="P:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointTool.ReferenceImage"><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogFixtureNPointToNPointTool_ReferenceImage--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointTool.SfReferenceImage" /></li></ul></event><remarks><PARA>If it exists, the reference image will be displayed in the CurrentRecord of the tool. This property is for GUI purposes only and typically holds an application-specific reference image. A user might use the reference image to visually position the desired fixtured space; or other tools might use this image to determine feature locations. However, it is not required for running the tool.</PARA><DEFAULT>NULL</DEFAULT></remarks><summary>If it exists, this image will be displayed in the CurrentRecord of the tool.  It is for GUI purposes only and will typically be used to hold an application-specific 'reference' image.  It is not required for running the tool.</summary></member><member name="P:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointTool.InputImage"><summary>Image to which a new fixtured coordinate space will be attached.  The selected space of this image is the unfixtured space.</summary><remarks><PARA>Image to which a new fixtured coordinate space will be attached. The selected space of this image is the unfixtured space.</PARA><NOTE>Changing this property causes the CurrentRecord to invalidate.</NOTE></remarks><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogFixtureNPointToNPointTool_InputImage--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointTool.SfInputImage" /></li></ul></event></member><member name="P:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointTool.CurrentRecordEnable"><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogFixtureNPointToNPointTool_CurrentRecordEnable--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointTool.SfCurrentRecordEnable" /></li></ul></event><summary>Enable creation of records by bitwise ORing the appropriate CurrentRecordConstants.</summary><remarks><PARA>Enable creation of records by bitwise ORing the appropriate <see cref="T:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointCurrentRecordConstants" />.</PARA><DEFAULT><see cref="T:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointCurrentRecordConstants">InputImage</see> +
<see cref="T:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointCurrentRecordConstants">UnfixturedPoints</see> +
<see cref="T:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointCurrentRecordConstants">RefImage</see> +
<see cref="T:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointCurrentRecordConstants">RawFixturedPoints</see> +
<see cref="T:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointCurrentRecordConstants">FixturedAxes</see></DEFAULT></remarks></member><member name="P:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointTool.LastRunRecordDiagEnable"><summary>Enable creation of records by bitwise ORing the appropriate LastRunRecordDiagConstants.  These are diagnostic records that may cause the Tool to have a longer execution time.</summary><remarks><PARA>Enable creation of records by bitwise ORing the appropriate <see cref="T:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointLastRunRecordDiagConstants" />.  These are diagnostic records that may cause the Tool to have a longer execution time.</PARA><DEFAULT><see cref="T:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointLastRunRecordDiagConstants">FixturedAxes</see></DEFAULT></remarks><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogFixtureNPointToNPointTool_LastRunRecordDiagEnable--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointTool.SfLastRunRecordDiagEnable" /></li></ul></event></member><member name="P:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointTool.LastRunRecordEnable"><remarks><PARA>Enable creation of records by bitwise ORing the appropriate <see cref="T:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointLastRunRecordConstants" />.</PARA><DEFAULT><see cref="T:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointLastRunRecordConstants">OutputImage</see></DEFAULT></remarks><summary>Enable creation of records by bitwise ORing the appropriate LastRunRecordConstants.</summary><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogFixtureNPointToNPointTool_LastRunRecordEnable--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointTool.SfLastRunRecordEnable" /></li></ul></event></member><member name="P:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointTool.RunStatus"><summary>Gets general information about the last call to Run.</summary></member><member name="P:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointTool.Name"><summary>Gets or sets the name of the tool.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointTool.Clone"><summary>Returns a deep copy of this class instance.  Derived classes that implement Clone should override this method; other clients who wish to clone this instance should call ICloneable.Clone. See also CogSerializer.DeepCopyObject.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointTool.Run"><remarks><PARA>Computes a new UnfixturedFromFixtured transform, attaches the resulting (adjusted) fixtured space to the coordinate tree of the input image using the
<see cref="M:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.Execute(Cognex.VisionPro.ICogImage)" /> method of the tool's <see cref="T:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint" />, creates a new output image, and builds inspection records.</PARA><PARA>For each invocation, this method creates a new <see cref="T:Cognex.VisionPro.CogRunStatus" />. For each successful invocation, it creates a new <see cref="T:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointResult" />.</PARA><NOTE>For more information about the tool's execution, see the <see cref="M:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.Execute(Cognex.VisionPro.ICogImage)" /> method of the tool's <see cref="T:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint" />.</NOTE><NOTE>
		This method does not actually raise the exceptions listed below. 
		Use the <see cref="P:Cognex.VisionPro.CogFitCircleTool.RunStatus" /> property
		to obtain a <see cref="T:Cognex.VisionPro.ICogRunStatus" /> reference. Then use
		its <see cref="P:Cognex.VisionPro.ICogRunStatus.Exception" /> property to see
		if the Run method raised any exceptions.
	</NOTE></remarks><CONTENT><PARA>In addition to the following error, <see cref="T:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointTool" /> propagates errors from the <DISPLAY FUNC="Execute" cref="Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointTool.Execute" assemblyName="CalibFix" iface="CogFixtureNPointToNPointTool" func="Execute" /> method of the operator.</PARA></CONTENT><exception cref="T:Cognex.VisionPro.Exceptions.CogToolNoOperatorException" cgnxHRESULT="E_CogTool_NoOperator"><para>The <see cref="P:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointTool.RunParams" /> object is NULL.</para></exception><!-- what the heck does this mean?
        Commented out by pb after adding Pre and Post events

	<CONTENT><PARA>In addition to the following events, <DISPLAY FUNC="." /> can fire the usual events associated with <LINK TYPELIB="CognexCore" IFACE="ICogToolEvents"/>.</PARA></CONTENT>
--><event cref="E:Cognex.VisionPro.ICogTool.Running" cgnxEvent="PreRun"><para>
		Fires before the tool runs.
	</para></event><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed" cgnxEvent="multiState"><para>
		
		Fires when the tool runs. If the run was successful, results are generated;
		if the run was not successful, no results are generated and the previous results are cleared.
		Use <see cref="P:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointTool.RunStatus" /> after <see cref="T:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointTool" /> returns or in a
	<event cref="E:Cognex.VisionPro.ICogTool.Ran" cgnxEvent="PostRun" /> event handler
		to determine whether a run was successful or unsuccessful.
	</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_Tool_Results--><li><see cref="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointTool.SfResult" /></li><!--FA:cogFA_Tool_LastRunRecord--></ul></event><event cref="E:Cognex.VisionPro.ICogTool.Ran" cgnxEvent="PostRun"><para>
		Fires after the tool runs.
	</para></event><summary>Runs the tool using the current parameter settings.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointTool.~CogFixtureNPointToNPointTool"><summary>Releases all resources used by this object.  Do not attempt to access an object after it has been disposed.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointTool.!CogFixtureNPointToNPointTool"><summary>Releases all unmanaged resources used by this object.</summary></member><member name="T:Cognex.VisionPro.CalibFix.CogFixtureTool"><summary>The CogFixtureTool attaches a user-defined fixtured coordinate space to its input image and supplies the updated image as an output for use by downstream tools.</summary><remarks><PARA>This interface attaches a user-defined fixtured coordinate space to its input image and supplies the updated image as an output for use by other tools.</PARA><TABLE><HEADING><ROW><CELL>Default</CELL><CELL>Value</CELL></ROW></HEADING><BODY><ROW><CELL>Exposed inputs</CELL><CELL>InputImage<BR />
						RunParams.UnfixturedFromFixturedTransform<BR />
						RunParams.UnfixturedFromFixturedTransform.TranslationX<BR />
						RunParams.UnfixturedFromFixturedTransform.TranslationY<BR />
						RunParams.UnfixturedFromFixturedTransform.Rotation
				</CELL></ROW><ROW><CELL>Exposed outputs</CELL><CELL>OutputImage</CELL></ROW><ROW><CELL>CurrentRecordEnable</CELL><CELL>InputImage +<BR />
						FixturedAxes
				</CELL></ROW><ROW><CELL>LastRunRecordEnable</CELL><CELL>OutputImage</CELL></ROW><ROW><CELL>LastRunRecordDiagEnable</CELL><CELL>FixturedAxes</CELL></ROW></BODY></TABLE></remarks></member><member name="M:Cognex.VisionPro.CalibFix.CogFixtureTool.#ctor(Cognex.VisionPro.CalibFix.CogFixtureTool)"><param name="other">The instance to copy from.</param><summary>Constructs a new instance of this class as a deep copy of the given instance.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogFixtureTool.#ctor"><summary>Constructs a new instance of this class.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogFixtureTool.#ctor(System.IntPtr)"><param name="impl">n/a</param><summary>Constructs a new instance of this class using com pointer.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureTool.SfLastRunRecordEnable"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by LastRunRecordEnable may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureTool.SfLastRunRecordDiagEnable"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by LastRunRecordDiagEnable may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureTool.SfCurrentRecordEnable"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by CurrentRecordEnable may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureTool.SfInputImage"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by InputImage may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureTool.SfRunParams"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by RunParams may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureTool.SfOutputImage"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by OutputImage may have changed.</summary></member><member name="P:Cognex.VisionPro.CalibFix.CogFixtureTool.OutputImage"><summary>Output image from the last invocation of the tool's Run method.  This image shares the pixels and the coordinate spaces of the input image.  Its SelectedSpaceName is controlled by the SpaceToOutput property of this tool.</summary><remarks><PARA>The output image from the last invocation of the tool's <see cref="M:Cognex.VisionPro.CalibFix.CogFixtureTool.Run" /> method. This image shares the pixels and the coordinate spaces of the input image. The <see cref="P:Cognex.VisionPro.CalibFix.CogFixture.SpaceToOutput" /> property of the <see cref="P:Cognex.VisionPro.CalibFix.CogFixtureTool.RunParams" /> object controls the selected space name of the output image.</PARA><NOTE>Unless the last run of the tool was successful, the output image will be NULL or Nothing.</NOTE><DEFAULT>NULL</DEFAULT></remarks></member><member name="P:Cognex.VisionPro.CalibFix.CogFixtureTool.RunParams"><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogFixtureTool_RunParams--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogFixtureTool.SfRunParams" /></li></ul></event><exception cref="T:System.InvalidCastException" cgnxHRESULT="E_NOINTERFACE"><para>The supplied non-NULL object is not a <see cref="T:Cognex.VisionPro.CalibFix.CogFixture" /> object.</para></exception><summary>The runtime parameters for defining a fixtured space.  These parameters include the name of the fixtured space, and the transformation that maps points from the fixtured space to the unfixtured space.</summary><remarks><PARA>The runtime parameters for defining a fixtured space. These parameters include the name of the fixtured space, and the transformation that maps points from the fixtured space to the unfixtured space.</PARA><NOTE>Changing this property causes the CurrentRecord to invalidate. Setting this property to NULL does not cause an error, however an error will occur if the <see cref="M:Cognex.VisionPro.CalibFix.CogFixtureTool.Run" /> method is called and this property is NULL.</NOTE><DEFAULT>A <see cref="T:Cognex.VisionPro.CalibFix.CogFixture" /> object.</DEFAULT></remarks></member><member name="P:Cognex.VisionPro.CalibFix.CogFixtureTool.InputImage"><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogFixtureTool_InputImage--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogFixtureTool.SfInputImage" /></li></ul></event><summary>Image to which a new fixtured coordinate space will be attached.  The selected space of this image is the unfixtured space.</summary><remarks><PARA>Image to which a new fixtured coordinate space will be attached. The selected space of this image is the unfixtured space.</PARA><NOTE>Changing this property causes the CurrentRecord to invalidate.</NOTE><DEFAULT>NULL</DEFAULT></remarks></member><member name="P:Cognex.VisionPro.CalibFix.CogFixtureTool.CurrentRecordEnable"><remarks><PARA>Enable creation of records by bitwise ORing the appropriate <see cref="T:Cognex.VisionPro.CalibFix.CogFixtureCurrentRecordConstants" />.</PARA><DEFAULT><see cref="T:Cognex.VisionPro.CalibFix.CogFixtureCurrentRecordConstants">InputImage</see> + 
<see cref="T:Cognex.VisionPro.CalibFix.CogFixtureCurrentRecordConstants">FixturedAxes</see></DEFAULT></remarks><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogFixtureTool_CurrentRecordEnable--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogFixtureTool.SfCurrentRecordEnable" /></li></ul></event><summary>Enable creation of records by bitwise ORing the appropriate CurrentRecordConstants.</summary></member><member name="P:Cognex.VisionPro.CalibFix.CogFixtureTool.LastRunRecordDiagEnable"><summary>Enable creation of records by bitwise ORing the appropriate LastRunRecordDiagConstants.  These are diagnostic records that may cause the Tool to have a longer execution time.</summary><remarks><PARA>Enable creation of records by bitwise ORing the appropriate <see cref="T:Cognex.VisionPro.CalibFix.CogFixtureLastRunRecordDiagConstants" />.  These are diagnostic records that may cause the Tool to have a longer execution time.</PARA><DEFAULT><see cref="T:Cognex.VisionPro.CalibFix.CogFixtureLastRunRecordDiagConstants">FixturedAxes</see></DEFAULT></remarks><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogFixtureTool_LastRunRecordDiagEnable--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogFixtureTool.SfLastRunRecordDiagEnable" /></li></ul></event></member><member name="P:Cognex.VisionPro.CalibFix.CogFixtureTool.LastRunRecordEnable"><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogFixtureTool_LastRunRecordEnable--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogFixtureTool.SfLastRunRecordEnable" /></li></ul></event><summary>Enable creation of records by bitwise ORing the appropriate LastRunRecordConstants.</summary><remarks><PARA>Enable creation of records by bitwise ORing the appropriate <see cref="T:Cognex.VisionPro.CalibFix.CogFixtureLastRunRecordConstants" />.</PARA><DEFAULT><see cref="T:Cognex.VisionPro.CalibFix.CogFixtureLastRunRecordConstants">OutputImage</see></DEFAULT></remarks></member><member name="P:Cognex.VisionPro.CalibFix.CogFixtureTool.RunStatus"><summary>Gets general information about the last call to Run.</summary></member><member name="P:Cognex.VisionPro.CalibFix.CogFixtureTool.Name"><summary>Gets or sets the name of the tool.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogFixtureTool.Clone"><summary>Returns a deep copy of this class instance.  Derived classes that implement Clone should override this method; other clients who wish to clone this instance should call ICloneable.Clone. See also CogSerializer.DeepCopyObject.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogFixtureTool.Run"><remarks><PARA>Attaches a user-defined fixtured space to the coordinate tree of the input image using the
<see cref="M:Cognex.VisionPro.CalibFix.CogFixture.Execute(Cognex.VisionPro.ICogImage)" /> method of the tool's <see cref="T:Cognex.VisionPro.CalibFix.CogFixture" />, places the resulting output image into this tool, and builds inspection records for the tool invocation.</PARA><PARA>For each invocation, this method creates a new <see cref="T:Cognex.VisionPro.CogRunStatus" />. For each successful invocation, it creates a new <see cref="T:Cognex.VisionPro.CogImage" />.</PARA><NOTE>For more information about the tool's execution, see the <see cref="M:Cognex.VisionPro.CalibFix.CogFixture.Execute(Cognex.VisionPro.ICogImage)" /> method of the tool's <see cref="T:Cognex.VisionPro.CalibFix.CogFixture" />.</NOTE><NOTE>
		This method does not actually raise the exceptions listed below. 
		Use the <see cref="P:Cognex.VisionPro.CogFitCircleTool.RunStatus" /> property
		to obtain a <see cref="T:Cognex.VisionPro.ICogRunStatus" /> reference. Then use
		its <see cref="P:Cognex.VisionPro.ICogRunStatus.Exception" /> property to see
		if the Run method raised any exceptions.
	</NOTE></remarks><CONTENT><PARA>In addition to the following error, <see cref="T:Cognex.VisionPro.CalibFix.CogFixtureTool" /> propagates errors from the <DISPLAY FUNC="Execute" cref="Cognex.VisionPro.CalibFix.CogFixtureTool.Execute" assemblyName="CalibFix" iface="CogFixtureTool" func="Execute" /> method of the operator.</PARA></CONTENT><exception cref="T:Cognex.VisionPro.Exceptions.CogToolNoOperatorException" cgnxHRESULT="E_CogTool_NoOperator"><para>The <see cref="P:Cognex.VisionPro.CalibFix.CogFixtureTool.RunParams" /> object is NULL.</para></exception><!-- what the heck does this mean?
        Commented out by pb after adding Pre and Post events

	<CONTENT><PARA>In addition to the following events, <DISPLAY FUNC="." /> can fire the usual events associated with <LINK TYPELIB="CognexCore" IFACE="ICogToolEvents"/>.</PARA></CONTENT>
--><event cref="E:Cognex.VisionPro.ICogTool.Running" cgnxEvent="PreRun"><para>
		Fires before the tool runs.
	</para></event><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed" cgnxEvent="multiState"><para>
		
		Fires when the tool runs. If the run was successful, results are generated;
		if the run was not successful, no results are generated and the previous results are cleared.
		Use <see cref="P:Cognex.VisionPro.CalibFix.CogFixtureTool.RunStatus" /> after <see cref="T:Cognex.VisionPro.CalibFix.CogFixtureTool" /> returns or in a
	<event cref="E:Cognex.VisionPro.ICogTool.Ran" cgnxEvent="PostRun" /> event handler
		to determine whether a run was successful or unsuccessful.
	</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_Tool_Results--><li><see cref="F:Cognex.VisionPro.CalibFix.CogFixtureTool.SfOutputImage" /></li><!--FA:cogFA_Tool_LastRunRecord--></ul></event><event cref="E:Cognex.VisionPro.ICogTool.Ran" cgnxEvent="PostRun"><para>
		Fires after the tool runs.
	</para></event><summary>Runs the tool using the current parameter settings.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogFixtureTool.~CogFixtureTool"><summary>Releases all resources used by this object.  Do not attempt to access an object after it has been disposed.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogFixtureTool.!CogFixtureTool"><summary>Releases all unmanaged resources used by this object.</summary></member><member name="T:Cognex.VisionPro.CalibFix.CogNPointToNPoint"><summary>The CogNPointToNPoint object computes the best-fit (minimum squared error) transformation which maps a set of N 'group B' points onto a set of N 'group A' points.</summary><remarks><PARA>This interface computes the best-fit (minimum squared error) transformation which maps a set of N "group B" points onto a set of N "group A" points.</PARA><NOTE>This interface exists to enable programmatic users to accomplish low-level fitting between two sets of N points. It is neither a tool nor an operator for a tool.</NOTE></remarks></member><member name="M:Cognex.VisionPro.CalibFix.CogNPointToNPoint.#ctor(Cognex.VisionPro.CalibFix.CogNPointToNPoint)"><param name="other">The instance to copy from.</param><summary>Constructs a new instance of this class as a deep copy of the given instance.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogNPointToNPoint.#ctor"><summary>Constructs a new instance of this class.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogNPointToNPoint.#ctor(System.IntPtr)"><param name="impl">n/a</param><summary>Constructs a new instance of this class using com pointer.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogNPointToNPoint.SfNumPoints"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by NumPoints may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogNPointToNPoint.SfGetGroupAPointX"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by GetGroupAPointX may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogNPointToNPoint.SfGetGroupAPointY"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by GetGroupAPointY may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogNPointToNPoint.SfGetGroupBPointX"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by GetGroupBPointX may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogNPointToNPoint.SfGetGroupBPointY"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by GetGroupBPointY may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogNPointToNPoint.SfDOFsToCompute"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by DOFsToCompute may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogNPointToNPoint.SfComputationMode"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by ComputationMode may have changed.</summary></member><member name="P:Cognex.VisionPro.CalibFix.CogNPointToNPoint.ComputationMode"><event cref="E:Cognex.VisionPro.CalibFix.CogNPointToNPoint.Changed" cgnxEvent="singleState"><para>
		
		Fires when the value of this property changes. 
	</para><para>The following state flag may be affected:</para><!--STATEID:cogNPointToNPoint_ComputationMode--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogNPointToNPoint.SfComputationMode" /></li></ul></event><summary>This enumeration specifies how the best-fit transformation between the 'group A' points and the 'group B' points will be computed.  Only linear computations are supported in this release.</summary><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The supplied value is not a valid member of the <see cref="T:Cognex.VisionPro.CalibFix.CogCalibFixComputationModeConstants" /> enumeration.</para></exception><remarks><PARA>Returns or sets how the best-fit transformation between the "group A" points and the "group B" points will be computed. This release supports only linear computations.</PARA><DEFAULT><see cref="T:Cognex.VisionPro.CalibFix.CogCalibFixComputationModeConstants">Linear</see></DEFAULT></remarks></member><member name="P:Cognex.VisionPro.CalibFix.CogNPointToNPoint.DOFsToCompute"><summary>This enumeration specifies which degrees of freedom will be allowed when computing the best-fit transformation between the 'group A' points and the 'group B' points.</summary><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The supplied value is not a valid member of the <see cref="T:Cognex.VisionPro.CalibFix.CogNPointToNPointDOFConstants" /> enumeration.</para></exception><event cref="E:Cognex.VisionPro.CalibFix.CogNPointToNPoint.Changed" cgnxEvent="singleState"><para>
		
		Fires when the value of this property changes. 
	</para><para>The following state flag may be affected:</para><!--STATEID:cogNPointToNPoint_DOFsToCompute--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogNPointToNPoint.SfDOFsToCompute" /></li></ul></event><remarks><PARA>Returns or sets the enumeration that specifies which degrees of freedom will be allowed when computing the best-fit transformation between the "group A" points and the "group B" points.</PARA><DEFAULT><see cref="T:Cognex.VisionPro.CalibFix.CogNPointToNPointDOFConstants">ScalingAspectRotationSkewAndTranslation</see></DEFAULT></remarks></member><member name="P:Cognex.VisionPro.CalibFix.CogNPointToNPoint.NumPoints"><remarks><PARA>The number of points in each point set. This is the number of "group B" points and also the number of "group A" points.</PARA><PARA>If you increase the number of points, the extra points are added to the end of the existing point sets and initialized to (0, 0).  If you decrease the number of points, the points are removed from the end of each point set.</PARA><DEFAULT>0</DEFAULT></remarks><summary>The number of points in each point set.  This is the number of 'group B' points, and also the number of 'group A' points.</summary><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The new value is less than 0.</para></exception><event cref="E:Cognex.VisionPro.CalibFix.CogNPointToNPoint.Changed" cgnxEvent="multiState"><para>
		
		Fires when the value of this property changes. 
	</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_NPointToNPoint_PointSet--><li><see cref="F:Cognex.VisionPro.CalibFix.CogNPointToNPoint.SfNumPoints" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogNPointToNPoint.SfGetGroupAPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogNPointToNPoint.SfGetGroupAPointY" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogNPointToNPoint.SfGetGroupBPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogNPointToNPoint.SfGetGroupBPointY" /></li></ul></event></member><member name="P:Cognex.VisionPro.CalibFix.CogNPointToNPoint.ChangedEventSuspended"><summary>If nonzero, indicates that the raising of the Changed event has been suspended. This value is incremented when SuspendChangedEvent is called and decremented when ResumeAndRaiseChangedEvent is called.</summary></member><member name="P:Cognex.VisionPro.CalibFix.CogNPointToNPoint.HasChanged"><summary>If true, the serializable state of this object has changed since the last time it was serialized.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogNPointToNPoint.~CogNPointToNPoint"><summary>Releases all resources used by this object.  Do not attempt to access an object after it has been disposed.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogNPointToNPoint.!CogNPointToNPoint"><summary>Releases all unmanaged resources used by this object.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogNPointToNPoint.Clone"><summary>Returns a deep copy of this class instance.  Derived classes that implement Clone should override this method; other clients who wish to clone this instance should call ICloneable.Clone. See also CogSerializer.DeepCopyObject</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogNPointToNPoint.SuspendChangedEvent"><summary>Temporarily suspends the raising of the Changed event. May be called more than once, and a corresponding call to ResumeAndRaiseChangedEvent must be made for each call to SuspendChangedEvent.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogNPointToNPoint.ResumeAndRaiseChangedEvent"><summary>Re-enables raising of the Changed event after SuspendChangedEvent has been called.  Also raises the Changed event if the ChangedEventSuspended count is reduced to zero and any changes were made while events were suspended. Must be called once for each call to SuspendChangedEvent.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogNPointToNPoint.GetGroupAPointX(System.Int32)"><param name="index"><PARA>The index of the point.</PARA></param><remarks><PARA>Returns or sets the x-coordinate of the "group A" point with the given index. Valid indices range from 0 to NumPoints - 1, inclusive.</PARA><DEFAULT>0</DEFAULT></remarks><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="index" /> is less than 0 or greater than or equal to <see cref="P:Cognex.VisionPro.CalibFix.CogNPointToNPoint.NumPoints" />.</para></exception><event cref="E:Cognex.VisionPro.CalibFix.CogNPointToNPoint.Changed" cgnxEvent="singleState"><para>
		
		Fires when the value of this property changes. 
	</para><para>The following state flag may be affected:</para><!--STATEID:cogNPointToNPoint_GroupAPointX--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogNPointToNPoint.SfGetGroupAPointX" /></li></ul></event><summary>The X coordinate of the 'group A' point with the given index.  Valid indices range from 0 to NumPoints-1 inclusive.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogNPointToNPoint.SetGroupAPointX(System.Int32,System.Double)"><param name="index"><PARA>The index of the point.</PARA></param><param name="value"></param><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="index" /> is less than 0 or greater than or equal to <see cref="P:Cognex.VisionPro.CalibFix.CogNPointToNPoint.NumPoints" />.</para></exception><event cref="E:Cognex.VisionPro.CalibFix.CogNPointToNPoint.Changed" cgnxEvent="singleState"><para>
		
		Fires when the value of this property changes. 
	</para><para>The following state flag may be affected:</para><!--STATEID:cogNPointToNPoint_GroupAPointX--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogNPointToNPoint.SfGetGroupAPointX" /></li></ul></event><summary>The X coordinate of the 'group A' point with the given index.  Valid indices range from 0 to NumPoints-1 inclusive.</summary><remarks><PARA>Returns or sets the x-coordinate of the "group A" point with the given index. Valid indices range from 0 to NumPoints - 1, inclusive.</PARA><DEFAULT>0</DEFAULT></remarks></member><member name="M:Cognex.VisionPro.CalibFix.CogNPointToNPoint.GetGroupAPointY(System.Int32)"><param name="index"><PARA>The index of the point.</PARA></param><summary>The Y coordinate of the 'group A' point with the given index.  Valid indices range from 0 to NumPoints-1 inclusive.</summary><remarks><PARA>Returns or sets the y-coordinate of the "group A" point with the given index. Valid indices range from 0 to NumPoints - 1, inclusive.</PARA><DEFAULT>0</DEFAULT></remarks><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="index" /> is less than 0 or greater than or equal to <see cref="P:Cognex.VisionPro.CalibFix.CogNPointToNPoint.NumPoints" />.</para></exception><event cref="E:Cognex.VisionPro.CalibFix.CogNPointToNPoint.Changed" cgnxEvent="singleState"><para>
		
		Fires when the value of this property changes. 
	</para><para>The following state flag may be affected:</para><!--STATEID:cogNPointToNPoint_GroupAPointY--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogNPointToNPoint.SfGetGroupAPointY" /></li></ul></event></member><member name="M:Cognex.VisionPro.CalibFix.CogNPointToNPoint.SetGroupAPointY(System.Int32,System.Double)"><param name="index"><PARA>The index of the point.</PARA></param><param name="value"></param><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="index" /> is less than 0 or greater than or equal to <see cref="P:Cognex.VisionPro.CalibFix.CogNPointToNPoint.NumPoints" />.</para></exception><event cref="E:Cognex.VisionPro.CalibFix.CogNPointToNPoint.Changed" cgnxEvent="singleState"><para>
		
		Fires when the value of this property changes. 
	</para><para>The following state flag may be affected:</para><!--STATEID:cogNPointToNPoint_GroupAPointY--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogNPointToNPoint.SfGetGroupAPointY" /></li></ul></event><summary>The Y coordinate of the 'group A' point with the given index.  Valid indices range from 0 to NumPoints-1 inclusive.</summary><remarks><PARA>Returns or sets the y-coordinate of the "group A" point with the given index. Valid indices range from 0 to NumPoints - 1, inclusive.</PARA><DEFAULT>0</DEFAULT></remarks></member><member name="M:Cognex.VisionPro.CalibFix.CogNPointToNPoint.GetGroupBPointX(System.Int32)"><param name="index"><PARA>The index of the point.</PARA></param><event cref="E:Cognex.VisionPro.CalibFix.CogNPointToNPoint.Changed" cgnxEvent="singleState"><para>
		
		Fires when the value of this property changes. 
	</para><para>The following state flag may be affected:</para><!--STATEID:cogNPointToNPoint_GroupBPointX--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogNPointToNPoint.SfGetGroupBPointX" /></li></ul></event><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="index" /> is less than 0 or greater than or equal to <see cref="P:Cognex.VisionPro.CalibFix.CogNPointToNPoint.NumPoints" />.</para></exception><summary>The X coordinate of the 'group B' point with the given index.  Valid indices range from 0 to NumPoints-1 inclusive.</summary><remarks><PARA>Returns or sets the x-coordinate of the "group B" point with the given index. Valid indices range from 0 to NumPoints - 1, inclusive.</PARA><DEFAULT>0</DEFAULT></remarks></member><member name="M:Cognex.VisionPro.CalibFix.CogNPointToNPoint.SetGroupBPointX(System.Int32,System.Double)"><param name="index"><PARA>The index of the point.</PARA></param><param name="value"></param><event cref="E:Cognex.VisionPro.CalibFix.CogNPointToNPoint.Changed" cgnxEvent="singleState"><para>
		
		Fires when the value of this property changes. 
	</para><para>The following state flag may be affected:</para><!--STATEID:cogNPointToNPoint_GroupBPointX--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogNPointToNPoint.SfGetGroupBPointX" /></li></ul></event><summary>The X coordinate of the 'group B' point with the given index.  Valid indices range from 0 to NumPoints-1 inclusive.</summary><remarks><PARA>Returns or sets the x-coordinate of the "group B" point with the given index. Valid indices range from 0 to NumPoints - 1, inclusive.</PARA><DEFAULT>0</DEFAULT></remarks><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="index" /> is less than 0 or greater than or equal to <see cref="P:Cognex.VisionPro.CalibFix.CogNPointToNPoint.NumPoints" />.</para></exception></member><member name="M:Cognex.VisionPro.CalibFix.CogNPointToNPoint.GetGroupBPointY(System.Int32)"><param name="index"><PARA>The index of the point.</PARA></param><summary>The Y coordinate of the 'group B' point with the given index.  Valid indices range from 0 to NumPoints-1 inclusive.</summary><remarks><PARA>Returns or sets the y-coordinate of the "group B" point with the given index. Valid indices range from 0 to NumPoints - 1, inclusive.</PARA><DEFAULT>0</DEFAULT></remarks><event cref="E:Cognex.VisionPro.CalibFix.CogNPointToNPoint.Changed" cgnxEvent="singleState"><para>
		
		Fires when the value of this property changes. 
	</para><para>The following state flag may be affected:</para><!--STATEID:cogNPointToNPoint_GroupBPointY--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogNPointToNPoint.SfGetGroupBPointY" /></li></ul></event><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="index" /> is less than 0 or greater than or equal to <see cref="P:Cognex.VisionPro.CalibFix.CogNPointToNPoint.NumPoints" />.</para></exception></member><member name="M:Cognex.VisionPro.CalibFix.CogNPointToNPoint.SetGroupBPointY(System.Int32,System.Double)"><param name="index"><PARA>The index of the point.</PARA></param><param name="value"></param><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="index" /> is less than 0 or greater than or equal to <see cref="P:Cognex.VisionPro.CalibFix.CogNPointToNPoint.NumPoints" />.</para></exception><remarks><PARA>Returns or sets the y-coordinate of the "group B" point with the given index. Valid indices range from 0 to NumPoints - 1, inclusive.</PARA><DEFAULT>0</DEFAULT></remarks><event cref="E:Cognex.VisionPro.CalibFix.CogNPointToNPoint.Changed" cgnxEvent="singleState"><para>
		
		Fires when the value of this property changes. 
	</para><para>The following state flag may be affected:</para><!--STATEID:cogNPointToNPoint_GroupBPointY--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogNPointToNPoint.SfGetGroupBPointY" /></li></ul></event><summary>The Y coordinate of the 'group B' point with the given index.  Valid indices range from 0 to NumPoints-1 inclusive.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogNPointToNPoint.SetGroupAPoint(System.Int32,System.Double,System.Double)"><param name="index"><PARA>The index of the point.</PARA></param><param name="x"><PARA>The new x-axis value.</PARA></param><param name="y"><PARA>The new y-axis value.</PARA></param><remarks><PARA>Sets the x- and y-coordinates of the "group A" point with the given index. Valid indices range from 0 to NumPoints - 1, inclusive.</PARA></remarks><summary>Sets the X and Y coordinates of the 'group A' point with the given index.  Valid indices range from 0 to NumPoints-1 inclusive.</summary><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="index" /> is less than 0 or greater than or equal to <see cref="P:Cognex.VisionPro.CalibFix.CogNPointToNPoint.NumPoints" />.</para></exception><event cref="E:Cognex.VisionPro.CalibFix.CogNPointToNPoint.Changed" cgnxEvent="multiState"><para>
		
		Fires when the value of this property changes. 
	</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_NPointToNPoint_PointSet--><li><see cref="F:Cognex.VisionPro.CalibFix.CogNPointToNPoint.SfNumPoints" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogNPointToNPoint.SfGetGroupAPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogNPointToNPoint.SfGetGroupAPointY" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogNPointToNPoint.SfGetGroupBPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogNPointToNPoint.SfGetGroupBPointY" /></li></ul></event></member><member name="M:Cognex.VisionPro.CalibFix.CogNPointToNPoint.SetGroupBPoint(System.Int32,System.Double,System.Double)"><param name="index"><PARA>The index of the point.</PARA></param><param name="x"><PARA /></param><param name="y"><PARA>The new y-axis value.</PARA></param><remarks><PARA>Sets the x- and y-coordinates of the "group B" point with the given index. Valid indices range from 0 to NumPoints - 1, inclusive.</PARA></remarks><event cref="E:Cognex.VisionPro.CalibFix.CogNPointToNPoint.Changed" cgnxEvent="multiState"><para>
		
		Fires when the value of this property changes. 
	</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_NPointToNPoint_PointSet--><li><see cref="F:Cognex.VisionPro.CalibFix.CogNPointToNPoint.SfNumPoints" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogNPointToNPoint.SfGetGroupAPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogNPointToNPoint.SfGetGroupAPointY" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogNPointToNPoint.SfGetGroupBPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogNPointToNPoint.SfGetGroupBPointY" /></li></ul></event><summary>Sets the X and Y coordinates of the 'group B' point with the given index.  Valid indices range from 0 to NumPoints-1 inclusive.</summary><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="index" /> is less than 0 or greater than or equal to <see cref="P:Cognex.VisionPro.CalibFix.CogNPointToNPoint.NumPoints" />.</para></exception></member><member name="M:Cognex.VisionPro.CalibFix.CogNPointToNPoint.GetGroupAPoint(System.Int32,System.Double@,System.Double@)"><param name="index"><PARA>The index of the point.</PARA></param><param name="x"><PARA>The x-axis coordinate of the point.</PARA></param><param name="y"><PARA>The y-axis coordinate of the point.</PARA></param><exception cref="T:System.NullReferenceException" cgnxHRESULT="E_POINTER"><para><paramref name="x" /> or <paramref name="y" /> is NULL.</para></exception><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="index" /> is less than 0 or greater than or equal to <see cref="P:Cognex.VisionPro.CalibFix.CogNPointToNPoint.NumPoints" />.</para></exception><remarks><PARA>Returns the x- and y-coordinates of the "group A" point with the given index. Valid indices range from 0 to NumPoints - 1, inclusive.</PARA></remarks><summary>Gets the X and Y coordinates of the 'group A' point with the given index.  Valid indices range from 0 to NumPoints-1 inclusive.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogNPointToNPoint.GetGroupBPoint(System.Int32,System.Double@,System.Double@)"><param name="index"><PARA>The index of the point.</PARA></param><param name="x"><PARA>The x-axis coordinate of the point.</PARA></param><param name="y"><PARA>The y-axis coordinate of the point.</PARA></param><remarks><PARA>Returns the x- and y-coordinates of the "group B" point with the given index. Valid indices range from 0 to NumPoints - 1, inclusive.</PARA></remarks><exception cref="T:System.NullReferenceException" cgnxHRESULT="E_POINTER"><para><paramref name="x" /> or <paramref name="y" /> is NULL.</para></exception><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="index" /> is less than 0 or greater than or equal to <see cref="P:Cognex.VisionPro.CalibFix.CogNPointToNPoint.NumPoints" />.</para></exception><summary>Gets the X and Y coordinates of the 'group B' point with the given index.  Valid indices range from 0 to NumPoints-1 inclusive.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogNPointToNPoint.AddPointPair(System.Double,System.Double,System.Double,System.Double)"><param name="groupAX"><PARA>The x-coordinate for the "group A" point.</PARA></param><param name="groupAY"><PARA>The y-coordinate for the "group A" point.</PARA></param><param name="groupBX"><PARA>The x-coordinate for the "group B" point.</PARA></param><param name="groupBY"><PARA>The y-coordinate for the "group B" point.</PARA></param><event cref="E:Cognex.VisionPro.CalibFix.CogNPointToNPoint.Changed" cgnxEvent="multiState"><para>
		
		Fires when the value of this property changes. 
	</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_NPointToNPoint_PointSet--><li><see cref="F:Cognex.VisionPro.CalibFix.CogNPointToNPoint.SfNumPoints" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogNPointToNPoint.SfGetGroupAPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogNPointToNPoint.SfGetGroupAPointY" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogNPointToNPoint.SfGetGroupBPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogNPointToNPoint.SfGetGroupBPointY" /></li></ul></event><remarks><PARA>Adds a new point with the specified coordinates to the end of each point set and increases <see cref="P:Cognex.VisionPro.CalibFix.CogNPointToNPoint.NumPoints" /> by one.</PARA><NOTE><see cref="M:Cognex.VisionPro.CalibFix.CogNPointToNPoint.AddPointPair(System.Double,System.Double,System.Double,System.Double)" /> does not affect any of the existing points in the point sets.</NOTE></remarks><summary>Adds a new point to the end of each point set.  NumPoints will be increased by one.</summary></member><member name="M:Cognex.VisionPro.CalibFix.CogNPointToNPoint.DeletePointPair(System.Int32)"><param name="index"><PARA>The index of the point.</PARA></param><summary>Deletes the point at the given index from each point set.  Points with higher indices are shifted to the next lower index, and NumPoints is decreased by one.</summary><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="index" /> is less than 0 or greater than or equal to <see cref="P:Cognex.VisionPro.CalibFix.CogNPointToNPoint.NumPoints" />.</para></exception><remarks><PARA>Deletes the point at the given index from each point set, shifts any points with higher indices to the next lower index, and decreases <see cref="P:Cognex.VisionPro.CalibFix.CogNPointToNPoint.NumPoints" /> by one.</PARA></remarks><event cref="E:Cognex.VisionPro.CalibFix.CogNPointToNPoint.Changed" cgnxEvent="multiState"><para>
		
		Fires when the value of this property changes. 
	</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_NPointToNPoint_PointSet--><li><see cref="F:Cognex.VisionPro.CalibFix.CogNPointToNPoint.SfNumPoints" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogNPointToNPoint.SfGetGroupAPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogNPointToNPoint.SfGetGroupAPointY" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogNPointToNPoint.SfGetGroupBPointX" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogNPointToNPoint.SfGetGroupBPointY" /></li></ul></event></member><member name="M:Cognex.VisionPro.CalibFix.CogNPointToNPoint.ComputeGroupAFromGroupBTransform(System.Double@)"><param name="rmsError"><PARA>The <see cref="u:Framework.CalibrationAndFixturing.Theory.CalibFixtures" cgnxAnchor="rms_error_and_degrees_of_freedom_dofs">root mean squared (RMS) error</see> between the sets of points.</PARA></param><summary>Compute and return a best-fit transformation between 'group A' points and 'group B' points.  The RMS error of the computation can also be obtained.  The returned transform maps points from the 'group B' space to the 'group A' space.</summary><remarks><PARA>Computes and returns a best-fit transformation between "group A" points and "group B" points, given the allowed degrees of freedom. You can obtain the RMS error data for the computation by supplying a non-NULL <paramref name="rmsError" /> variable. The returned transform maps points from the "group B" space to the "group A" space.</PARA></remarks><returns><PARA>A best-fit transform.</PARA></returns><exception cref="T:Cognex.VisionPro.Exceptions.CogCalibFixNPointTooFewPointsException" cgnxHRESULT="E_CogCalibFix_NPointTooFew"><para>There are too few points for the requested DOFs.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogCalibFixNPointUnstableException" cgnxHRESULT="E_CogCalibFix_NPointUnstable"><para>The points are in a configuration that is numerically unstable or ambiguous. For example, all points lie along the x-axis and the DOFs need to measure y-axis scaling.</para></exception></member><member name="E:Cognex.VisionPro.CalibFix.CogNPointToNPoint.Changed"><summary>Occurs when one or more parts of the object's state may have changed.</summary></member><member name="T:Cognex.VisionPro.CalibFix.ICogCalibCheckerboardWarpParams"><remarks><PARA>
		Interface containing the nonlinear warping parameters needed for checkerboard calibration.  It also provides the 
	warping results that are available prior to runtime. The methods and properties in this 
	interface are only used if <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.ComputationMode" />
	is <see cref="T:Cognex.VisionPro.CalibFix.CogCalibFixComputationModeConstants">PerspectiveAndRadialWarp</see>.
</PARA></remarks><summary>Interface containing the nonlinear warping parameters needed for checkerboard calibration.  It also provides the warping results that are available prior to runtime.</summary></member><member name="P:Cognex.VisionPro.CalibFix.ICogCalibCheckerboardWarpParams.OutputImageMask"><remarks><PARA>
Returns the output image mask, if it has been computed and contains any 'Don't Care' pixels.  Otherwise, returns Nothing.  'Don't Care' pixels (value = 0) in this mask identify 
<see cref="u:Framework.CalibrationAndFixturing.Theory.NonlinearCalib" cgnxAnchor="destination_rectangle">unfilled locations</see> 
in the runtime output image.
	</PARA><PARA>
You can use the returned mask to exclude the undefined pixel values from processing by vision tools that 
support masks.
</PARA><NOTE>The returned mask is the same size as the <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboardTool.OutputImage" />, but it does not contain the calibrated coordinate space in its 
coordinate space tree.</NOTE><DEFAULT>Null</DEFAULT></remarks><summary>Returns the output image mask, if it has been computed and contains any 'Don't Care' pixels.  Otherwise, returns Nothing.  'Don't Care' pixels (value = 0) in this mask identify unfilled locations in the runtime output image.</summary></member><member name="P:Cognex.VisionPro.CalibFix.ICogCalibCheckerboardWarpParams.UndistortedCalibrationImageMask"><remarks><PARA>
Returns the undistorted calibration image mask, if it has been computed and contains any 'Don't Care' pixels.  Otherwise, returns Nothing.  'Don't Care' pixels (value = 0) in this mask identify 
<see cref="u:Framework.CalibrationAndFixturing.Theory.NonlinearCalib" cgnxAnchor="destination_rectangle">unfilled locations</see> 
in the undistorted calibration image.
	</PARA><NOTE>The returned mask is the same size as the <see cref="P:Cognex.VisionPro.CalibFix.ICogCalibCheckerboardWarpParams.UndistortedCalibrationImage" />, but its coordinate space tree contains only root space.</NOTE><DEFAULT>Null</DEFAULT></remarks><summary>Returns the undistorted calibration image mask, if it has been computed and contains any 'Don't Care' pixels.  Otherwise, returns Nothing.  'Don't Care' pixels (value = 0) in this mask identify unfilled locations in the undistorted calibration image.</summary></member><member name="P:Cognex.VisionPro.CalibFix.ICogCalibCheckerboardWarpParams.UndistortedCalibrationImage"><remarks><PARA>
Returns the undistorted calibration image, if it has been computed.  Otherwise, returns Nothing.  This image is 
produced by warping the entire calibration image (ignoring the <see cref="P:Cognex.VisionPro.CalibFix.ICogCalibCheckerboardWarpParams.WarpDestinationRectangle" />).
</PARA><PARA>
The tool computes this undistorted calibration image to make it easier to specify the 
<see cref="P:Cognex.VisionPro.CalibFix.ICogCalibCheckerboardWarpParams.WarpDestinationRectangle" />. The undefined pixels in the image are set to 128. You can use the  <see cref="P:Cognex.VisionPro.CalibFix.ICogCalibCheckerboardWarpParams.UndistortedCalibrationImageMask" />
to determine which pixels are undefined.
</PARA><NOTE>The coordinate space tree of this image contains root space only.</NOTE></remarks><summary>Returns the undistorted calibration image, if it has been computed.  Otherwise, returns Nothing.  This image is produced by warping the entire calibration image (ignoring the WarpDestinationRectangle).</summary></member><member name="P:Cognex.VisionPro.CalibFix.ICogCalibCheckerboardWarpParams.WarpRotation"><event cref="E:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Changed" cgnxEvent="singleState"><para>
		
In linear mode, fires when the value of this property changes.
In warping mode, fires when the value of this property changes and  <see cref="u:Framework.CalibrationAndFixturing.Theory.CheckCalibSteps">step 3</see> has not completed. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogCalibCheckerboardWarpParams_WarpRotation--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfWarpRotation" /></li></ul></event><event cref="E:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Changed" cgnxEvent="multiState"><para>
		
In warping mode, fires when the value of this property changes and <see cref="u:Framework.CalibrationAndFixturing.Theory.CheckCalibSteps">step 3</see> has been completed.
If <see cref="u:Framework.CalibrationAndFixturing.Theory.CheckCalibSteps">step 5</see> was completed, the following state flags are affected:
</para><ul><!--FA:cogFA_CalibCheckerboard_ComputeResults--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibrated" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetComputedUncalibratedFromCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetComputedUncalibratedFromRawCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfComputedRMSError" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetInfoStrings" /></li></ul></event><summary>Specifies the rotation, in radians, of the output image.  It is the pixel-space angle from the x-axis of the output image to the x-axis of raw calibrated space.  This property allows you to rotate the image during warping.</summary><remarks><PARA>
Specifies the rotation, in radians, of the output image.  It is the pixel-space angle from the x-axis of the output image to the x-axis of raw calibrated space.  This property allows you to rotate the image during warping.
</PARA><PARA>
Note that by default, the tool always rotates the image during warping so that the x-axis of the 
raw calibrated space is aligned with the x-axis of the warped image.
</PARA><DEFAULT>0.0</DEFAULT></remarks></member><member name="P:Cognex.VisionPro.CalibFix.ICogCalibCheckerboardWarpParams.WarpScaling"><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The new value is &lt;= 0.0.</para></exception><remarks><PARA>
	Specifies an additional scaling factor to be applied during warping.  For example, a value of 2 means that the undistorted image will be approximately twice as high and twice as wide as the input image.
</PARA><DEFAULT>1.0</DEFAULT></remarks><event cref="E:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Changed" cgnxEvent="singleState"><para>
		
In linear mode, fires when the value of this property changes.
In warping mode, fires when the value of this property changes and  <see cref="u:Framework.CalibrationAndFixturing.Theory.CheckCalibSteps">step 3</see> has not completed. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogCalibCheckerboardWarpParams_WarpScaling--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfWarpScaling" /></li></ul></event><event cref="E:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Changed" cgnxEvent="multiState"><para>
		
In warping mode, fires when the value of this property changes and <see cref="u:Framework.CalibrationAndFixturing.Theory.CheckCalibSteps">step 3</see> has been completed.
If <see cref="u:Framework.CalibrationAndFixturing.Theory.CheckCalibSteps">step 5</see> was completed, the following state flags are affected:
</para><ul><!--FA:cogFA_CalibCheckerboard_ComputeResults--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibrated" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetComputedUncalibratedFromCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetComputedUncalibratedFromRawCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfComputedRMSError" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetInfoStrings" /></li></ul></event><summary>Specifies an additional scaling factor to be applied during warping.  For example, a value of 2 means that the undistorted image will be approximately twice as high and twice as wide as the input image.</summary></member><member name="P:Cognex.VisionPro.CalibFix.ICogCalibCheckerboardWarpParams.WarpDestinationRectangle"><event cref="E:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Changed" cgnxEvent="singleState"><para>
		
In linear mode, fires when the value of this property changes.
In warping mode, fires when the value of this property changes and <see cref="u:Framework.CalibrationAndFixturing.Theory.CheckCalibSteps">step 4</see> has not completed. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogCalibCheckerboardWarpParams_WarpDestinationRectangle--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfWarpDestinationRectangle" /></li></ul></event><event cref="E:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Changed" cgnxEvent="multiState"><para>
		
In warping mode, fires when the value of this property changes and <see cref="u:Framework.CalibrationAndFixturing.Theory.CheckCalibSteps">step 4</see> has been completed.
If <see cref="u:Framework.CalibrationAndFixturing.Theory.CheckCalibSteps">step 5</see> was completed, the following state flags are affected:
</para><ul><!--FA:cogFA_CalibCheckerboard_ComputeResults--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibrated" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetComputedUncalibratedFromCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetComputedUncalibratedFromRawCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfComputedRMSError" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetInfoStrings" /></li></ul></event><summary>Rectangle of the undistorted calibration image that specifies what pixels will be present in the warped (runtime) output image.  If the rectangle is Nothing, all the pixels of the undistorted image will be output.  It must be in '.', '@', or '#' space.</summary><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The selected space name of the rectangle was not '.', '@', or '#'.</para></exception><remarks><PARA><see cref="u:Framework.CalibrationAndFixturing.Theory.NonlinearCalib" cgnxAnchor="destination_rectangle">Rectangle</see> 
	of the undistorted calibration image that specifies what pixels will be present in the warped (runtime) output image.  If the rectangle is Nothing, all the pixels of the undistorted image will be output.  It must be in '.', '@', or '#' space.</PARA><PARA>
This rectangle, which is expressed in pixel space of the 
<see cref="P:Cognex.VisionPro.CalibFix.ICogCalibCheckerboardWarpParams.UndistortedCalibrationImage" />, specifies the size 
and position of the run-time <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboardTool.OutputImage" />.
The rectangle you specify is rounded to integer coordinates and its intersection with 
the <see cref="P:Cognex.VisionPro.CalibFix.ICogCalibCheckerboardWarpParams.UndistortedCalibrationImage" /> is computed to produce the final
output image. If this rectangle does not intersect with the <see cref="P:Cognex.VisionPro.CalibFix.ICogCalibCheckerboardWarpParams.UndistortedCalibrationImage" />, <see cref="M:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Calibrate" /> 
returns an error.
</PARA><NOTE>
Changing this rectangle untrains the tool.
</NOTE><DEFAULT>Null</DEFAULT></remarks></member><member name="P:Cognex.VisionPro.CalibFix.ICogCalibCheckerboardWarpParams.WarpMaxErrorInPixels"><event cref="E:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Changed" cgnxEvent="singleState"><para>
		
In linear mode, fires when the value of this property changes.
In warping mode, fires when the value of this property changes and  <see cref="u:Framework.CalibrationAndFixturing.Theory.CheckCalibSteps">step 3</see> has not completed. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogCalibCheckerboardWarpParams_WarpMaxErrorInPixels--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfWarpMaxErrorInPixels" /></li></ul></event><event cref="E:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Changed" cgnxEvent="multiState"><para>
		
In warping mode, fires when the value of this property changes and <see cref="u:Framework.CalibrationAndFixturing.Theory.CheckCalibSteps">step 3</see> has been completed.
If <see cref="u:Framework.CalibrationAndFixturing.Theory.CheckCalibSteps">step 5</see> was completed, the following state flags are affected:
</para><ul><!--FA:cogFA_CalibCheckerboard_ComputeResults--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibrated" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetComputedUncalibratedFromCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetComputedUncalibratedFromRawCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfComputedRMSError" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetInfoStrings" /></li></ul></event><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The new value is &lt;= 0.0.</para></exception><summary>The maximum error allowed during image warping, measured in pixels of the calibration image.  It limits the error between a mathematically perfect warping and the (much faster) one implemented by this object.  Smaller values yield more accurate warping.</summary><remarks><PARA>
The 
<see cref="u:Framework.CalibrationAndFixturing.Theory.NonlinearCalib" cgnxAnchor="maximum_warping_error">maximum error</see> 
allowed during image warping, measured in pixels of the calibration image.  It limits the error between a mathematically perfect warping and the (much faster) one implemented by this object.  Smaller values yield more accurate warping.
</PARA><DEFAULT>0.01</DEFAULT></remarks></member><member name="M:Cognex.VisionPro.CalibFix.ICogCalibCheckerboardWarpParams.GetOutputImageRootFromCalibratedTransform"><returns><PARA>The returned transformation.</PARA></returns><summary>Returns the 2-D linear transformation that maps points from calibrated space into the root (@) space of the output image, if it has been computed.  Otherwise, returns Nothing.  The transform is computed by calling Calibrate.</summary><remarks><PARA>Returns the 2D linear transformation that maps points from calibrated space into the root (@) space of the output image, if it has been computed.  Otherwise, returns Nothing.  The transform is computed by calling 
<see cref="M:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Calibrate" />.</PARA><PARA>
The transformation returned by this function is added to the coordinate space tree of the output tree by the 
Checkerboard Calibration tool at run time. The returned transformation can be thought of as the linear component of 
the overall calibration transformation. The nonlinear part, which is not added to the coordinate space tree, can be 
obtained by calling <see cref="M:Cognex.VisionPro.CalibFix.ICogCalibCheckerboardWarpParams.GetInputPixelFromOutputPixelTransform(Cognex.VisionPro.ICogImage)" />.
</PARA><PARA>
	This function returns Nothing if <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Calibrated" /> is false or if 
<see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.ComputationMode" /> is 
<see cref="T:Cognex.VisionPro.CalibFix.CogCalibFixComputationModeConstants">Linear</see>.
</PARA></remarks></member><member name="M:Cognex.VisionPro.CalibFix.ICogCalibCheckerboardWarpParams.GetInputPixelFromOutputPixelTransform(Cognex.VisionPro.ICogImage)"><param name="inputImage"><PARA>The input image from which the transformation is computed.</PARA></param><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The transform between the selected space of <paramref name="inputImage" /> and its pixels differs by more than a 
<see cref="u:Framework.CalibrationAndFixturing.Theory.NonlinearCalib" cgnxAnchor="wholepixel_image_shift">whole-pixel shift</see> 
from the similar transform contained in the calibration image.
    </para></exception><returns><PARA>The returned transformation.</PARA></returns><remarks><PARA>
Returns a 2D transformation that maps points from the pixel space of the warped output image produced by 
running this tool to the pixel space of an input image that you supply. 
	</PARA><PARA>
Keep in mind that when the Checkerboard Calibration tool produces a warped image at run time, the newly warped image 
does not contain a transformation that maps between the warped and unwarped pixels. This function is the only way 
of obtaining this transformation.
</PARA><PARA>
	This function returns Nothing if <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Calibrated" /> is false or if 
	<see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.ComputationMode" /> is
	<see cref="T:Cognex.VisionPro.CalibFix.CogCalibFixComputationModeConstants">Linear</see>.
</PARA></remarks><summary>Returns a 2-D warping transform that maps points from pixel space of an output image - one created by calling Execute with the current params - into pixel space of the given input image.  Returns Nothing if this object is uncalibrated or in linear mode.</summary></member><member name="T:Cognex.VisionPro.CalibFix.CogCalibSpaceToOutputConstants"><summary>Enumeration that specifies which coordinate space will be selected in the output image of a calibration operation.</summary><remarks><PARA>Enumeration that specifies which coordinate space will be selected in the output image of a calibration operation.</PARA></remarks></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibSpaceToOutputConstants.CalibratedSpace"><remarks><PARA>The selected space of the output image will be a fully-qualified copy of the <see cref="u:Framework.CalibrationAndFixturing.Theory.CalibFixtures" cgnxAnchor="uncalibrated_raw_calibrated_and_calibrated_coord">calibrated coordinate space</see> name.</PARA></remarks><summary>The selected space of the output image will be a fully-qualified copy of the calibrated space name.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibSpaceToOutputConstants.UncalibratedSpace"><summary>The selected space of the output image will be a fully-qualified copy of the uncalibrated space name.  Note: The uncalibrated space is the selected space of the input image.</summary><remarks><PARA>The selected space of the output image will be a fully-qualified copy of the <see cref="u:Framework.CalibrationAndFixturing.Theory.CalibFixtures" cgnxAnchor="uncalibrated_raw_calibrated_and_calibrated_coord">uncalibrated coordinate space</see> name. The uncalibrated coordinate space is the selected space of the input image.</PARA></remarks></member><member name="T:Cognex.VisionPro.CalibFix.CogFixtureSpaceToOutputConstants"><remarks><PARA>Enumeration that specifies which coordinate space will be selected in the output image of a fixturing operation.</PARA></remarks><summary>Enumeration that specifies which coordinate space will be selected in the output image of a fixturing operation.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureSpaceToOutputConstants.FixturedSpace"><summary>The selected space of the output image will be a fully-qualified copy of the fixtured space name.</summary><remarks><PARA>The selected space of the output image will be a fully-qualified copy of the fixtured space name.</PARA></remarks></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureSpaceToOutputConstants.UnfixturedSpace"><summary>The selected space of the output image will be a fully-qualified copy of the unfixtured space name.  Note: The unfixtured space is the selected space of the input image.</summary><remarks><PARA>The selected space of the output image will be a fully-qualified copy of the unfixtured space name. The unfixtured coordinate space is the selected space of the input image.</PARA></remarks></member><member name="T:Cognex.VisionPro.CalibFix.CogFixturedSpaceNameDuplicateHandlingConstants"><summary>Enumeration that specifies how a fixture tool should respond when attempting to add a space whose name already exists in the coordinate space tree.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogFixturedSpaceNameDuplicateHandlingConstants.Compatibility"><summary>Duplicate space will be silently overwritten.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogFixturedSpaceNameDuplicateHandlingConstants.Enhanced"><summary>Duplicate space name will cause an error unless it is coming from the same fixture tool.</summary></member><member name="T:Cognex.VisionPro.CalibFix.CogFixtureActionConstants"><summary>Enumeration that specifies what action a fixture operator is to perform.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureActionConstants.UseExistingFixture"><summary>Set the output image selected space name.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureActionConstants.EstablishNewFixture"><summary>Add the fixtured space and set the output image selected space name.</summary></member><member name="T:Cognex.VisionPro.CalibFix.CogCalibFixComputationModeConstants"><remarks><PARA>Enumeration of modes for computing calibration and fixturing transformations.  Notice that N-Point calibration and fixturing support only linear computations in this release.</PARA></remarks><summary>Enumeration of modes for computing calibration and fixturing transformations.  Notice that N-Point calibration and fixturing support only linear computations in this release.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibFixComputationModeConstants.Linear"><summary>The calibration or fixturing computation will generate a linear transformation between coordinate spaces.</summary><remarks><PARA>Determine the best-fit transformation between two sets of points using linear computations.</PARA></remarks></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibFixComputationModeConstants.PerspectiveAndRadialWarp"><remarks><PARA>The calibration or fixturing computation will generate a nonlinear transformation between coordinate spaces.  The transformation will be used to warp away perspective and radial distortions.</PARA></remarks><summary>The calibration or fixturing computation will generate a nonlinear transformation between coordinate spaces.  The transformation will be used to warp away perspective and radial distortions.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibFixComputationModeConstants.LinescanWarp"><summary>The calibration or fixturing computation will generate a nonlinear transformation between coordinate spaces suitable for use with a linescan camera.  The transformation will be used to warp away perspective and radial distortions.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibFixComputationModeConstants.Linescan2DWarp"><summary>The calibration or fixturing computation will generate a nonlinar transformation between coordinate spaces suitable for use with a linescan camera and a motion stage that is tilted with respect to the direction of motion. The transformation will be used to warp away perspective and radial distortions.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibFixComputationModeConstants.SineTanLawProjectionWarp"><summary>The calibration or fixturing computation will generate a nonlinear transformation between coordinate spaces. This transformation will incorporate the SineTanLawProjection distortion model.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibFixComputationModeConstants.ThreeParamRadialWarp"><summary>The calibration or fixturing computation will generate a nonlinear transformation between coordinate spaces. This transformation will incorporate the ThreeParamRadial distortion model.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibFixComputationModeConstants.NoDistortionWarp"><summary>The calibration or fixturing computation will generate a nonlinear transformation between coordinate spaces. This transformation will incorporate the NoDistortion distortion model.</summary></member><member name="T:Cognex.VisionPro.CalibFix.CogFixtureCurrentRecordConstants"><summary>Enumeration of data that can be provided in the Tool's CurrentRecord.</summary><remarks><PARA>
    Use these constants with
<see cref="P:Cognex.VisionPro.CalibFix.CogFixtureTool.CurrentRecordEnable" /> to specify the 
<!--TAGFIX: 0 nodes matched the following tag --><see cref="u:Programming.Tools.Theory.ToolRecords">tool records</see> that the
CogFixture Tool
generates when you call
<see cref="M:Cognex.VisionPro.ICogTool.CreateCurrentRecord" />.
</PARA><PARA>
See <see cref="u:Programming.Tools.Theory.RecordKeys" cgnxAnchor="cogfixturetool_record_keys">About Record Keys</see>  for a list of the record keys that the tool uses.
</PARA></remarks></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureCurrentRecordConstants.None"><remarks><PARA>Do not include any data in the CurrentRecord.</PARA></remarks><summary>Do not include any data in the CurrentRecord.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureCurrentRecordConstants.InputImage"><summary>Include the input image in the CurrentRecord.</summary><remarks><PARA>Include the input image in the CurrentRecord.</PARA></remarks></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureCurrentRecordConstants.UnfixturedAxes"><remarks><PARA>Include the noninteractive coordinate axes that represent unfixtured space in the CurrentRecord.</PARA></remarks><summary>Include the (non-interactive) coordinate axes that represent unfixtured space in the CurrentRecord.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureCurrentRecordConstants.FixturedAxes"><summary>Include the (interactive) coordinate axes that represent fixtured space in the CurrentRecord.</summary><remarks><PARA>Include the interactive coordinate axes that represent fixtured space in the CurrentRecord. Manipulating the fixtured axes changes the translation and rotation components of the UnfixturedFromFixturedTransform.</PARA></remarks></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureCurrentRecordConstants.All"><remarks><PARA>Include all data in the CurrentRecord.</PARA></remarks><summary>Include all data in the CurrentRecord.</summary></member><member name="T:Cognex.VisionPro.CalibFix.CogFixtureLastRunRecordDiagConstants"><summary>Enumeration of diagnostic data that can be provided in the Tool's LastRunRecord.</summary><remarks><PARA>
    Use these constants with
<see cref="P:Cognex.VisionPro.CalibFix.CogFixtureTool.LastRunRecordDiagEnable" /> to specify the 
diagnostic
<!--TAGFIX: 0 nodes matched the following tag --><see cref="u:Programming.Tools.Theory.ToolRecords">tool records</see> that the
CogFixture Tool
generates when you call
<see cref="M:Cognex.VisionPro.ICogTool.CreateLastRunRecord" />.
</PARA><PARA>
See <see cref="u:Programming.Tools.Theory.RecordKeys" cgnxAnchor="cogfixturetool_record_keys">About Record Keys</see>  for a list of the record keys that the tool uses.
</PARA></remarks></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureLastRunRecordDiagConstants.None"><remarks><PARA>Do not include any diagnostic data in the LastRunRecord.</PARA></remarks><summary>Do not include any diagnostic data in the LastRunRecord.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureLastRunRecordDiagConstants.InputImageByReference"><summary>Include a reference to the input image in the LastRunRecord.</summary><remarks><PARA>Include a reference to the input image in the LastRunRecord.</PARA></remarks></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureLastRunRecordDiagConstants.UnfixturedAxes"><remarks><PARA>Include the coordinate axes that represent unfixtured space in the LastRunRecord.</PARA></remarks><summary>Include the coordinate axes that represent unfixtured space in the LastRunRecord.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureLastRunRecordDiagConstants.FixturedAxes"><summary>Include the coordinate axes that represent fixtured space in the LastRunRecord.</summary><remarks><PARA>Include the coordinate axes that represent fixtured space in the LastRunRecord. You cannot modify these fixtured coordinate axes. When enabled, the fixtured axes are displayed on both the input and output images for the tool's last run.</PARA></remarks></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureLastRunRecordDiagConstants.All"><remarks><PARA>Include all diagnostic data in the LastRunRecord.</PARA></remarks><summary>Include all diagnostic data in the LastRunRecord.</summary></member><member name="T:Cognex.VisionPro.CalibFix.CogFixtureLastRunRecordConstants"><summary>Enumeration of Non-Diagnostic data that can be provided in the Tool's LastRunRecord.</summary><remarks><PARA>
    Use these constants with
<see cref="P:Cognex.VisionPro.CalibFix.CogFixtureTool.LastRunRecordEnable" /> to specify the 
<!--TAGFIX: 0 nodes matched the following tag --><see cref="u:Programming.Tools.Theory.ToolRecords">tool records</see> that the
CogFixture Tool
generates when you call
<see cref="M:Cognex.VisionPro.ICogTool.CreateLastRunRecord" />.
</PARA><PARA>
See <see cref="u:Programming.Tools.Theory.RecordKeys" cgnxAnchor="cogfixturetool_record_keys">About Record Keys</see>  for a list of the record keys that the tool uses.
</PARA></remarks></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureLastRunRecordConstants.None"><remarks><PARA>Do not include any of the nondiagnostic data in the LastRunRecord.</PARA></remarks><summary>Do not include any of the non-diagnostic data in the LastRunRecord.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureLastRunRecordConstants.OutputImage"><remarks><PARA>Include the output image in the LastRunRecord.</PARA></remarks><summary>Include the output image in the LastRunRecord.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureLastRunRecordConstants.All"><remarks><PARA>Include all nondiagnostic data in the LastRunRecord.</PARA></remarks><summary>Include all non-diagnostic data in the LastRunRecord.</summary></member><member name="T:Cognex.VisionPro.CalibFix.CogNPointToNPointDOFConstants"><remarks><PARA>Enumeration that specifies which degrees of freedom (DOFs) will be computed during the N-point-to-N-point fitting operation.</PARA></remarks><summary>Enumeration that specifies which degrees of freedom will be computed during the N point to N point fitting operation.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogNPointToNPointDOFConstants.None"><summary>The transformation returned by the N point to N point fitting will be the identity transform.  It will have unity scale and aspect.  It will contain no rotation, skew, or translation.  No points are required for this DOF computation.</summary><remarks><PARA>The transformation returned by the N-point-to-N-point fitting will be the identity transform. It will have unity scale and aspect, and will not contain rotation, skew, or translation. No points are required for this DOF computation.</PARA></remarks></member><member name="F:Cognex.VisionPro.CalibFix.CogNPointToNPointDOFConstants.TranslationX"><remarks><PARA>The transformation computed by the N-point-to-N-point fitting will contain only translation in the x-axis direction. At least one pair of points is required for this DOF computation.</PARA></remarks><summary>The transformation computed by the N point to N point fitting will contain only translation in the X direction.  At least one pair of points is required for this DOF computation.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogNPointToNPointDOFConstants.TranslationY"><remarks><PARA>The transformation computed by the N-point-to-N-point fitting will contain only translation in the y-axis direction. At least one pair of points is required for this DOF computation.</PARA></remarks><summary>The transformation computed by the N point to N point fitting will contain only translation in the Y direction.  At least one pair of points is required for this DOF computation.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogNPointToNPointDOFConstants.Translation"><summary>The transformation computed by the N point to N point fitting will contain only translation.  At least one pair of points is required for this DOF computation.</summary><remarks><PARA>The transformation computed by the N-point-to-N-point fitting will contain only translation. At least one pair of points is required for this DOF computation.</PARA></remarks></member><member name="F:Cognex.VisionPro.CalibFix.CogNPointToNPointDOFConstants.RotationAndTranslation"><summary>The transformation computed by the N point to N point fitting will contain only rigid rotation and translation.  At least two pairs of points are required for this DOF computation.</summary><remarks><PARA>The transformation computed by the N-point-to-N-point fitting will contain only rigid rotation and translation. At least two pairs of points are required for this DOF computation.</PARA></remarks></member><member name="F:Cognex.VisionPro.CalibFix.CogNPointToNPointDOFConstants.ScalingRotationAndTranslation"><remarks><PARA>The transformation computed by the N-point-to-N-point fitting will contain uniform scaling, rigid rotation, and translation. At least two pairs of points are required for this DOF computation.</PARA></remarks><summary>The transformation computed by the N point to N point fitting will contain uniform scaling, rigid rotation, and translation.  At least two pairs of points are required for this DOF computation.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogNPointToNPointDOFConstants.ScalingAspectRotationAndTranslation"><remarks><PARA>The transformation computed by the N-point-to-N-point fitting will contain nonuniform scaling, rigid rotation, and translation. At least three pairs of points are required for this DOF computation.</PARA></remarks><summary>The transformation computed by the N point to N point fitting will contain nonuniform scaling, rigid rotation, and translation.  At least three pairs of points are required for this DOF computation.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogNPointToNPointDOFConstants.ScalingAspectRotationSkewAndTranslation"><summary>The transformation computed by the N point to N point fitting will contain nonuniform scaling, skewed rotation, and translation.  At least three pairs of points are required for this DOF computation.</summary><remarks><PARA>The transformation computed by the N-point-to-N-point fitting will contain nonuniform scaling, skewed rotation, and translation. At least three pairs of points are required for this DOF computation.</PARA></remarks></member><member name="T:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointCurrentRecordConstants"><summary>Enumeration of data that can be provided in the Tool's CurrentRecord.</summary><remarks><PARA>
    Use these constants with
<see cref="P:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointTool.CurrentRecordEnable" /> to specify the 
<!--TAGFIX: 0 nodes matched the following tag --><see cref="u:Programming.Tools.Theory.ToolRecords">tool records</see> that the
CogFixtureNPointToNPoint Tool
generates when you call
<see cref="M:Cognex.VisionPro.ICogTool.CreateCurrentRecord" />.
</PARA><PARA>
See <see cref="u:Programming.Tools.Theory.RecordKeys" cgnxAnchor="cogfixturenpointtonpointtool_record_keys">About Record Keys</see>  for a list of the record keys that the tool uses.
</PARA></remarks></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointCurrentRecordConstants.None"><remarks><PARA>Do not include any data in the CurrentRecord.</PARA></remarks><summary>Do not include any data in the CurrentRecord.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointCurrentRecordConstants.InputImage"><remarks><PARA>Include the input image in the CurrentRecord.</PARA></remarks><summary>Include the input image in the CurrentRecord.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointCurrentRecordConstants.UnfixturedAxes"><summary>Include the (non-interactive) coordinate axes that represent unfixtured space in the CurrentRecord.</summary><remarks><PARA>Include the noninteractive coordinate axes that represent unfixtured space in the CurrentRecord.</PARA></remarks></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointCurrentRecordConstants.UnfixturedPoints"><remarks><PARA>Include the unfixtured points in the CurrentRecord.</PARA></remarks><summary>Include the unfixtured points in the CurrentRecord.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointCurrentRecordConstants.RefImage"><remarks><PARA>Include the <see cref="P:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointTool.ReferenceImage" />  in the CurrentRecord. The reference image is visible only if this bit is on and <see cref="P:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointTool.ReferenceImageEnabled" /> is True.</PARA></remarks><summary>Include the reference image in the CurrentRecord.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointCurrentRecordConstants.RawFixturedAxes"><remarks><PARA>Include the noninteractive coordinate axes that represent raw fixtured space in the CurrentRecord.</PARA></remarks><summary>Include the (non-interactive) coordinate axes that represent raw fixtured space in the CurrentRecord.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointCurrentRecordConstants.RawFixturedPoints"><remarks><PARA>Include the raw fixtured points in the CurrentRecord.</PARA></remarks><summary>Include the raw fixtured points in the CurrentRecord.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointCurrentRecordConstants.FixturedAxes"><remarks><PARA>Include the interactive coordinate axes that represent, and allow adjustment of, the fixtured space in the CurrentRecord. Manipulating the fixtured axes changes the translation and rotation components of the RawFixturedFromFixturedTransform.</PARA></remarks><summary>Include the (interactive) coordinate axes that represent, and allow adjustment of, the fixtured space in the CurrentRecord.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointCurrentRecordConstants.All"><summary>Include all data in the CurrentRecord.</summary><remarks><PARA>Include all data in the CurrentRecord.</PARA></remarks></member><member name="T:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointLastRunRecordDiagConstants"><summary>Enumeration of diagnostic data that can be provided in the Tool's LastRunRecord.</summary><remarks><PARA>
    Use these constants with
<see cref="P:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointTool.LastRunRecordDiagEnable" /> to specify the 
diagnostic
<!--TAGFIX: 0 nodes matched the following tag --><see cref="u:Programming.Tools.Theory.ToolRecords">tool records</see> that the
CogFixtureNPointToNPoint Tool
generates when you call
<see cref="M:Cognex.VisionPro.ICogTool.CreateLastRunRecord" />.
</PARA><PARA>
See <see cref="u:Programming.Tools.Theory.RecordKeys" cgnxAnchor="cogfixturenpointtonpointtool_record_keys">About Record Keys</see>  for a list of the record keys that the tool uses.
</PARA></remarks></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointLastRunRecordDiagConstants.None"><summary>Do not include any diagnostic data in the LastRunRecord.</summary><remarks><PARA>Do not include any diagnostic data in the LastRunRecord.</PARA></remarks></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointLastRunRecordDiagConstants.InputImageByReference"><summary>Include a reference to the input image in the LastRunRecord.</summary><remarks><PARA>Include a reference to the input image in the LastRunRecord.</PARA></remarks></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointLastRunRecordDiagConstants.UnfixturedAxes"><summary>Include the coordinate axes that represent unfixtured space in the LastRunRecord.</summary><remarks><PARA>Include the coordinate axes that represent unfixtured space in the LastRunRecord.</PARA></remarks></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointLastRunRecordDiagConstants.FixturedAxes"><summary>Include the coordinate axes that represent fixtured space in the LastRunRecord.</summary><remarks><PARA>Include the coordinate axes that represent fixtured space in the LastRunRecord. You cannot modify these fixtured coordinate axes. When enabled, the fixtured axes are displayed on both the input and output images for the tool's last run.</PARA></remarks></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointLastRunRecordDiagConstants.UnfixturedPoints"><remarks><PARA>Include the unfixtured points in the LastRunRecord.</PARA></remarks><summary>Include the unfixtured points in the LastRunRecord.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointLastRunRecordDiagConstants.RawFixturedPoints"><remarks><PARA>Include the raw fixtured points in the LastRunRecord.</PARA></remarks><summary>Include the raw fixtured points in the LastRunRecord.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointLastRunRecordDiagConstants.RawFixturedAxes"><summary>Include the coordinate axes that represent raw fixtured space in the LastRunRecord.</summary><remarks><PARA>Include the coordinate axes that represent raw fixtured space in the LastRunRecord.</PARA></remarks></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointLastRunRecordDiagConstants.All"><summary>Include all diagnostic data in the LastRunRecord.</summary><remarks><PARA>Include all diagnostic data in the LastRunRecord.</PARA></remarks></member><member name="T:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointLastRunRecordConstants"><remarks><PARA>
    Use these constants with
<see cref="P:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointTool.LastRunRecordEnable" /> to specify the 
<!--TAGFIX: 0 nodes matched the following tag --><see cref="u:Programming.Tools.Theory.ToolRecords">tool records</see> that the
CogFixtureNPointToNPoint Tool
generates when you call
<see cref="M:Cognex.VisionPro.ICogTool.CreateLastRunRecord" />.
</PARA><PARA>
See <see cref="u:Programming.Tools.Theory.RecordKeys" cgnxAnchor="cogfixturenpointtonpointtool_record_keys">About Record Keys</see>  for a list of the record keys that the tool uses.
</PARA></remarks><summary>Enumeration of Non-Diagnostic data that can be provided in the Tool's LastRunRecord.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointLastRunRecordConstants.None"><summary>Do not include any of the non-diagnostic data in the LastRunRecord.</summary><remarks><PARA>Do not include any of the nondiagnostic data in the LastRunRecord.</PARA></remarks></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointLastRunRecordConstants.OutputImage"><summary>Include the output image in the LastRunRecord.</summary><remarks><PARA>Include the output image in the LastRunRecord.</PARA></remarks></member><member name="F:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPointLastRunRecordConstants.All"><summary>Include all non-diagnostic data in the LastRunRecord.</summary><remarks><PARA>Include all nondiagnostic data in the LastRunRecord.</PARA></remarks></member><member name="T:Cognex.VisionPro.CalibFix.CogCalibNPointAdjustmentSpaceConstants"><remarks><PARA>Enumeration that specifies whether the parameters for adjusting the calibrated space are expressed in uncalibrated space or in raw calibrated space.</PARA></remarks><summary>Enumeration that specifies whether the parameters for adjusting the calibrated space are expressed in uncalibrated space, or in raw calibrated space.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibNPointAdjustmentSpaceConstants.RawCalibrated"><remarks><PARA>The adjustment parameters are expressed in the <see cref="u:Framework.CalibrationAndFixturing.Theory.CalibFixtures" cgnxAnchor="uncalibrated_raw_calibrated_and_calibrated_coord">raw calibrated coordinate space</see>. Raw calibrated space is the coordinate space in which the unadjusted calibration points are given.</PARA></remarks><summary>The adjustment parameters are expressed in the raw calibrated coordinate space.  Note: the raw calibrated space is the one in which the (unadjusted) calibration points are given.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibNPointAdjustmentSpaceConstants.Uncalibrated"><remarks><PARA>The adjustment parameters are expressed in the <see cref="u:Framework.CalibrationAndFixturing.Theory.CalibFixtures" cgnxAnchor="uncalibrated_raw_calibrated_and_calibrated_coord">uncalibrated coordinate space</see>. Uncalibrated space is the selected coordinate space of the input image.</PARA></remarks><summary>The adjustment parameters are expressed in the uncalibrated coordinate space.  Note: the uncalibrated space is the selected space of the input image.</summary></member><member name="T:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointCurrentRecordConstants"><summary>Enumeration of data that can be provided in the Tool's CurrentRecord.</summary><remarks><PARA>
    Use these constants with
<see cref="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointTool.CurrentRecordEnable" /> to specify the 
<!--TAGFIX: 0 nodes matched the following tag --><see cref="u:Programming.Tools.Theory.ToolRecords">tool records</see> that the
CogCalibNPointToNPoint Tool
generates when you call
<see cref="M:Cognex.VisionPro.ICogTool.CreateCurrentRecord" />.
</PARA><PARA>
See <see cref="u:Programming.Tools.Theory.RecordKeys" cgnxAnchor="cogcalibnpointtonpointtool_record_keys">About Record Keys</see>  for a list of the record keys that the tool uses.
</PARA></remarks></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointCurrentRecordConstants.None"><remarks><PARA>Do not include any data in the CurrentRecord.</PARA></remarks><summary>Do not include any data in the CurrentRecord.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointCurrentRecordConstants.InputImage"><remarks><PARA>Include the input image in the CurrentRecord.</PARA></remarks><summary>Include the input image in the CurrentRecord.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointCurrentRecordConstants.UncalibratedAxes"><summary>Include the (non-interactive) coordinate axes that represent uncalibrated space in the CurrentRecord.</summary><remarks><PARA>Include the noninteractive coordinate axes that represent uncalibrated space in the CurrentRecord.</PARA></remarks></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointCurrentRecordConstants.CalibratedAxes"><remarks><PARA>If calibrated, include the noninteractive coordinate axes that represent calibrated space in the CurrentRecord.</PARA></remarks><summary>If calibrated, include the (non-interactive) coordinate axes that represent calibrated space in the CurrentRecord.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointCurrentRecordConstants.CalibrationImage"><summary>Include the calibration image in the CurrentRecord.</summary><remarks><PARA>Include the calibration image in the CurrentRecord.</PARA></remarks></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointCurrentRecordConstants.CalUncalibratedAxes"><remarks><PARA>Include the noninteractive coordinate axes that represent uncalibrated space of the calibration image in the CurrentRecord.</PARA></remarks><summary>Include the (non-interactive) coordinate axes that represent uncalibrated space of the calibration image in the CurrentRecord.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointCurrentRecordConstants.CalUncalibratedPoints"><remarks><PARA>Include the uncalibrated points in the CurrentRecord.</PARA></remarks><summary>Include the uncalibrated points in the CurrentRecord.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointCurrentRecordConstants.CalCalibratedAxes"><remarks><PARA>Include in the CurrentRecord the interactive graphic that represents, and allows adjustment of, the axes of the calibrated space.</PARA></remarks><summary>Include the interactive graphic that that represents, and allows adjustment of, the axes of calibrated space in the CurrentRecord.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointCurrentRecordConstants.CalRawCalibratedAxes"><summary>Include the (non-interactive) coordinate axes that represent raw calibrated space in the CurrentRecord.</summary><remarks><PARA>Include the noninteractive coordinate axes that represent raw calibrated space in the CurrentRecord.</PARA></remarks></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointCurrentRecordConstants.CalRawCalibratedPoints"><remarks><PARA>Include the raw calibrated points in the CurrentRecord.</PARA></remarks><summary>Include the raw calibrated points in the CurrentRecord.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointCurrentRecordConstants.All"><remarks><PARA>Include all data in the CurrentRecord.</PARA></remarks><summary>Include all data in the CurrentRecord.</summary></member><member name="T:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointLastRunRecordDiagConstants"><summary>Enumeration of diagnostic data that can be provided in the Tool's LastRunRecord.</summary><remarks><PARA>
    Use these constants with
<see cref="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointTool.LastRunRecordDiagEnable" /> to specify the 
diagnostic
<!--TAGFIX: 0 nodes matched the following tag --><see cref="u:Programming.Tools.Theory.ToolRecords">tool records</see> that the
CogCalibNPointToNPoint Tool
generates when you call
<see cref="M:Cognex.VisionPro.ICogTool.CreateLastRunRecord" />.
</PARA><PARA>
See <see cref="u:Programming.Tools.Theory.RecordKeys" cgnxAnchor="cogcalibnpointtonpointtool_record_keys">About Record Keys</see>  for a list of the record keys that the tool uses.
</PARA></remarks></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointLastRunRecordDiagConstants.None"><summary>Do not include any diagnostic data in the LastRunRecord.</summary><remarks><PARA>Do not include any diagnostic data in the LastRunRecord.</PARA></remarks></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointLastRunRecordDiagConstants.InputImageByReference"><remarks><PARA>Include a reference to the input image in the LastRunRecord.</PARA></remarks><summary>Include a reference to the input image in the LastRunRecord.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointLastRunRecordDiagConstants.UncalibratedAxes"><remarks><PARA>Include the coordinate axes that represent uncalibrated space in the LastRunRecord.</PARA></remarks><summary>Include the coordinate axes that represent uncalibrated space in the LastRunRecord.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointLastRunRecordDiagConstants.CalibratedAxes"><remarks><PARA>Include the coordinate axes that represent calibrated space in the LastRunRecord.</PARA></remarks><summary>Include the coordinate axes that represent calibrated space in the LastRunRecord.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointLastRunRecordDiagConstants.All"><summary>Include all diagnostic data in the LastRunRecord.</summary><remarks><PARA>Include all diagnostic data in the LastRunRecord.</PARA></remarks></member><member name="T:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointLastRunRecordConstants"><summary>Enumeration of Non-Diagnostic data that can be provided in the Tool's LastRunRecord.</summary><remarks><PARA>
    Use these constants with
<see cref="P:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointTool.LastRunRecordEnable" /> to specify the 
<!--TAGFIX: 0 nodes matched the following tag --><see cref="u:Programming.Tools.Theory.ToolRecords">tool records</see> that the
CogCalibNPointToNPoint Tool
generates when you call
<see cref="M:Cognex.VisionPro.ICogTool.CreateLastRunRecord" />.
</PARA><PARA>
See <see cref="u:Programming.Tools.Theory.RecordKeys" cgnxAnchor="cogcalibnpointtonpointtool_record_keys">About Record Keys</see>  for a list of the record keys that the tool uses.
</PARA></remarks></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointLastRunRecordConstants.None"><remarks><PARA>Do not include any of the nondiagnostic data in the LastRunRecord.</PARA></remarks><summary>Do not include any of the non-diagnostic data in the LastRunRecord.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointLastRunRecordConstants.OutputImage"><remarks><PARA>Include the output image in the LastRunRecord.</PARA></remarks><summary>Include the output image in the LastRunRecord.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointLastRunRecordConstants.All"><summary>Include all non-diagnostic data in the LastRunRecord.</summary><remarks><PARA>Include all nondiagnostic data in the LastRunRecord.</PARA></remarks></member><member name="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardDOFConstants"><summary>Enumeration that specifies which degrees of freedom will be computed during checkerboard calibration.  These enumeration values are applicable only if the computation mode is linear.</summary><remarks><PARA>
Enumeration that specifies which degrees of freedom will be computed during checkerboard calibration.  These enumeration values are applicable only if <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.ComputationMode" /> is
<see cref="T:Cognex.VisionPro.CalibFix.CogCalibFixComputationModeConstants">Linear</see>.
</PARA></remarks></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardDOFConstants.None"><remarks><PARA>The transformation returned by the calibration will be the identity transform.  It will have unity scale and aspect.  It will contain no rotation, skew, or translation.  No image of the calibration plate is required for this DOF computation.</PARA></remarks><summary>The transformation returned by the calibration will be the identity transform.  It will have unity scale and aspect.  It will contain no rotation, skew, or translation.  No image of the calibration plate is required for this DOF computation.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardDOFConstants.TranslationX"><remarks><PARA>The transformation computed by the calibration will contain only translation in the X direction.</PARA></remarks><summary>The transformation computed by the calibration will contain only translation in the X direction.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardDOFConstants.TranslationY"><summary>The transformation computed by the calibration will contain only translation in the Y direction.</summary><remarks><PARA>The transformation computed by the calibration will contain only translation in the Y direction.</PARA></remarks></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardDOFConstants.Translation"><remarks><PARA>The transformation computed by the calibration will contain only translation.</PARA></remarks><summary>The transformation computed by the calibration will contain only translation.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardDOFConstants.RotationAndTranslation"><remarks><PARA>The transformation computed by the calibration will contain only rigid rotation and translation.</PARA></remarks><summary>The transformation computed by the calibration will contain only rigid rotation and translation.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardDOFConstants.ScalingRotationAndTranslation"><remarks><PARA>The transformation computed by the calibration will contain uniform scaling, rigid rotation, and translation.</PARA></remarks><summary>The transformation computed by the calibration will contain uniform scaling, rigid rotation, and translation.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardDOFConstants.ScalingAspectRotationAndTranslation"><remarks><PARA>The transformation computed by the calibration will contain nonuniform scaling, rigid rotation, and translation.</PARA></remarks><summary>The transformation computed by the calibration will contain nonuniform scaling, rigid rotation, and translation.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardDOFConstants.ScalingAspectRotationSkewAndTranslation"><remarks><PARA>The transformation computed by the calibration will contain nonuniform scaling, skewed rotation, and translation.</PARA></remarks><summary>The transformation computed by the calibration will contain nonuniform scaling, skewed rotation, and translation.</summary></member><member name="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardFiducialConstants"><remarks><PARA>
	Enumeration that specifies what style of 
	<see cref="u:Framework.CalibrationAndFixturing.Theory.CalibPlates" cgnxAnchor="fiducial_mark">fiducial mark</see> 
	is present on the calibration plate.
		</PARA></remarks><summary>Enumeration that specifies what style of fiducial mark is present on the calibration plate.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardFiducialConstants.None"><remarks><PARA>The calibration plate has no fiducial mark.</PARA></remarks><summary>The calibration plate has no fiducial mark.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardFiducialConstants.StandardRectangles"><summary>The calibration plate has the Cognex standard fiducial mark: two rectangles of different lengths arranged in an 'L' shape.</summary><remarks><PARA>The calibration plate has the Cognex standard 
	<see cref="u:Framework.CalibrationAndFixturing.Theory.CalibPlates" cgnxAnchor="fiducial_mark">fiducial mark</see>: two rectangles of different lengths arranged in an 'L' shape.</PARA></remarks></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardFiducialConstants.DotGridAxes"><summary>The calibration plate has a grid of dots with the axes indicated by dots placed more closely together and identified with a spacing mark.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardFiducialConstants.DataMatrix"><summary>The calibration plate has DataMatrix fiducial marks.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardFiducialConstants.DataMatrixWithGridPitch"><summary>The calibration plate has DataMatrix fiducial marks that incorporate specification of the grid pitch.</summary></member><member name="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardFeatureFinderConstants"><summary>Enumeration that specifies how features on the calibration plate are found.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardFeatureFinderConstants.Checkerboard"><summary>The standard checkerboard feature finding algorithm will be used.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardFeatureFinderConstants.CheckerboardExhaustive"><summary>The exhaustive checkerboard feature finding algorithm will be used.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardFeatureFinderConstants.DotGrid"><summary>The dot grid feature finding algorithm will be used.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardFeatureFinderConstants.CheckerboardExhaustiveMultiRegion"><summary>Find features from every contiguous checkerboard region in which a DataMatrix fiducial is successfully decoded.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardFeatureFinderConstants.CheckerboardEfficient"><summary>The efficient checkerboard feature finding algorithm will be used.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardFeatureFinderConstants.CheckerboardEfficientMultiRegion"><summary>Efficiently find features from every contiguous checkerboard region in which a DataMatrix fiducial is successfully decoded.</summary></member><member name="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardAdjustmentSpaceConstants"><summary>Enumeration that specifies whether the parameters for adjusting the calibrated space are expressed in uncalibrated space, or in raw calibrated space.</summary><remarks><PARA>Enumeration that specifies whether the parameters for adjusting the calibrated space are expressed in uncalibrated space, or in raw calibrated space.</PARA></remarks></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardAdjustmentSpaceConstants.RawCalibrated"><remarks><PARA>The adjustment parameters are expressed in the raw calibrated coordinate space.  Note: the raw calibrated space is attached to the checkerboard calibration plate.</PARA></remarks><summary>The adjustment parameters are expressed in the raw calibrated coordinate space.  Note: the raw calibrated space is attached to the checkerboard calibration plate.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardAdjustmentSpaceConstants.Uncalibrated"><summary>The adjustment parameters are expressed in the uncalibrated coordinate space.  Note: the uncalibrated space is the selected space of the input image.</summary><remarks><PARA>The adjustment parameters are expressed in the uncalibrated coordinate space.  Note: the uncalibrated space is the selected space of the input image.</PARA></remarks></member><member name="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardCurrentRecordConstants"><remarks><PARA>
    Use these constants with
<see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboardTool.CurrentRecordEnable" /> to specify the 
<!--TAGFIX: 0 nodes matched the following tag --><see cref="u:Programming.Tools.Theory.ToolRecords">tool records</see> that the
CogCalibCheckerboard Tool
generates when you call
<see cref="M:Cognex.VisionPro.ICogTool.CreateCurrentRecord" />.
</PARA><PARA>
See <see cref="u:Programming.Tools.Theory.RecordKeys" cgnxAnchor="cogcalibcheckerboardtool_record_keys">About Record Keys</see>  for a list of the record keys that the tool uses.
</PARA></remarks><summary>Enumeration of data that can be provided in the Tool's CurrentRecord.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardCurrentRecordConstants.None"><summary>Do not include any data in the CurrentRecord.</summary><remarks><PARA>Do not include any data in the CurrentRecord.</PARA></remarks></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardCurrentRecordConstants.InputImage"><summary>Include the input image in the CurrentRecord.</summary><remarks><PARA>Include the input image in the CurrentRecord.</PARA></remarks></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardCurrentRecordConstants.UncalibratedAxes"><summary>Include the (non-interactive) coordinate axes that represent uncalibrated space in the CurrentRecord.</summary><remarks><PARA>Include the (non-interactive) coordinate axes that represent uncalibrated space in the CurrentRecord.</PARA></remarks></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardCurrentRecordConstants.CalibratedAxes"><remarks><PARA>If calibrated, include the (non-interactive) coordinate axes that represent calibrated space in the CurrentRecord.</PARA></remarks><summary>If calibrated, include the (non-interactive) coordinate axes that represent calibrated space in the CurrentRecord.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardCurrentRecordConstants.CalibrationImage"><remarks><PARA>Include the calibration image in the CurrentRecord.</PARA></remarks><summary>Include the calibration image in the CurrentRecord.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardCurrentRecordConstants.CalUncalibratedAxes"><summary>Include the (non-interactive) coordinate axes that represent uncalibrated space of the calibration image in the CurrentRecord.</summary><remarks><PARA>Include the (non-interactive) coordinate axes that represent uncalibrated space of the calibration image in the CurrentRecord.</PARA></remarks></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardCurrentRecordConstants.CalUncalibratedPoints"><remarks><PARA>Include the (non-interactive) uncalibrated points in the CurrentRecord.</PARA></remarks><summary>Include the uncalibrated points in the CurrentRecord.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardCurrentRecordConstants.CalCalibratedAxes"><remarks><PARA>Include the interactive graphic that that represents, and allows adjustment of, the axes of calibrated space in the CurrentRecord.</PARA></remarks><summary>Include the interactive graphic that that represents, and allows adjustment of, the axes of calibrated space in the CurrentRecord.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardCurrentRecordConstants.CalRawCalibratedAxes"><summary>Include the (non-interactive) coordinate axes that represent raw calibrated space in the CurrentRecord.</summary><remarks><PARA>Include the (non-interactive) coordinate axes that represent raw calibrated space in the CurrentRecord.</PARA></remarks></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardCurrentRecordConstants.CalRawCalibratedPoints"><remarks><PARA>Include the (non-interactive) raw calibrated points in the CurrentRecord.</PARA></remarks><summary>Include the raw calibrated points in the CurrentRecord.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardCurrentRecordConstants.UndistortedCalibrationImage"><summary>Include the undistorted calibration image in the CurrentRecord.</summary><remarks><PARA>Include the undistorted calibration image in the CurrentRecord.</PARA></remarks></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardCurrentRecordConstants.CalDestinationRectangle"><remarks><PARA>Include the interactive destination rectangle (for nonlinear warping) in the CurrentRecord.</PARA></remarks><summary>Include the interactive destination rectangle (for nonlinear warping) in the CurrentRecord.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardCurrentRecordConstants.CalUndistortedImageMask"><summary>Include the undistorted calibration image mask in the CurrentRecord.</summary><remarks><PARA>Include the undistorted calibration image mask in the CurrentRecord.</PARA></remarks></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardCurrentRecordConstants.All"><remarks><PARA>Include all data in the CurrentRecord.</PARA></remarks><summary>Include all data in the CurrentRecord.</summary></member><member name="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardLastRunRecordDiagConstants"><summary>Enumeration of diagnostic data that can be provided in the Tool's LastRunRecord.</summary><remarks><PARA>
    Use these constants with
<see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboardTool.LastRunRecordDiagEnable" /> to specify the 
diagnostic
<!--TAGFIX: 0 nodes matched the following tag --><see cref="u:Programming.Tools.Theory.ToolRecords">tool records</see> that the
CogCalibCheckerboard Tool
generates when you call
<see cref="M:Cognex.VisionPro.ICogTool.CreateLastRunRecord" />.
</PARA><PARA>
See <see cref="u:Programming.Tools.Theory.RecordKeys" cgnxAnchor="cogcalibcheckerboardtool_record_keys">About Record Keys</see>  for a list of the record keys that the tool uses.
</PARA></remarks></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardLastRunRecordDiagConstants.None"><summary>Do not include any diagnostic data in the LastRunRecord.</summary><remarks><PARA>Do not include any diagnostic data in the LastRunRecord.</PARA></remarks></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardLastRunRecordDiagConstants.InputImageByReference"><remarks><PARA>Include a reference to the input image in the LastRunRecord.</PARA></remarks><summary>Include a reference to the input image in the LastRunRecord.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardLastRunRecordDiagConstants.UncalibratedAxes"><summary>Include the coordinate axes that represent uncalibrated space in the LastRunRecord.</summary><remarks><PARA>Include the coordinate axes that represent uncalibrated space in the LastRunRecord.</PARA></remarks></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardLastRunRecordDiagConstants.CalibratedAxes"><remarks><PARA>Include the coordinate axes that represent calibrated space in the LastRunRecord.</PARA></remarks><summary>Include the coordinate axes that represent calibrated space in the LastRunRecord.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardLastRunRecordDiagConstants.OutputImageMask"><summary>Include the output image mask (for nonlinear warping) in the LastRunRecord.</summary><remarks><PARA>Include the output image mask (for nonlinear warping) in the LastRunRecord.</PARA></remarks></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardLastRunRecordDiagConstants.All"><remarks><PARA>Include all diagnostic data in the LastRunRecord.</PARA></remarks><summary>Include all diagnostic data in the LastRunRecord.</summary></member><member name="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardLastRunRecordConstants"><remarks><PARA>
    Use these constants with
<see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboardTool.LastRunRecordEnable" /> to specify the 
<!--TAGFIX: 0 nodes matched the following tag --><see cref="u:Programming.Tools.Theory.ToolRecords">tool records</see> that the
CogCalibCheckerboard Tool
generates when you call
<see cref="M:Cognex.VisionPro.ICogTool.CreateLastRunRecord" />.
</PARA><PARA>
See <see cref="u:Programming.Tools.Theory.RecordKeys" cgnxAnchor="cogcalibcheckerboardtool_record_keys">About Record Keys</see>  for a list of the record keys that the tool uses.
</PARA></remarks><summary>Enumeration of non-diagnostic data that can be provided in the Tool's LastRunRecord.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardLastRunRecordConstants.None"><summary>Do not include any of the non-diagnostic data in the LastRunRecord.</summary><remarks><PARA>Do not include any of the non-diagnostic data in the LastRunRecord.</PARA></remarks></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardLastRunRecordConstants.OutputImage"><remarks><PARA>Include the output image in the LastRunRecord.</PARA></remarks><summary>Include the output image in the LastRunRecord.</summary></member><member name="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboardLastRunRecordConstants.All"><summary>Include all non-diagnostic data in the LastRunRecord.</summary><remarks><PARA>Include all non-diagnostic data in the LastRunRecord.</PARA></remarks></member><member name="F:Cognex.VisionPro.CalibFix.Implementation.Internal.CogCalibCheckerboardWarpParams.SfWarpMaxErrorInPixels"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by WarpMaxErrorInPixels may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.Implementation.Internal.CogCalibCheckerboardWarpParams.SfWarpDestinationRectangle"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by WarpDestinationRectangle may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.Implementation.Internal.CogCalibCheckerboardWarpParams.SfWarpScaling"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by WarpScaling may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.Implementation.Internal.CogCalibCheckerboardWarpParams.SfWarpRotation"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by WarpRotation may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.Implementation.Internal.CogCalibCheckerboardWarpParams.SfUndistortedCalibrationImage"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by UndistortedCalibrationImage may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.Implementation.Internal.CogCalibCheckerboardWarpParams.SfUndistortedCalibrationImageMask"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by UndistortedCalibrationImageMask may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.Implementation.Internal.CogCalibCheckerboardWarpParams.SfOutputImageMask"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by OutputImageMask may have changed.</summary></member><member name="F:Cognex.VisionPro.CalibFix.Implementation.Internal.CogCalibCheckerboardWarpParams.SfGetOutputImageRootFromCalibratedTransform"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by GetOutputImageRootFromCalibratedTransform may have changed.</summary></member><member name="P:Cognex.VisionPro.CalibFix.Implementation.Internal.CogCalibCheckerboardWarpParams.OutputImageMask"><summary>Returns the output image mask, if it has been computed and contains any 'Don't Care' pixels.  Otherwise, returns Nothing.  'Don't Care' pixels (value = 0) in this mask identify unfilled locations in the runtime output image.</summary><remarks><PARA>
Returns the output image mask, if it has been computed and contains any 'Don't Care' pixels.  Otherwise, returns Nothing.  'Don't Care' pixels (value = 0) in this mask identify 
<see cref="u:Framework.CalibrationAndFixturing.Theory.NonlinearCalib" cgnxAnchor="destination_rectangle">unfilled locations</see> 
in the runtime output image.
	</PARA><PARA>
You can use the returned mask to exclude the undefined pixel values from processing by vision tools that 
support masks.
</PARA><NOTE>The returned mask is the same size as the <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboardTool.OutputImage" />, but it does not contain the calibrated coordinate space in its 
coordinate space tree.</NOTE><DEFAULT>Null</DEFAULT></remarks></member><member name="P:Cognex.VisionPro.CalibFix.Implementation.Internal.CogCalibCheckerboardWarpParams.UndistortedCalibrationImageMask"><remarks><PARA>
Returns the undistorted calibration image mask, if it has been computed and contains any 'Don't Care' pixels.  Otherwise, returns Nothing.  'Don't Care' pixels (value = 0) in this mask identify 
<see cref="u:Framework.CalibrationAndFixturing.Theory.NonlinearCalib" cgnxAnchor="destination_rectangle">unfilled locations</see> 
in the undistorted calibration image.
	</PARA><NOTE>The returned mask is the same size as the <see cref="P:Cognex.VisionPro.CalibFix.ICogCalibCheckerboardWarpParams.UndistortedCalibrationImage" />, but its coordinate space tree contains only root space.</NOTE><DEFAULT>Null</DEFAULT></remarks><summary>Returns the undistorted calibration image mask, if it has been computed and contains any 'Don't Care' pixels.  Otherwise, returns Nothing.  'Don't Care' pixels (value = 0) in this mask identify unfilled locations in the undistorted calibration image.</summary></member><member name="P:Cognex.VisionPro.CalibFix.Implementation.Internal.CogCalibCheckerboardWarpParams.UndistortedCalibrationImage"><summary>Returns the undistorted calibration image, if it has been computed.  Otherwise, returns Nothing.  This image is produced by warping the entire calibration image (ignoring the WarpDestinationRectangle).</summary><remarks><PARA>
Returns the undistorted calibration image, if it has been computed.  Otherwise, returns Nothing.  This image is 
produced by warping the entire calibration image (ignoring the <see cref="P:Cognex.VisionPro.CalibFix.ICogCalibCheckerboardWarpParams.WarpDestinationRectangle" />).
</PARA><PARA>
The tool computes this undistorted calibration image to make it easier to specify the 
<see cref="P:Cognex.VisionPro.CalibFix.ICogCalibCheckerboardWarpParams.WarpDestinationRectangle" />. The undefined pixels in the image are set to 128. You can use the  <see cref="P:Cognex.VisionPro.CalibFix.ICogCalibCheckerboardWarpParams.UndistortedCalibrationImageMask" />
to determine which pixels are undefined.
</PARA><NOTE>The coordinate space tree of this image contains root space only.</NOTE></remarks></member><member name="P:Cognex.VisionPro.CalibFix.Implementation.Internal.CogCalibCheckerboardWarpParams.WarpRotation"><event cref="E:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Changed" cgnxEvent="singleState"><para>
		
In linear mode, fires when the value of this property changes.
In warping mode, fires when the value of this property changes and  <see cref="u:Framework.CalibrationAndFixturing.Theory.CheckCalibSteps">step 3</see> has not completed. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogCalibCheckerboardWarpParams_WarpRotation--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfWarpRotation" /></li></ul></event><event cref="E:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Changed" cgnxEvent="multiState"><para>
		
In warping mode, fires when the value of this property changes and <see cref="u:Framework.CalibrationAndFixturing.Theory.CheckCalibSteps">step 3</see> has been completed.
If <see cref="u:Framework.CalibrationAndFixturing.Theory.CheckCalibSteps">step 5</see> was completed, the following state flags are affected:
</para><ul><!--FA:cogFA_CalibCheckerboard_ComputeResults--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibrated" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetComputedUncalibratedFromCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetComputedUncalibratedFromRawCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfComputedRMSError" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetInfoStrings" /></li></ul></event><summary>Specifies the rotation, in radians, of the output image.  It is the pixel-space angle from the x-axis of the output image to the x-axis of raw calibrated space.  This property allows you to rotate the image during warping.</summary><remarks><PARA>
Specifies the rotation, in radians, of the output image.  It is the pixel-space angle from the x-axis of the output image to the x-axis of raw calibrated space.  This property allows you to rotate the image during warping.
</PARA><PARA>
Note that by default, the tool always rotates the image during warping so that the x-axis of the 
raw calibrated space is aligned with the x-axis of the warped image.
</PARA><DEFAULT>0.0</DEFAULT></remarks></member><member name="P:Cognex.VisionPro.CalibFix.Implementation.Internal.CogCalibCheckerboardWarpParams.WarpScaling"><summary>Specifies an additional scaling factor to be applied during warping.  For example, a value of 2 means that the undistorted image will be approximately twice as high and twice as wide as the input image.</summary><remarks><PARA>
	Specifies an additional scaling factor to be applied during warping.  For example, a value of 2 means that the undistorted image will be approximately twice as high and twice as wide as the input image.
</PARA><DEFAULT>1.0</DEFAULT></remarks><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The new value is &lt;= 0.0.</para></exception><event cref="E:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Changed" cgnxEvent="singleState"><para>
		
In linear mode, fires when the value of this property changes.
In warping mode, fires when the value of this property changes and  <see cref="u:Framework.CalibrationAndFixturing.Theory.CheckCalibSteps">step 3</see> has not completed. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogCalibCheckerboardWarpParams_WarpScaling--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfWarpScaling" /></li></ul></event><event cref="E:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Changed" cgnxEvent="multiState"><para>
		
In warping mode, fires when the value of this property changes and <see cref="u:Framework.CalibrationAndFixturing.Theory.CheckCalibSteps">step 3</see> has been completed.
If <see cref="u:Framework.CalibrationAndFixturing.Theory.CheckCalibSteps">step 5</see> was completed, the following state flags are affected:
</para><ul><!--FA:cogFA_CalibCheckerboard_ComputeResults--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibrated" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetComputedUncalibratedFromCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetComputedUncalibratedFromRawCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfComputedRMSError" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetInfoStrings" /></li></ul></event></member><member name="P:Cognex.VisionPro.CalibFix.Implementation.Internal.CogCalibCheckerboardWarpParams.WarpDestinationRectangle"><event cref="E:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Changed" cgnxEvent="singleState"><para>
		
In linear mode, fires when the value of this property changes.
In warping mode, fires when the value of this property changes and <see cref="u:Framework.CalibrationAndFixturing.Theory.CheckCalibSteps">step 4</see> has not completed. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogCalibCheckerboardWarpParams_WarpDestinationRectangle--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfWarpDestinationRectangle" /></li></ul></event><event cref="E:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Changed" cgnxEvent="multiState"><para>
		
In warping mode, fires when the value of this property changes and <see cref="u:Framework.CalibrationAndFixturing.Theory.CheckCalibSteps">step 4</see> has been completed.
If <see cref="u:Framework.CalibrationAndFixturing.Theory.CheckCalibSteps">step 5</see> was completed, the following state flags are affected:
</para><ul><!--FA:cogFA_CalibCheckerboard_ComputeResults--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibrated" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetComputedUncalibratedFromCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetComputedUncalibratedFromRawCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfComputedRMSError" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetInfoStrings" /></li></ul></event><summary>Rectangle of the undistorted calibration image that specifies what pixels will be present in the warped (runtime) output image.  If the rectangle is Nothing, all the pixels of the undistorted image will be output.  It must be in '.', '@', or '#' space.</summary><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The selected space name of the rectangle was not '.', '@', or '#'.</para></exception><remarks><PARA><see cref="u:Framework.CalibrationAndFixturing.Theory.NonlinearCalib" cgnxAnchor="destination_rectangle">Rectangle</see> 
	of the undistorted calibration image that specifies what pixels will be present in the warped (runtime) output image.  If the rectangle is Nothing, all the pixels of the undistorted image will be output.  It must be in '.', '@', or '#' space.</PARA><PARA>
This rectangle, which is expressed in pixel space of the 
<see cref="P:Cognex.VisionPro.CalibFix.ICogCalibCheckerboardWarpParams.UndistortedCalibrationImage" />, specifies the size 
and position of the run-time <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboardTool.OutputImage" />.
The rectangle you specify is rounded to integer coordinates and its intersection with 
the <see cref="P:Cognex.VisionPro.CalibFix.ICogCalibCheckerboardWarpParams.UndistortedCalibrationImage" /> is computed to produce the final
output image. If this rectangle does not intersect with the <see cref="P:Cognex.VisionPro.CalibFix.ICogCalibCheckerboardWarpParams.UndistortedCalibrationImage" />, <see cref="M:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Calibrate" /> 
returns an error.
</PARA><NOTE>
Changing this rectangle untrains the tool.
</NOTE><DEFAULT>Null</DEFAULT></remarks></member><member name="P:Cognex.VisionPro.CalibFix.Implementation.Internal.CogCalibCheckerboardWarpParams.WarpMaxErrorInPixels"><event cref="E:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Changed" cgnxEvent="singleState"><para>
		
In linear mode, fires when the value of this property changes.
In warping mode, fires when the value of this property changes and  <see cref="u:Framework.CalibrationAndFixturing.Theory.CheckCalibSteps">step 3</see> has not completed. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogCalibCheckerboardWarpParams_WarpMaxErrorInPixels--><ul><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfWarpMaxErrorInPixels" /></li></ul></event><event cref="E:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Changed" cgnxEvent="multiState"><para>
		
In warping mode, fires when the value of this property changes and <see cref="u:Framework.CalibrationAndFixturing.Theory.CheckCalibSteps">step 3</see> has been completed.
If <see cref="u:Framework.CalibrationAndFixturing.Theory.CheckCalibSteps">step 5</see> was completed, the following state flags are affected:
</para><ul><!--FA:cogFA_CalibCheckerboard_ComputeResults--><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfCalibrated" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetComputedUncalibratedFromCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetComputedUncalibratedFromRawCalibratedTransform" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfComputedRMSError" /></li><li><see cref="F:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.SfGetInfoStrings" /></li></ul></event><summary>The maximum error allowed during image warping, measured in pixels of the calibration image.  It limits the error between a mathematically perfect warping and the (much faster) one implemented by this object.  Smaller values yield more accurate warping.</summary><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The new value is &lt;= 0.0.</para></exception><remarks><PARA>
The 
<see cref="u:Framework.CalibrationAndFixturing.Theory.NonlinearCalib" cgnxAnchor="maximum_warping_error">maximum error</see> 
allowed during image warping, measured in pixels of the calibration image.  It limits the error between a mathematically perfect warping and the (much faster) one implemented by this object.  Smaller values yield more accurate warping.
</PARA><DEFAULT>0.01</DEFAULT></remarks></member><member name="M:Cognex.VisionPro.CalibFix.Implementation.Internal.CogCalibCheckerboardWarpParams.GetOutputImageRootFromCalibratedTransform"><remarks><PARA>Returns the 2D linear transformation that maps points from calibrated space into the root (@) space of the output image, if it has been computed.  Otherwise, returns Nothing.  The transform is computed by calling 
<see cref="M:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Calibrate" />.</PARA><PARA>
The transformation returned by this function is added to the coordinate space tree of the output tree by the 
Checkerboard Calibration tool at run time. The returned transformation can be thought of as the linear component of 
the overall calibration transformation. The nonlinear part, which is not added to the coordinate space tree, can be 
obtained by calling <see cref="M:Cognex.VisionPro.CalibFix.ICogCalibCheckerboardWarpParams.GetInputPixelFromOutputPixelTransform(Cognex.VisionPro.ICogImage)" />.
</PARA><PARA>
	This function returns Nothing if <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Calibrated" /> is false or if 
<see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.ComputationMode" /> is 
<see cref="T:Cognex.VisionPro.CalibFix.CogCalibFixComputationModeConstants">Linear</see>.
</PARA></remarks><returns><PARA>The returned transformation.</PARA></returns><summary>Returns the 2-D linear transformation that maps points from calibrated space into the root (@) space of the output image, if it has been computed.  Otherwise, returns Nothing.  The transform is computed by calling Calibrate.</summary></member><member name="M:Cognex.VisionPro.CalibFix.Implementation.Internal.CogCalibCheckerboardWarpParams.GetInputPixelFromOutputPixelTransform(Cognex.VisionPro.ICogImage)"><param name="inputImage"><PARA>The input image from which the transformation is computed.</PARA></param><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The transform between the selected space of <paramref name="inputImage" /> and its pixels differs by more than a 
<see cref="u:Framework.CalibrationAndFixturing.Theory.NonlinearCalib" cgnxAnchor="wholepixel_image_shift">whole-pixel shift</see> 
from the similar transform contained in the calibration image.
    </para></exception><summary>Returns a 2-D warping transform that maps points from pixel space of an output image - one created by calling Execute with the current params - into pixel space of the given input image.  Returns Nothing if this object is uncalibrated or in linear mode.</summary><remarks><PARA>
Returns a 2D transformation that maps points from the pixel space of the warped output image produced by 
running this tool to the pixel space of an input image that you supply. 
	</PARA><PARA>
Keep in mind that when the Checkerboard Calibration tool produces a warped image at run time, the newly warped image 
does not contain a transformation that maps between the warped and unwarped pixels. This function is the only way 
of obtaining this transformation.
</PARA><PARA>
	This function returns Nothing if <see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.Calibrated" /> is false or if 
	<see cref="P:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.ComputationMode" /> is
	<see cref="T:Cognex.VisionPro.CalibFix.CogCalibFixComputationModeConstants">Linear</see>.
</PARA></remarks><returns><PARA>The returned transformation.</PARA></returns></member><member name="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboard.ChangedEventHandler"><summary>Occurs when one or more parts of the object's state may have changed.</summary></member><member name="T:Cognex.VisionPro.CalibFix.CogCalibCheckerboardRunParams.ChangedEventHandler"><summary>Occurs when one or more parts of the object's state may have changed.</summary></member><member name="T:Cognex.VisionPro.CalibFix.CogCalibNPointToNPoint.ChangedEventHandler"><summary>Occurs when one or more parts of the object's state may have changed.</summary></member><member name="T:Cognex.VisionPro.CalibFix.CogCalibNPointToNPointRunParams.ChangedEventHandler"><summary>Occurs when one or more parts of the object's state may have changed.</summary></member><member name="T:Cognex.VisionPro.CalibFix.CogFixture.ChangedEventHandler"><summary>Occurs when one or more parts of the object's state may have changed.</summary></member><member name="T:Cognex.VisionPro.CalibFix.CogFixtureNPointToNPoint.ChangedEventHandler"><summary>Occurs when one or more parts of the object's state may have changed.</summary></member><member name="T:Cognex.VisionPro.CalibFix.CogNPointToNPoint.ChangedEventHandler"><summary>Occurs when one or more parts of the object's state may have changed.</summary></member></members></doc>